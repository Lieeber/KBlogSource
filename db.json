{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":1,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":1,"renderable":0},{"_id":"themes/next/source/404.html","path":"404.html","modified":1,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"415a6b34a4634256f185bb66e88e6d2e38cd0b23","modified":1530015211571},{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1530015211621},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1530015211621},{"_id":"source/favicon.ico","hash":"3ad6bd15a0c056698dcbfe101ac24d434adc0ec2","modified":1530015211591},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1530015211621},{"_id":"themes/next/.gitignore","hash":"b935cc0e5b099ebd343ca1766e02f65138c13dd0","modified":1530015211621},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1530015211621},{"_id":"themes/next/.javascript_ignore","hash":"74b54cf920cbbf4038a68e54b7138af8b8f45588","modified":1530015211621},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1530015211621},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1530015211621},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1530015211621},{"_id":"themes/next/.travis.yml","hash":"360f38044910e74bf628b0799e19db90718b2cbe","modified":1530015211621},{"_id":"themes/next/README.en.md","hash":"953873fe2ee79bfc567b16dcdf8f91c1410444f8","modified":1530015211621},{"_id":"themes/next/_config.yml","hash":"bf5eaa1eaf1008c8cac7c8874f21cc0cef3c3693","modified":1530015211621},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1530015211621},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1530015211621},{"_id":"themes/next/bower.json","hash":"936b9aed1934471bb74cdaacc3fb8031eb01fe23","modified":1530015211621},{"_id":"themes/next/package.json","hash":"55305ae40690c059cb9140900eb20f9e7f3a7707","modified":1530015211651},{"_id":"source/about/index.md","hash":"4d8050c672ed3a19a4e6d3af2df5da04d898298a","modified":1530015211591},{"_id":"source/_posts/Android Studio-Android发布项目到jcenter.md","hash":"d6dd5f340a27fe062f48a5460534be73703a11df","modified":1530091746001},{"_id":"source/_posts/Android Studio-发布自己的开源库到JitPack.md","hash":"76478e844cd036aac512a464353be45610457a9c","modified":1530092965093},{"_id":"source/_posts/Android Studio-用gradle统一版本.md","hash":"4b6f2faf4d724bedeab83d8aefb28507c2f1fc1e","modified":1530015211571},{"_id":"source/_posts/Java虚拟机--垃圾收集器与内存分配策略.md","hash":"af569036fe2001c9ace49e04387045fcd11ba455","modified":1530015211581},{"_id":"source/_posts/Hexo使用上的一些小tips.md","hash":"1ac2ef6b8d6c631e910549c9db71eab69bdff1c7","modified":1530015211571},{"_id":"source/_posts/Java虚拟机--自动内存管理机制.md","hash":"b06edaca030409e83fb36949c45161c1ec8db4cd","modified":1530015211581},{"_id":"source/_posts/Markdown的使用.md","hash":"ce34f639062a16ee3bd03597a78373eebc13dc89","modified":1530015211581},{"_id":"source/_posts/PySpider爬取mzitu图片.md","hash":"60c0be5164191eb0924eda5ff530d5949359f383","modified":1530015211581},{"_id":"source/_posts/PySpider爬取糗事百科文章和图片.md","hash":"69a3ed03e114a3d490e3c9e6251af552ea25b381","modified":1530015211581},{"_id":"source/_posts/Scrapy爬取顶点小说.md","hash":"c0c151e31561ecfddc363725dc8d518560621506","modified":1530015211581},{"_id":"source/_posts/后缀表达式算术表达式.md","hash":"7d91306843d58584c9b6e8f82959dde5924246d6","modified":1530015211581},{"_id":"source/_posts/博客搭建完成，记录一下步骤.md","hash":"480e384754a291eb429bf89a388c4a447491be89","modified":1530029384520},{"_id":"source/_posts/数据结构-串.md","hash":"16bc62c5ee5cd3e1627fcc763f7133da74715dc8","modified":1530015211581},{"_id":"source/_posts/数据结构-排序.md","hash":"ac9ed255a62057ccb124bd07e4c416ddd1469745","modified":1530015211581},{"_id":"source/_posts/数据结构-数据结构绪论.md","hash":"2bdf933e5f2eb0267a0182374940363fe64b3cf6","modified":1530015211581},{"_id":"source/_posts/数据结构-查找.md","hash":"fde6b38d56cce310e1b8c902e5fc36bdd70ea3d9","modified":1530015211581},{"_id":"source/_posts/数据结构-栈与队列.md","hash":"2a1a99ad5c5c32359bf0d078fafe029f8ead004b","modified":1530015211581},{"_id":"source/_posts/数据结构-用Java实现各种排序.md","hash":"bc1e735e0a65e667e83c85ed13a42058d010679a","modified":1530015211581},{"_id":"source/_posts/数据结构-线性表.md","hash":"904b8fe36990105d5d81be1cecb20d1d20ef95e1","modified":1530015211581},{"_id":"source/_posts/数据结构-树.md","hash":"b7e3c33d7eec3d39daf2ac07b7d8aef56a001354","modified":1530015211581},{"_id":"source/_posts/爬取盗墓笔记生成json.md","hash":"97be2399dc5df8d0d70c816cce795e7fc0b297a4","modified":1530015211581},{"_id":"source/_posts/自定义控件-PathMeasure的使用.md","hash":"2ecd52d3cdf745e08b0714b3142855d10525f57e","modified":1530015211581},{"_id":"source/_posts/自定义控件-TextureVideoView的使用.md","hash":"47707541534ecb066252d72db3d05a6ffd0db707","modified":1530015211581},{"_id":"source/_posts/自定义控件-Canvas对绘制的辅助.md","hash":"3310b4f2026e50ede09f4a40e769ec9c6309407e","modified":1530015211581},{"_id":"source/_posts/自定义控件-属性动画.md","hash":"be162533473fb3c11222cc618f3bf8c8999bf8eb","modified":1530015211581},{"_id":"source/_posts/自定义控件-文字的绘制.md","hash":"27086f11a8fced67951cd076aef4b6afa44486f8","modified":1530015211581},{"_id":"source/_posts/自定义控件-自定义View绘制顺序.md","hash":"ddf1713392ef63e54ce9886ad54876e4c83ccc4c","modified":1530015211581},{"_id":"source/_posts/自定义控件-自定义绘制.md","hash":"648d482178c2c6783b4dddc9a689040da9d149e8","modified":1530015211581},{"_id":"source/_posts/自定义控件-自定义画板.md","hash":"b442eb27b928677255cfdd4169cd89b6598be1c6","modified":1530029723254},{"_id":"source/_posts/计算机操作系统-处理机调度和死锁.md","hash":"97cb581819ba63c990806c5e3ea78f8ded41a7bd","modified":1530015211581},{"_id":"source/_posts/计算机操作系统-进程同步.md","hash":"e0d415b9425729eb18a393c61148ab3b259dbf4a","modified":1530015211581},{"_id":"source/_posts/计算机操作系统-进程控制.md","hash":"0fd33a5ce324ae51d65e91dccdf2b1405ec8841a","modified":1530015211581},{"_id":"source/_posts/计算机操作系统-进程的基本概念.md","hash":"1e4b814760ba8f6f3b20978b40cd88871c97f27d","modified":1530015211581},{"_id":"source/_posts/计算机操作系统-进程通信.md","hash":"cffc8229023e191c843ad4ea74ea93c194cc1ecd","modified":1530015211581},{"_id":"source/_posts/计算机网络-物理层.md","hash":"27104ce7d9ec1572e90639936c991fa573952f47","modified":1530015211581},{"_id":"source/_posts/计算机网络-数据链路层.md","hash":"8f7db77b680bbe5506004e00fddc5edf8c4f0b55","modified":1530015211581},{"_id":"source/_posts/计算机网络-计算机网络概述.md","hash":"92e9306e427ad3dc7bf4e9da9aeca1b97f8ef265","modified":1530015211591},{"_id":"source/categories/index.md","hash":"7eb51a18151d22af96940d433f4de3a365b70f79","modified":1530015211591},{"_id":"source/tags/index.md","hash":"437c4b001de8623942ebd10b856dd6e98244144a","modified":1530015211591},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1530015211621},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"4de856de657a27f340f245eb491a1f52ceba1735","modified":1530015211621},{"_id":"themes/next/layout/_layout.swig","hash":"0f547afe52721ffcbbc32bbf18d1041f1b546685","modified":1530015211631},{"_id":"themes/next/layout/archive.swig","hash":"a1d1e91013baaaeb7deaf35c6d3975971ce38e02","modified":1530015211651},{"_id":"themes/next/layout/category.swig","hash":"f315f12651de8065fdad73b003da4335ef177173","modified":1530015211651},{"_id":"themes/next/layout/index.swig","hash":"4bf29f44ca9519a005671f2f2a79a48a148b435b","modified":1530015211651},{"_id":"themes/next/layout/page.swig","hash":"22ba721a9688d490fc66f360e5a319288b63b05a","modified":1530015211651},{"_id":"themes/next/layout/post.swig","hash":"182a99b1f6db0350106c6bb480fede0bbdb7e40f","modified":1530015211651},{"_id":"themes/next/layout/schedule.swig","hash":"8086f1163b10460258ecbbbe48b057b22bb2f02e","modified":1530015211651},{"_id":"themes/next/layout/tag.swig","hash":"cc9878932580c890f8f3e569225e29bb37e25b49","modified":1530015211651},{"_id":"themes/next/languages/de.yml","hash":"4be3e7d296d5592e0d111dfa6cbbff02602c972d","modified":1530015211631},{"_id":"themes/next/languages/en.yml","hash":"b3ee45143bc014578db6b8ac0573f7c7b143a743","modified":1530015211631},{"_id":"themes/next/languages/default.yml","hash":"d912814caac150da1611c96843371a87714e52f9","modified":1530015211631},{"_id":"themes/next/languages/id.yml","hash":"c0848e93bf33a1333ff232905b6b392b1e056dd1","modified":1530015211631},{"_id":"themes/next/languages/fr-FR.yml","hash":"0d5bd8bbbeafb72506124ed35e7509debc753612","modified":1530015211631},{"_id":"themes/next/languages/ja.yml","hash":"1a608dc799c0f9c36b626bac6fe3404acb45b86d","modified":1530015211631},{"_id":"themes/next/languages/ko.yml","hash":"5c811514aef401317a9ec38b95679d6d2ef0ad42","modified":1530015211631},{"_id":"themes/next/languages/pt-BR.yml","hash":"cc8b5a67ec87b0d5aec6e253bab67ec3cfe3069c","modified":1530015211631},{"_id":"themes/next/languages/pt.yml","hash":"943475a7d681f37ede579cd62da9c50568ca0f8d","modified":1530015211631},{"_id":"themes/next/languages/ru.yml","hash":"84d41a111e497236b2c1fa16e9b91668a1f37037","modified":1530015211631},{"_id":"themes/next/languages/zh-Hans.yml","hash":"3111ce4cc5f30868b3628f9f805d2aef3b75d1c1","modified":1530015211631},{"_id":"themes/next/languages/zh-hk.yml","hash":"b58c0d85daa4d62b0c9753a59de0739aa0120735","modified":1530015211631},{"_id":"themes/next/languages/zh-tw.yml","hash":"8ce0a32411de111ae39d08e4bc936767dacdeb08","modified":1530015211631},{"_id":"themes/next/scripts/merge-configs.js","hash":"3ce1be32bb77ee19da25e8dae7dc04e2afc46ca1","modified":1530015211651},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1530015211651},{"_id":"themes/next/source/404.html","hash":"fcbf1948f29244ba96de09782a73453616fe0394","modified":1530015211661},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1530015211741},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1530015211741},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1530015211741},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530015211691},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1530015211631},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1530015211631},{"_id":"themes/next/layout/_partials/comments.swig","hash":"5258c03149aa18e9abfeb8de10e435a406d9c924","modified":1530015211631},{"_id":"themes/next/layout/_partials/footer.swig","hash":"b79cf3bb7c5f9cf842a57f85f531616b4a0afb0c","modified":1530015211631},{"_id":"themes/next/layout/_partials/head.swig","hash":"09b110f77c415c5b71ebd886771a10bc84b95633","modified":1530015211631},{"_id":"themes/next/layout/_partials/header.swig","hash":"d6bf1d1554d91eaf1bfc40ba8905ae81673e5f45","modified":1530015211631},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1530015211641},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1530015211631},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1530015211641},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"506feb56e9b1091187d2014742f63a17758df933","modified":1530015211631},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1530015211631},{"_id":"themes/next/layout/_macro/reward.swig","hash":"b6cb171f0ed227b82b8f7601814af2df93f3a09a","modified":1530015211631},{"_id":"themes/next/layout/_macro/post.swig","hash":"6f3c6078b9dbc238ccf86fb228c24c0b94f67d47","modified":1530015211631},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"4b029551ddb44c53f895e96cf8ff5ffbe02322fb","modified":1530015211631},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"c5cc0070ca7c9a8dbd4b09e0398db536c3cdbe8a","modified":1530015211631},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1530015211641},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1530015211641},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"53c894e6f3573c662dc4e4f7b5a6f1a32f1a8c94","modified":1530015211641},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1530015211651},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1530015211651},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1530015211651},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1530015211651},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1530015211651},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1530015211651},{"_id":"themes/next/scripts/tags/button.js","hash":"aaf71be6b483fca7a65cd6296c2cf1c2271c26a6","modified":1530015211651},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1530015211651},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1530015211651},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1530015211651},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1530015211661},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1530015211661},{"_id":"themes/next/scripts/tags/note.js","hash":"fc4958427ca7bdb47a7d830077f432ed824973e4","modified":1530015211661},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1530015211691},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1530015211691},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1530015211691},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1530015211691},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1530015211691},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1530015211691},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1530015211691},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1530015211691},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1530015211691},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1530015211691},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1530015211691},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1530015211691},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1530015211691},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1530015211691},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1530015211691},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530015211641},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530015211641},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530015211681},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530015211681},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530015211681},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530015211691},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1530015211691},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1530015211631},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1530015211631},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1530015211641},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1530015211641},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1530015211641},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1530015211641},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1530015211641},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1530015211641},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1530015211641},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1530015211641},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1530015211641},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1530015211641},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1530015211641},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"7b11eac3a0685fa1ab2ab6ecff60afc4f15f0d16","modified":1530015211641},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1530015211641},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1530015211641},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"441f1a1b4e2f652d3b975995bd9d44ff4866f057","modified":1530015211641},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"a79e7e0d809fcf407593dd7ed9e023db21c3cbd6","modified":1530015211641},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e495aed8fb36bf8015ddbd64366270a7debad2b0","modified":1530015211641},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1530015211641},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1530015211641},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1530015211641},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1530015211641},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1530015211641},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1530015211641},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1530015211651},{"_id":"themes/next/layout/_third-party/comments/gentie.swig","hash":"0f38f053841ef77cdce56a84cfbb4dd4c3329486","modified":1530015211641},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"0399bbdc524ba50930cb6f8e2d5628ff682fc612","modified":1530015211651},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"c75024151fc63220e7d01035d8a1aff9affdecc7","modified":1530015211651},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"de95ec8920d1660680078451008f8bd69f14d082","modified":1530015211651},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1530015211651},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1530015211651},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1530015211651},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1530015211651},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"ce9a93d3e47a36d1f4aa804db758127aa2ac04e0","modified":1530015211681},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"a0f23e75a137d8c996c70e2059e0074f1e97a127","modified":1530015211681},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"531934ea21ef4dc9f0978512050f54834f0a6cff","modified":1530015211681},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1530015211691},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"09534b68bd1a708729b3cfffe17737e3af457757","modified":1530015211691},{"_id":"themes/next/source/css/_variables/base.styl","hash":"dacede1cc110c762e7a5468dc0e34ae1a962d5aa","modified":1530015211691},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1530015211691},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0ec035e20d1f26bf553a79877180ba312bea885c","modified":1530015211691},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1530015211691},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1530015211691},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1530015211691},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1530015211691},{"_id":"themes/next/source/js/src/post-details.js","hash":"bfaf52b69aad96566aa21b785973441a2555b4ba","modified":1530015211691},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1530015211691},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1530015211691},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1530015211701},{"_id":"themes/next/source/js/src/utils.js","hash":"c976214b8bbaa9512b886bf3687e94696f705e33","modified":1530015211701},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1530015211701},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"82fee688910efc644d3d1c3305c6ae28ba3f38f9","modified":1530015211701},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1530015211701},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1530015211711},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1530015211711},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1530015211711},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1530015211711},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1530015211711},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1530015211711},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1530015211711},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1530015211711},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1530015211711},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1530015211721},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1530015211721},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1530015211721},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1530015211721},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1530015211721},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1530015211721},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1530015211721},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1530015211721},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1530015211721},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1530015211731},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1530015211721},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1530015211731},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1530015211731},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1530015211731},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1530015211731},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1530015211731},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1530015211731},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1530015211731},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1530015211731},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1530015211731},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1530015211731},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1530015211731},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1530015211731},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1530015211731},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1530015211731},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1530015211731},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1530015211741},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1530015211741},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1530015211741},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1530015211721},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1530015211651},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1530015211651},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"4ba6f2a615693b9b5afc266d9c833697016085fd","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"1dc2ed435e41ca041f43bd9633d5d95139afbb42","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1530015211661},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1530015211681},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1530015211671},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"4998bedff9c84a09a294b8ef36ede2e3644d3528","modified":1530015211681},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1530015211681},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1530015211681},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1530015211681},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1530015211681},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1530015211681},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1530015211681},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"f23ac53ab901c48859dd29eee6e386b60ff956ba","modified":1530015211681},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1530015211681},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1530015211681},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1530015211681},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1530015211681},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1530015211681},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1530015211681},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"c48d4a561d047b3705924949b3ab7b57bee94ecd","modified":1530015211681},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1530015211691},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1530015211681},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1530015211681},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1530015211681},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1530015211681},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"ce272226a1570f5f7c70243b751a5b0fe1671a88","modified":1530015211681},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1530015211681},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1530015211681},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"c4358416f0a116d7f4037542fa3b385947e80908","modified":1530015211691},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"95518d298d3c5c271faec2e4977df9e5dedd5d84","modified":1530015211701},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1530015211701},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1530015211701},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1530015211701},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1530015211711},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1530015211711},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1530015211711},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1530015211711},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1530015211711},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1530015211711},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1530015211711},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1530015211711},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1530015211711},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1530015211711},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1530015211711},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1530015211711},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1530015211731},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1530015211731},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"524cfca7b6ab135d81ea723d8de06fdf0dbe7e56","modified":1530015211701},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1530015211701},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1530015211721},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1530015211721},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1530015211741},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"b3b783511bbd94af7e941abf8ff411885db7395b","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"4783f85872bc7e218c1522a5c1c68cd27a5922db","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"58f9e6aba94733244a87d2ba5966c5a009486509","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"658accf8e196721f295003da66941e6d1f7b81b0","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"8355b0e9375b3245508efda0e18acd069c2aa767","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"350469437b20ecfd6f3ca45e400478f8e3f71cfb","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"2cb09973d29a8e34e2a3425ac6e0938296970d8e","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bc08cfb2ef2ff44ba3fc7dffdb2deb01a9d17d15","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/post/post-wordcount.styl","hash":"268c9704481fdb0b4d1e646196386143990fe235","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1530015211661},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"ac060861b27b764bc4012fc362a25a332df4045a","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"761eba9811b050b25d548cc0854de4824b41eb08","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"28a8737c090fbffd188d73a00b42e90b9ee57df2","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"c9f76d4f6806ef70fa2160c97afa0a0e0ae5373e","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"3159b55f35c40bd08e55b00148c523760a708c51","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74019008ba973ab30f0f4a6b3c2cd33c66d3a4b4","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"e3ad37f2da35e330616a044621ffa50565a20c88","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"cd526e814f9323a79fe835085d64867d34b3715d","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1530015211671},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"eb45ee16051624c6e36a274c0a9538e961f10c4d","modified":1530015211671},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1530015211681},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1530015211681},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1530015211681},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1530015211701},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1530015211701},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1530015211701},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1530015211701},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1530015211711},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1530015211711},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1530015211711},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1530015211711},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1530015211711},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1530015211711},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1530015211721},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1530015211721},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1530015211721},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1530015211701},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1530015211731},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1530015211721},{"_id":"public/atom.xml","hash":"a1ab4e222c497088cf92756a721ef48a6e2852e2","modified":1530093003168},{"_id":"public/search.xml","hash":"39a7b1ab3cd0ddaac6a0c67b103685fe0afb0be8","modified":1530093003193},{"_id":"public/about/index.html","hash":"2d2e96a69f25ba23e7212e2b66edef0886edf252","modified":1530093003201},{"_id":"public/categories/index.html","hash":"98443e9320dd8ffa4468788fad349c265f232334","modified":1530093003201},{"_id":"public/tags/index.html","hash":"a3535be55edf227bcd89c24cbf432449cbc8ea3e","modified":1530093003201},{"_id":"public/2018/06/10/自定义控件-PathMeasure的使用/index.html","hash":"874e81e9346cde737f4bfd76b4c628e2007c8089","modified":1530093003201},{"_id":"public/2018/05/03/Android Studio-用gradle统一版本/index.html","hash":"225bc17f127fcdad5a2f5ecb1b6bf87ed94c7679","modified":1530093003201},{"_id":"public/2018/03/20/自定义控件-TextureVideoView的使用/index.html","hash":"6817fe957044a3c526eef01cdb1294d5d335afae","modified":1530093003201},{"_id":"public/2018/02/15/Android Studio-发布自己的开源库到JitPack/index.html","hash":"27b13fa172eff1d03cec89135dce46c4079e7332","modified":1530093003201},{"_id":"public/2018/02/10/Android Studio-Android发布项目到jcenter/index.html","hash":"ccf0d8403e5700566af46dc3b85e8147593e8db9","modified":1530093003201},{"_id":"public/2018/02/05/自定义控件-自定义画板/index.html","hash":"1bfd32d9902c5a4f440e562ae88fc8ef4156b7ae","modified":1530093003201},{"_id":"public/2017/11/12/自定义控件-属性动画/index.html","hash":"433320562776012f33d23a0aeca219a2a408d196","modified":1530093003201},{"_id":"public/2017/11/12/自定义控件-自定义View绘制顺序/index.html","hash":"effa70fd025d0630933d683a669c9ebf0e973cc6","modified":1530093003201},{"_id":"public/2017/10/02/自定义控件-文字的绘制/index.html","hash":"9e1623f51345fabcb34dd8cbada2246fa3214c4a","modified":1530093003201},{"_id":"public/2017/10/02/自定义控件-Canvas对绘制的辅助/index.html","hash":"950bc5ea364a32f7f702e883ecff092b8e61cfbe","modified":1530093003201},{"_id":"public/2017/08/30/自定义控件-自定义绘制/index.html","hash":"7f4c6a962e68fd27a5ba6fd903e4ee1ad42f2ef0","modified":1530093003201},{"_id":"public/2017/07/18/计算机网络-数据链路层/index.html","hash":"e818145ecddb35c3fa33aae48e47c593dfb11523","modified":1530093003201},{"_id":"public/2017/07/10/计算机网络-物理层/index.html","hash":"c48a4f0b1eed5f0d9f41fc4f879473170addee9e","modified":1530093003201},{"_id":"public/2017/06/28/计算机网络-计算机网络概述/index.html","hash":"4ebb0f3612f255002fc5b525b05fd8a23d6dc260","modified":1530093003201},{"_id":"public/2017/06/18/数据结构-排序/index.html","hash":"1c9fb70d43b70088420eff3903f587b7aaa56bca","modified":1530093003201},{"_id":"public/2017/06/18/数据结构-用Java实现各种排序/index.html","hash":"c474ddaa074329d1e611e5b282e9117e485f082d","modified":1530093003202},{"_id":"public/2017/06/12/数据结构-查找/index.html","hash":"ab7ab0f1e9e96c4316e7cde718a880b594727b49","modified":1530093003202},{"_id":"public/2017/06/10/数据结构-树/index.html","hash":"16737f00f80611640942b3ad4b4763692df39a6d","modified":1530093003202},{"_id":"public/2017/06/08/后缀表达式算术表达式/index.html","hash":"6733a964ee03962f5f6795b73fbed4915aacabb0","modified":1530093003202},{"_id":"public/2017/06/05/数据结构-串/index.html","hash":"0926b162f643af20a59edf9f2e2bbb0d5aa8f887","modified":1530093003202},{"_id":"public/2017/06/01/数据结构-栈与队列/index.html","hash":"ff2500511ded93d1a3912e735a3394a82204a0fd","modified":1530093003202},{"_id":"public/2017/05/27/数据结构-线性表/index.html","hash":"61e94eaa379b6d711ae4d0cf351a180369f07065","modified":1530093003202},{"_id":"public/2017/05/25/数据结构-数据结构绪论/index.html","hash":"4e6cdaa642702f1059e8ba993d8000ce486d436b","modified":1530093003202},{"_id":"public/2017/05/08/计算机操作系统-处理机调度和死锁/index.html","hash":"05cea1c05892647daf1fc3714e60646783687b05","modified":1530093003202},{"_id":"public/2017/05/05/计算机操作系统-进程通信/index.html","hash":"6f31a5d8a299fb003931f0820d2e3ab852ee0a0e","modified":1530093003202},{"_id":"public/2017/04/20/计算机操作系统-进程同步/index.html","hash":"ca86c8e4045807ffc1e3ed538721718267cd0a3d","modified":1530093003202},{"_id":"public/2017/04/11/计算机操作系统-进程控制/index.html","hash":"54df38bc7859648d6013881b017f342861b3b8b8","modified":1530093003202},{"_id":"public/2017/04/10/计算机操作系统-进程的基本概念/index.html","hash":"cc2244190ea75949a0d3cb71809f57d3a74326c3","modified":1530093003202},{"_id":"public/2017/03/15/Java虚拟机--垃圾收集器与内存分配策略/index.html","hash":"adeeb88584e1578745d440e7b625aa0e534c4252","modified":1530093003202},{"_id":"public/2017/03/11/Java虚拟机--自动内存管理机制/index.html","hash":"95bbd257414027af827f289bec9e66e596f0acec","modified":1530093003202},{"_id":"public/2016/11/11/爬取盗墓笔记生成json/index.html","hash":"ece3e34157a9ed46f87fbf987760544dde3c8b40","modified":1530093003202},{"_id":"public/2016/10/13/Scrapy爬取顶点小说/index.html","hash":"b223d59a25b0a426a44e4ef53ea7be0344d0e032","modified":1530093003202},{"_id":"public/2016/10/10/PySpider爬取糗事百科文章和图片/index.html","hash":"ee5601db0b94f6fa7cbf2af5202c3e78137caefb","modified":1530093003202},{"_id":"public/2016/09/10/PySpider爬取mzitu图片/index.html","hash":"ca19d8cd74a15fa50ea89d4497bbb438e924a8db","modified":1530093003202},{"_id":"public/2016/05/15/Hexo使用上的一些小tips/index.html","hash":"8fda33bfbd5c9f31e20fbb6033e91bd872805b4b","modified":1530093003202},{"_id":"public/2016/01/22/Markdown的使用/index.html","hash":"811564114ce9485d4838d45d1ff79f3356a32bfe","modified":1530093003203},{"_id":"public/2016/01/21/博客搭建完成，记录一下步骤/index.html","hash":"7e788122ced76326aed598f8915a44ad900a3585","modified":1530093003203},{"_id":"public/archives/index.html","hash":"e0f606535217970369fd3e7619949cde4a7e9ab6","modified":1530093003203},{"_id":"public/archives/page/2/index.html","hash":"b43c351c0466187e155e5e1ecebed1a22038560c","modified":1530093003203},{"_id":"public/archives/page/3/index.html","hash":"67e12bf6da532704a2938bf1e67f360b30314aa8","modified":1530093003203},{"_id":"public/archives/page/4/index.html","hash":"a5cddd85cb81e27146e079e7a6cb65a6c338ac77","modified":1530093003203},{"_id":"public/archives/2016/index.html","hash":"b12ce258c39c1718aa2619a5fd5d6e7d9aa18a0a","modified":1530093003203},{"_id":"public/archives/2016/01/index.html","hash":"ffd5682832dec6edd640bfbce9eed30465120c38","modified":1530093003203},{"_id":"public/archives/2016/05/index.html","hash":"4680a654548a0dea6b94ab6a4d8952e61b76cc9d","modified":1530093003203},{"_id":"public/archives/2016/09/index.html","hash":"4c0041b2787d207144b251c89b45a21edb430e54","modified":1530093003203},{"_id":"public/archives/2016/10/index.html","hash":"3d61a6129677fbbd6a1e6df340091be61cbf7c39","modified":1530093003203},{"_id":"public/archives/2016/11/index.html","hash":"6ebd64f0cdf398daa96d557c0865fe0a7b981366","modified":1530093003203},{"_id":"public/archives/2017/index.html","hash":"39ff8b0ac70d7a8248dbafd4769c8667ed33c520","modified":1530093003203},{"_id":"public/archives/2017/page/2/index.html","hash":"2b86262268b40df0e410ce268c703fb87c6fc5ae","modified":1530093003203},{"_id":"public/archives/2017/page/3/index.html","hash":"b43eab49b5fb2a1c63fa2dcf3f175b646563b69a","modified":1530093003203},{"_id":"public/archives/2017/03/index.html","hash":"90f8e39fe433561ad1bca4e5540d47c45c9be4ae","modified":1530093003203},{"_id":"public/archives/2017/04/index.html","hash":"7e7feea03ffab88300d53f7fc8e72ce892976d70","modified":1530093003203},{"_id":"public/archives/2017/05/index.html","hash":"93d2c191178c43763b9102688eabb444bbed4a05","modified":1530093003203},{"_id":"public/archives/2017/06/index.html","hash":"c7b5e59c8831397d789bfa13af3e72fc8251f5c2","modified":1530093003203},{"_id":"public/archives/2017/07/index.html","hash":"34ce1eae1c32c6da0f58c96217ab4f5be1daea48","modified":1530093003203},{"_id":"public/archives/2017/08/index.html","hash":"03d09090e399bbad9f2a4a2255899b5fc35c6785","modified":1530093003203},{"_id":"public/archives/2017/10/index.html","hash":"eecc9e593f163ffcd78869ba10dd48d4b5eff48f","modified":1530093003204},{"_id":"public/archives/2017/11/index.html","hash":"0ceb0c603741e5a114b3cd64a1ede703abead6fb","modified":1530093003204},{"_id":"public/archives/2018/index.html","hash":"f5848e078c9fc4b80910bf3a7118be46c1c2c886","modified":1530093003204},{"_id":"public/archives/2018/02/index.html","hash":"7fe32879eb3429ffa58b92e51ec3469e98a87145","modified":1530093003204},{"_id":"public/archives/2018/03/index.html","hash":"27ca9287076f4dfccc80b9b24c4837372c26e226","modified":1530093003204},{"_id":"public/archives/2018/05/index.html","hash":"c61fb284d2c162aeed51d3ffbe342b6c076f9842","modified":1530093003204},{"_id":"public/archives/2018/06/index.html","hash":"9d8819df142df925d87cb7ecf6e5bf478b566423","modified":1530093003204},{"_id":"public/index.html","hash":"3c6eb181811d8ae228811cc4bae281d9cb643900","modified":1530093003204},{"_id":"public/page/2/index.html","hash":"5e1a4a31a3cd964796ec51ab4ae6e72113559548","modified":1530093003204},{"_id":"public/page/3/index.html","hash":"7177ab6128c306dcbad0a3561aee7f3c812d2fc5","modified":1530093003204},{"_id":"public/page/4/index.html","hash":"ff69a038a85f68ae4663e954c6c61c33aa350617","modified":1530093003204},{"_id":"public/categories/Android-studio/index.html","hash":"e67bf81727d15f48a89096296b3174de1a642a9c","modified":1530093003204},{"_id":"public/categories/博客/index.html","hash":"7c4dfa9a9226edde81527fd8cd88e2233e26cbe5","modified":1530093003204},{"_id":"public/categories/Java/index.html","hash":"a720456f1214176b998e8e931c766cbe3f64074a","modified":1530093003204},{"_id":"public/categories/爬虫/index.html","hash":"650bf32d28a8061362486eb75e7e85763c68acc5","modified":1530093003204},{"_id":"public/categories/数据结构/index.html","hash":"782629870230ad00f753ba0b988ed38032dd844d","modified":1530093003204},{"_id":"public/categories/自定义控件/index.html","hash":"43d094ed01abe70a353f877e084650dfcf50fa38","modified":1530093003204},{"_id":"public/categories/操作系统/index.html","hash":"973a6025b26dc10b926818d672eb521a977dd6d4","modified":1530093003204},{"_id":"public/categories/计算机网络/index.html","hash":"deebce6be71e7a5cbe8e1f4d06964fb49fcc660d","modified":1530093003204},{"_id":"public/tags/Android-studio/index.html","hash":"088ea4921fad5f12f870dd5cdf70a86fe9ce817d","modified":1530093003204},{"_id":"public/tags/jCenter/index.html","hash":"f01a597e4e5180ac93a18b4e90a7dce2c9f374f2","modified":1530093003204},{"_id":"public/tags/Markdown/index.html","hash":"003b0cabb6b9d1c9c6f0d9cb6a227ec97dbc5ff5","modified":1530093003205},{"_id":"public/tags/Hexo/index.html","hash":"ff67def5c05a0d84dd5580d830b511470905bf6a","modified":1530093003205},{"_id":"public/tags/JitPack/index.html","hash":"33fc019521e13671305b4528f43f62e967d8c2bf","modified":1530093003205},{"_id":"public/tags/gradle/index.html","hash":"244729a877b7c2e323614601c87a38388b47698f","modified":1530093003205},{"_id":"public/tags/Java/index.html","hash":"2da2a6ffc4f8dd63e3493cf24b3d78c2d73c8078","modified":1530093003205},{"_id":"public/tags/Java虚拟机/index.html","hash":"b9e157bd5b2fbfcf07fa9d08e0e00629be44e2a7","modified":1530093003205},{"_id":"public/tags/python/index.html","hash":"bbe01e63fdf7b019fe3341be27a94aef10b4943d","modified":1530093003205},{"_id":"public/tags/pyspider/index.html","hash":"5019d6965c5c7f9d67ffc0f122a0049e5dd59a0b","modified":1530093003205},{"_id":"public/tags/爬虫/index.html","hash":"e4576695028cf95ac1044ef5ed7132aef05653b3","modified":1530093003205},{"_id":"public/tags/scrapy/index.html","hash":"416241a58fbbf3714e90d3c26612de73af80fba2","modified":1530093003205},{"_id":"public/tags/串/index.html","hash":"7db73a49f77df16c047fb9437b02cddc09803830","modified":1530093003205},{"_id":"public/tags/数据结构/index.html","hash":"dd06ca7245fa48f7ce9fd666244bbdd5e05965a1","modified":1530093003205},{"_id":"public/tags/排序/index.html","hash":"93fd1280bae725d963a62257a0b3a51171ae9de2","modified":1530093003205},{"_id":"public/tags/查找/index.html","hash":"d1c1e4757003727c067d010c1059ef10ae33307a","modified":1530093003205},{"_id":"public/tags/栈/index.html","hash":"52be2f7d6a410179a5560e9b218b3c632bd57e72","modified":1530093003205},{"_id":"public/tags/队列/index.html","hash":"f9eaddf42aea4c2f99ac7fa8390e25a70c2d1ddc","modified":1530093003205},{"_id":"public/tags/树/index.html","hash":"d24a5d365bbd5d39b161ac8b35acf5bd7d88389a","modified":1530093003205},{"_id":"public/tags/json/index.html","hash":"1c576944653abbfe83a4786741abeb243c427411","modified":1530093003205},{"_id":"public/tags/线性表/index.html","hash":"d7ea7fdb814400dc449704c0f3afa5a32ac97d32","modified":1530093003205},{"_id":"public/tags/自定义控件/index.html","hash":"4df4b505be5d1cbad17e9b002f23436290aab809","modified":1530093003205},{"_id":"public/tags/TextVideoView/index.html","hash":"7f3ce4f80ce7b3f3e04c58f19ae63fa0b1193ba1","modified":1530093003205},{"_id":"public/tags/属性动画/index.html","hash":"7ca71391bdd2c719b8e02f2213f1284e4546b481","modified":1530093003205},{"_id":"public/tags/PathMeasure/index.html","hash":"d390880f7a3c6bb36cda4bf043f1dc0c5d751fa3","modified":1530093003205},{"_id":"public/tags/Canvas/index.html","hash":"5c401f5424041aff20634a37ad41f3242fcfc7f6","modified":1530093003205},{"_id":"public/tags/Paint/index.html","hash":"8f5442a2af5c0e3fb57c55a30925b60c483b58c6","modified":1530093003205},{"_id":"public/tags/处理机调度/index.html","hash":"fbfb86b5298f5dedd6b0bf357642b1a58d11c6a1","modified":1530093003206},{"_id":"public/tags/自定义绘制/index.html","hash":"fe612eef7e412ec5b104007f651c07cb076a8d00","modified":1530093003206},{"_id":"public/tags/Android/index.html","hash":"a53797141b9497d79131760a7aec5044323e948b","modified":1530093003206},{"_id":"public/tags/进程/index.html","hash":"4896eb4a9ae2084404792512f76d05d244619115","modified":1530093003206},{"_id":"public/tags/数据链路层/index.html","hash":"7b9f3bd09b1cd271bf3211bdee4563c1cfeed8a6","modified":1530093003206},{"_id":"public/tags/计算机网络/index.html","hash":"e6c2e96ad0a2a280f6cc6ccb043723c8b3af0b33","modified":1530093003206},{"_id":"public/tags/物理层/index.html","hash":"1bc7167e7ee08fc9b867a35fcd2e7ee9ac9d65f0","modified":1530093003206},{"_id":"public/CNAME","hash":"415a6b34a4634256f185bb66e88e6d2e38cd0b23","modified":1530093003214},{"_id":"public/favicon.ico","hash":"3ad6bd15a0c056698dcbfe101ac24d434adc0ec2","modified":1530093003214},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1530093003214},{"_id":"public/images/algolia_logo.svg","hash":"16505f61f19ba65f629dfd033f14ee9abcf18756","modified":1530093003214},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1530093003214},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1530093003214},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1530093003214},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1530093003214},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1530093003214},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1530093003214},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1530093003214},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1530093003215},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1530093003215},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1530093003215},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1530093003215},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1530093003215},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1530093003215},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1530093003215},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1530093003215},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1530093003215},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1530093003215},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1530093003215},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1530093003215},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1530093003215},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1530093003215},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1530093003215},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1530093003215},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1530093003215},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1530093003215},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1530093003215},{"_id":"public/404.html","hash":"b74e38e322d86183d8865cd8dce465058e879e9c","modified":1530093003606},{"_id":"public/css/main.css","hash":"e4a10bdcc9960eabdadd60a72e74bec49bae6a38","modified":1530093003606},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1530093003615},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1530093003615},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1530093003631},{"_id":"public/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1530093003631},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1530093003631},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1530093003631},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1530093003631},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1530093003631},{"_id":"public/js/src/post-details.js","hash":"af7a417dd1cb02465a7b98211653e7c6192e6d55","modified":1530093003631},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1530093003632},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1530093003632},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1530093003632},{"_id":"public/js/src/utils.js","hash":"b2ea56de27fddc6d9118051da384f781cd93951d","modified":1530093003632},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1530093003632},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"7fd2f3e2773555392ef40df40cae3bedb884f17a","modified":1530093003632},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1530093003632},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1530093003632},{"_id":"public/lib/fastclick/README.html","hash":"4fb571cb850702cf0da0d90e2607956f79651383","modified":1530093003632},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1530093003632},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"6baf06336ddc845bc8cf0e0a41e6cd5af452bb64","modified":1530093003632},{"_id":"public/lib/jquery_lazyload/README.html","hash":"fbf9ec2f6614d72d86ba59bbc41a24f5b7b110dc","modified":1530093003632},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1530093003632},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1530093003632},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1530093003632},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1530093003632},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1530093003632},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1530093003632},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1530093003632},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1530093003632},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1530093003632},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1530093003632},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1530093003632},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1530093003632},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1530093003632},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1530093003632},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1530093003632},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1530093003632},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1530093003632},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1530093003632},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1530093003633},{"_id":"public/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1530093003633},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1530093003633},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1530093003633},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1530093003633},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1530093003633},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1530093003633},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1530093003633},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1530093003633},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1530093003633},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1530093003633},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1530093003633},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1530093003633},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1530093003633},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1530093003633},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1530093003633},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1530093003633},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1530093003633},{"_id":"public/lib/Han/dist/han.min.css","hash":"d9c0b3dc9158e717fde36f554709e6c3a22b5f85","modified":1530093003633},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1530093003633},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1530093003633},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1530093003633},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1530093003633},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1530093003633},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1530093003633},{"_id":"public/lib/Han/dist/han.css","hash":"38e48f275ad00daa9dcdcb8d9b44e576acda4707","modified":1530093003633},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1530093003634},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1530093003634},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1530093003634},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1530093003634},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1530093003634},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1530093003634},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1530093003694}],"Category":[{"name":"Android studio","_id":"cjiwxv53g000358ugeyszfkqo"},{"name":"博客","_id":"cjiwxv53k000858ug8gzxxdxo"},{"name":"Java","_id":"cjiwxv53t000k58ugplo7sohs"},{"name":"爬虫","_id":"cjiwxv53y000w58ugb9j9xvx2"},{"name":"数据结构","_id":"cjiwxv546001h58ugp8o80nqv"},{"name":"自定义控件","_id":"cjiwxv54p002q58ug3nt2dv3f"},{"name":"操作系统","_id":"cjiwxv54w003e58ugecnhijzz"},{"name":"计算机网络","_id":"cjiwxv58q006958ugkc06fyqd"}],"Data":[],"Page":[{"title":"关于","date":"2017-07-05T05:16:33.000Z","comments":1,"_content":"\n我是lieeber，一名Android开发工程师。","source":"about/index.md","raw":"---\ntitle: 关于\ndate: 2017-07-05 13:16:33\ncomments: true\n---\n\n我是lieeber，一名Android开发工程师。","updated":"2018-06-26T12:13:31.591Z","path":"about/index.html","layout":"page","_id":"cjiwxv53a000058ugs9a0xoly","content":"<p>我是lieeber，一名Android开发工程师。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>我是lieeber，一名Android开发工程师。</p>\n"},{"title":"分类","date":"2017-07-04T13:38:35.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2017-07-04 21:38:35\ntype: \"categories\"\ncomments: false\n---\n","updated":"2018-06-26T12:13:31.591Z","path":"categories/index.html","layout":"page","_id":"cjiwxv58k006158ugkg5xr29f","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2017-07-04T13:32:02.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-07-04 21:32:02\ntype: \"tags\"\ncomments: false\n---\n","updated":"2018-06-26T12:13:31.591Z","path":"tags/index.html","layout":"page","_id":"cjiwxv58m006358ugmexzlsxb","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Android发布开源库到jCenter","date":"2018-02-10T04:18:15.000Z","_content":"\n&emsp;&emsp;对于一些常用的工具类，我们经常会在很多项目中都使用到，如果每个项目中都对这些代码进行拷贝，确实是一件比较麻烦的事情；另外，我们经常会创造一些比较实用的项目，也希望能够拿这些项目去帮助别人。因此，将自己的工具类或者项目开源是一个很必要的事情。\n\n&emsp;&emsp;android studio中引入第三方库，基本都是来自于jcenter仓库，我们也可以把自己的项目放到jcenter仓库。\n\n下面是具体的操作流程\n<!-- more -->\n### 注册bintray.com账号。\n1. 进入https://bintray.com/，注册账号。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsoyyn80fyj20rx0euaqp.jpg)\n3. 注意jcenter的首页如上图所示，我们应该点击右边的‘Singn Up Here’进行注册，因为左边的对应的的是用户，30天免费期过后是需要付费的。\n4. 注册并登录后点击右上角View Profile，再点击左上角的Edit，然后可以看到以下界面。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1f8j38aj20td0fl0tv.jpg)\n5. 点击API Key获取到属于你个人的API Key\n6. 点击Repositories，创建一个叫做maven的仓库\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1gm6xl9j20hy0ja75a.jpg)\n###  在项目中引入bintray-release\n1. 打开project的build.gradle文件\n```java\nbuildscript {\n    repositories {\n        google()\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.1.3'\n        classpath 'com.novoda:bintray-release:0.8.0'\n    }\n}\n```\n2. 将需要上传的library的build.gradle中添加如下配置。\n```java\napply plugin: 'com.novoda.bintray-release'\n.....\npublish {\n    userOrg = 'lieeber1'//bintray.com用户名\n    groupId = 'com.lieeber'//jcenter上的路径\n    artifactId = 'jcenterlibrary'//项目名称\n    publishVersion = '1.1.0'//版本号\n    desc = 'you can write everything whatever you want.'//描述\n    website = 'https://github.com/lieeber/demolibrary'//网站\n}\n```\n完成上面的配置后，就准备上传了。\n### 上传\n1. mac执行下面的代码\n```java\n    ./gradlew clean build bintrayUpload\n    -PbintrayUser=lieeber1\n    -PbintrayKey=xxxxxxxxxxxxxxxxxxxxxx\n    -PdryRun=false\n```\n2. windows执行以下代码\n```java\n    gradlew clean build bintrayUpload -PbintrayUser=lieeber -PbintrayKey=xxxxxxxxxxxxxxxxxxxxxx -PdryRun=false\n```\n上传完成后，可以通过 https://bintray.com/你的用户名/maven对访问刚刚上传的仓库。（我这里是https://bintray.com/lieeber1/maven）\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1l5pin9j20po0jpwfu.jpg)\n但是到了这一步，不代表我们的仓库就能在项目中进行引用了，我们还需要添加到jcenter，并且通过人工审核之后才能正常使用。\n点击仓库，打开仓库详情。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1lnlypmj20xf0jz41a.jpg)\n点击右下角的Add to jCenter.在提交页面，需要你描述一下你的仓库，填完之后，提交并等待人工审核。通过之后，你就可以成功在项目中引入你的仓库了。\n\n比如我这个仓库的引用地址为：implementation 'com.lieeber:jcenterlibrary:1.1.0'。\n\n\n","source":"_posts/Android Studio-Android发布项目到jcenter.md","raw":"---\ntitle: Android发布开源库到jCenter\ntags:\n  - Android studio\n  - jCenter\ncategories:\n  - Android studio\ndate: 2018-2-10 12:18:15\n---\n\n&emsp;&emsp;对于一些常用的工具类，我们经常会在很多项目中都使用到，如果每个项目中都对这些代码进行拷贝，确实是一件比较麻烦的事情；另外，我们经常会创造一些比较实用的项目，也希望能够拿这些项目去帮助别人。因此，将自己的工具类或者项目开源是一个很必要的事情。\n\n&emsp;&emsp;android studio中引入第三方库，基本都是来自于jcenter仓库，我们也可以把自己的项目放到jcenter仓库。\n\n下面是具体的操作流程\n<!-- more -->\n### 注册bintray.com账号。\n1. 进入https://bintray.com/，注册账号。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsoyyn80fyj20rx0euaqp.jpg)\n3. 注意jcenter的首页如上图所示，我们应该点击右边的‘Singn Up Here’进行注册，因为左边的对应的的是用户，30天免费期过后是需要付费的。\n4. 注册并登录后点击右上角View Profile，再点击左上角的Edit，然后可以看到以下界面。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1f8j38aj20td0fl0tv.jpg)\n5. 点击API Key获取到属于你个人的API Key\n6. 点击Repositories，创建一个叫做maven的仓库\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1gm6xl9j20hy0ja75a.jpg)\n###  在项目中引入bintray-release\n1. 打开project的build.gradle文件\n```java\nbuildscript {\n    repositories {\n        google()\n        jcenter()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:3.1.3'\n        classpath 'com.novoda:bintray-release:0.8.0'\n    }\n}\n```\n2. 将需要上传的library的build.gradle中添加如下配置。\n```java\napply plugin: 'com.novoda.bintray-release'\n.....\npublish {\n    userOrg = 'lieeber1'//bintray.com用户名\n    groupId = 'com.lieeber'//jcenter上的路径\n    artifactId = 'jcenterlibrary'//项目名称\n    publishVersion = '1.1.0'//版本号\n    desc = 'you can write everything whatever you want.'//描述\n    website = 'https://github.com/lieeber/demolibrary'//网站\n}\n```\n完成上面的配置后，就准备上传了。\n### 上传\n1. mac执行下面的代码\n```java\n    ./gradlew clean build bintrayUpload\n    -PbintrayUser=lieeber1\n    -PbintrayKey=xxxxxxxxxxxxxxxxxxxxxx\n    -PdryRun=false\n```\n2. windows执行以下代码\n```java\n    gradlew clean build bintrayUpload -PbintrayUser=lieeber -PbintrayKey=xxxxxxxxxxxxxxxxxxxxxx -PdryRun=false\n```\n上传完成后，可以通过 https://bintray.com/你的用户名/maven对访问刚刚上传的仓库。（我这里是https://bintray.com/lieeber1/maven）\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1l5pin9j20po0jpwfu.jpg)\n但是到了这一步，不代表我们的仓库就能在项目中进行引用了，我们还需要添加到jcenter，并且通过人工审核之后才能正常使用。\n点击仓库，打开仓库详情。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1lnlypmj20xf0jz41a.jpg)\n点击右下角的Add to jCenter.在提交页面，需要你描述一下你的仓库，填完之后，提交并等待人工审核。通过之后，你就可以成功在项目中引入你的仓库了。\n\n比如我这个仓库的引用地址为：implementation 'com.lieeber:jcenterlibrary:1.1.0'。\n\n\n","slug":"Android Studio-Android发布项目到jcenter","published":1,"updated":"2018-06-27T09:29:06.001Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv53b000158ugp0yu2ly0","content":"<p>  对于一些常用的工具类，我们经常会在很多项目中都使用到，如果每个项目中都对这些代码进行拷贝，确实是一件比较麻烦的事情；另外，我们经常会创造一些比较实用的项目，也希望能够拿这些项目去帮助别人。因此，将自己的工具类或者项目开源是一个很必要的事情。</p>\n<p>  android studio中引入第三方库，基本都是来自于jcenter仓库，我们也可以把自己的项目放到jcenter仓库。</p>\n<p>下面是具体的操作流程</p>\n<a id=\"more\"></a>\n<h3 id=\"注册bintray-com账号\"><a class=\"header-anchor\" href=\"#注册bintray-com账号\">¶</a>注册bintray.com账号。</h3>\n<ol>\n<li>进入https://bintray.com/，注册账号。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsoyyn80fyj20rx0euaqp.jpg\" alt=\"\"></li>\n<li>注意jcenter的首页如上图所示，我们应该点击右边的‘Singn Up Here’进行注册，因为左边的对应的的是用户，30天免费期过后是需要付费的。</li>\n<li>注册并登录后点击右上角View Profile，再点击左上角的Edit，然后可以看到以下界面。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1f8j38aj20td0fl0tv.jpg\" alt=\"\"></li>\n<li>点击API Key获取到属于你个人的API Key</li>\n<li>点击Repositories，创建一个叫做maven的仓库\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1gm6xl9j20hy0ja75a.jpg\" alt=\"\"></li>\n</ol>\n<h3 id=\"在项目中引入bintray-release\"><a class=\"header-anchor\" href=\"#在项目中引入bintray-release\">¶</a>在项目中引入bintray-release</h3>\n<ol>\n<li>打开project的build.gradle文件</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">buildscript &#123;</span><br><span class=\"line\">    repositories &#123;</span><br><span class=\"line\">        google()</span><br><span class=\"line\">        jcenter()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    dependencies &#123;</span><br><span class=\"line\">        classpath <span class=\"string\">'com.android.tools.build:gradle:3.1.3'</span></span><br><span class=\"line\">        classpath <span class=\"string\">'com.novoda:bintray-release:0.8.0'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>将需要上传的library的build.gradle中添加如下配置。</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply plugin: <span class=\"string\">'com.novoda.bintray-release'</span></span><br><span class=\"line\">.....</span><br><span class=\"line\">publish &#123;</span><br><span class=\"line\">    userOrg = <span class=\"string\">'lieeber1'</span><span class=\"comment\">//bintray.com用户名</span></span><br><span class=\"line\">    groupId = <span class=\"string\">'com.lieeber'</span><span class=\"comment\">//jcenter上的路径</span></span><br><span class=\"line\">    artifactId = <span class=\"string\">'jcenterlibrary'</span><span class=\"comment\">//项目名称</span></span><br><span class=\"line\">    publishVersion = <span class=\"string\">'1.1.0'</span><span class=\"comment\">//版本号</span></span><br><span class=\"line\">    desc = <span class=\"string\">'you can write everything whatever you want.'</span><span class=\"comment\">//描述</span></span><br><span class=\"line\">    website = <span class=\"string\">'https://github.com/lieeber/demolibrary'</span><span class=\"comment\">//网站</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>完成上面的配置后，就准备上传了。</p>\n<h3 id=\"上传\"><a class=\"header-anchor\" href=\"#上传\">¶</a>上传</h3>\n<ol>\n<li>mac执行下面的代码</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gradlew clean build bintrayUpload</span><br><span class=\"line\">-PbintrayUser=lieeber1</span><br><span class=\"line\">-PbintrayKey=xxxxxxxxxxxxxxxxxxxxxx</span><br><span class=\"line\">-PdryRun=<span class=\"keyword\">false</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>windows执行以下代码</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gradlew clean build bintrayUpload -PbintrayUser=lieeber -PbintrayKey=xxxxxxxxxxxxxxxxxxxxxx -PdryRun=<span class=\"keyword\">false</span></span><br></pre></td></tr></table></figure>\n<p>上传完成后，可以通过 <a href=\"https://bintray.com/%E4%BD%A0%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D/maven%E5%AF%B9%E8%AE%BF%E9%97%AE%E5%88%9A%E5%88%9A%E4%B8%8A%E4%BC%A0%E7%9A%84%E4%BB%93%E5%BA%93%E3%80%82%EF%BC%88%E6%88%91%E8%BF%99%E9%87%8C%E6%98%AFhttps://bintray.com/lieeber1/maven%EF%BC%89\" target=\"_blank\" rel=\"noopener\">https://bintray.com/你的用户名/maven对访问刚刚上传的仓库。（我这里是https://bintray.com/lieeber1/maven）</a>\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1l5pin9j20po0jpwfu.jpg\" alt=\"\">\n但是到了这一步，不代表我们的仓库就能在项目中进行引用了，我们还需要添加到jcenter，并且通过人工审核之后才能正常使用。\n点击仓库，打开仓库详情。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1lnlypmj20xf0jz41a.jpg\" alt=\"\">\n点击右下角的Add to jCenter.在提交页面，需要你描述一下你的仓库，填完之后，提交并等待人工审核。通过之后，你就可以成功在项目中引入你的仓库了。</p>\n<p>比如我这个仓库的引用地址为：implementation ‘com.lieeber:jcenterlibrary:1.1.0’。</p>\n","site":{"data":{}},"excerpt":"<p>  对于一些常用的工具类，我们经常会在很多项目中都使用到，如果每个项目中都对这些代码进行拷贝，确实是一件比较麻烦的事情；另外，我们经常会创造一些比较实用的项目，也希望能够拿这些项目去帮助别人。因此，将自己的工具类或者项目开源是一个很必要的事情。</p>\n<p>  android studio中引入第三方库，基本都是来自于jcenter仓库，我们也可以把自己的项目放到jcenter仓库。</p>\n<p>下面是具体的操作流程</p>","more":"<h3 id=\"注册bintray-com账号\"><a class=\"header-anchor\" href=\"#注册bintray-com账号\">¶</a>注册bintray.com账号。</h3>\n<ol>\n<li>进入https://bintray.com/，注册账号。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsoyyn80fyj20rx0euaqp.jpg\" alt=\"\"></li>\n<li>注意jcenter的首页如上图所示，我们应该点击右边的‘Singn Up Here’进行注册，因为左边的对应的的是用户，30天免费期过后是需要付费的。</li>\n<li>注册并登录后点击右上角View Profile，再点击左上角的Edit，然后可以看到以下界面。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1f8j38aj20td0fl0tv.jpg\" alt=\"\"></li>\n<li>点击API Key获取到属于你个人的API Key</li>\n<li>点击Repositories，创建一个叫做maven的仓库\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1gm6xl9j20hy0ja75a.jpg\" alt=\"\"></li>\n</ol>\n<h3 id=\"在项目中引入bintray-release\"><a class=\"header-anchor\" href=\"#在项目中引入bintray-release\">¶</a>在项目中引入bintray-release</h3>\n<ol>\n<li>打开project的build.gradle文件</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">buildscript &#123;</span><br><span class=\"line\">    repositories &#123;</span><br><span class=\"line\">        google()</span><br><span class=\"line\">        jcenter()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    dependencies &#123;</span><br><span class=\"line\">        classpath <span class=\"string\">'com.android.tools.build:gradle:3.1.3'</span></span><br><span class=\"line\">        classpath <span class=\"string\">'com.novoda:bintray-release:0.8.0'</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>将需要上传的library的build.gradle中添加如下配置。</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply plugin: <span class=\"string\">'com.novoda.bintray-release'</span></span><br><span class=\"line\">.....</span><br><span class=\"line\">publish &#123;</span><br><span class=\"line\">    userOrg = <span class=\"string\">'lieeber1'</span><span class=\"comment\">//bintray.com用户名</span></span><br><span class=\"line\">    groupId = <span class=\"string\">'com.lieeber'</span><span class=\"comment\">//jcenter上的路径</span></span><br><span class=\"line\">    artifactId = <span class=\"string\">'jcenterlibrary'</span><span class=\"comment\">//项目名称</span></span><br><span class=\"line\">    publishVersion = <span class=\"string\">'1.1.0'</span><span class=\"comment\">//版本号</span></span><br><span class=\"line\">    desc = <span class=\"string\">'you can write everything whatever you want.'</span><span class=\"comment\">//描述</span></span><br><span class=\"line\">    website = <span class=\"string\">'https://github.com/lieeber/demolibrary'</span><span class=\"comment\">//网站</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>完成上面的配置后，就准备上传了。</p>\n<h3 id=\"上传\"><a class=\"header-anchor\" href=\"#上传\">¶</a>上传</h3>\n<ol>\n<li>mac执行下面的代码</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gradlew clean build bintrayUpload</span><br><span class=\"line\">-PbintrayUser=lieeber1</span><br><span class=\"line\">-PbintrayKey=xxxxxxxxxxxxxxxxxxxxxx</span><br><span class=\"line\">-PdryRun=<span class=\"keyword\">false</span></span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>windows执行以下代码</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">gradlew clean build bintrayUpload -PbintrayUser=lieeber -PbintrayKey=xxxxxxxxxxxxxxxxxxxxxx -PdryRun=<span class=\"keyword\">false</span></span><br></pre></td></tr></table></figure>\n<p>上传完成后，可以通过 <a href=\"https://bintray.com/%E4%BD%A0%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D/maven%E5%AF%B9%E8%AE%BF%E9%97%AE%E5%88%9A%E5%88%9A%E4%B8%8A%E4%BC%A0%E7%9A%84%E4%BB%93%E5%BA%93%E3%80%82%EF%BC%88%E6%88%91%E8%BF%99%E9%87%8C%E6%98%AFhttps://bintray.com/lieeber1/maven%EF%BC%89\" target=\"_blank\" rel=\"noopener\">https://bintray.com/你的用户名/maven对访问刚刚上传的仓库。（我这里是https://bintray.com/lieeber1/maven）</a>\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1l5pin9j20po0jpwfu.jpg\" alt=\"\">\n但是到了这一步，不代表我们的仓库就能在项目中进行引用了，我们还需要添加到jcenter，并且通过人工审核之后才能正常使用。\n点击仓库，打开仓库详情。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsp1lnlypmj20xf0jz41a.jpg\" alt=\"\">\n点击右下角的Add to jCenter.在提交页面，需要你描述一下你的仓库，填完之后，提交并等待人工审核。通过之后，你就可以成功在项目中引入你的仓库了。</p>\n<p>比如我这个仓库的引用地址为：implementation ‘com.lieeber:jcenterlibrary:1.1.0’。</p>"},{"title":"Hexo使用上的一些小tips","date":"2016-05-15T04:39:04.000Z","_content":"\n### 更换next主题的背景\n1. 将喜欢的背景图放到project-->themes-->next-->source-->images目录下。\n2. 打开project-->themes-->next-->source-->css-->_custom-->custom.styl文件，加入代码<br>\n`body { background:url(/images/imagename.jpg);}`\n3. 重新编译项目就OK了。\n\n<!-- more -->\n\n### Markdown语法中实现添加脚注功能\nhexo默认的渲染组件，是不能实现添加脚注功能的，因此需要安装新的渲染组件。\n```\n$ npm un hexo-renderer-marked --save\n$ npm i hexo-renderer-markdown-it --save\n```\n\n打开项目_config.yml文件，在文中添加\n```\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: false\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n  plugins:\n    - markdown-it-footnote\n    - markdown-it-sup\n    - markdown-it-sub\n    - markdown-it-abbr\n  anchors:\n    level: 2\n    collisionSuffix: 'v'\n    permalink: true\n    permalinkClass: header-anchor\n    permalinkSymbol: ¶\n```\n重新编译后就可以使用脚注了。\n\n测试发现，直接跑hexo server没有效果，需要发布后才能看到脚注的实现效果。\n\n脚注的使用方法可以在[<font color=#0099ff>Markdown语法的使用</font>](http://www.lieeber.com/2017/01/22/markdown%E8%AF%AD%E6%B3%95%E7%9A%84%E4%BD%BF%E7%94%A8/ \"Markdown语法的使用\")中查看。\n","source":"_posts/Hexo使用上的一些小tips.md","raw":"---\ntitle: Hexo使用上的一些小tips\ntags:\n  - Markdown\n  - Hexo\ncategories:\n  - 博客\ndate: 2016-05-15 12:39:04\n---\n\n### 更换next主题的背景\n1. 将喜欢的背景图放到project-->themes-->next-->source-->images目录下。\n2. 打开project-->themes-->next-->source-->css-->_custom-->custom.styl文件，加入代码<br>\n`body { background:url(/images/imagename.jpg);}`\n3. 重新编译项目就OK了。\n\n<!-- more -->\n\n### Markdown语法中实现添加脚注功能\nhexo默认的渲染组件，是不能实现添加脚注功能的，因此需要安装新的渲染组件。\n```\n$ npm un hexo-renderer-marked --save\n$ npm i hexo-renderer-markdown-it --save\n```\n\n打开项目_config.yml文件，在文中添加\n```\nmarkdown:\n  render:\n    html: true\n    xhtmlOut: false\n    breaks: false\n    linkify: true\n    typographer: true\n    quotes: '“”‘’'\n  plugins:\n    - markdown-it-footnote\n    - markdown-it-sup\n    - markdown-it-sub\n    - markdown-it-abbr\n  anchors:\n    level: 2\n    collisionSuffix: 'v'\n    permalink: true\n    permalinkClass: header-anchor\n    permalinkSymbol: ¶\n```\n重新编译后就可以使用脚注了。\n\n测试发现，直接跑hexo server没有效果，需要发布后才能看到脚注的实现效果。\n\n脚注的使用方法可以在[<font color=#0099ff>Markdown语法的使用</font>](http://www.lieeber.com/2017/01/22/markdown%E8%AF%AD%E6%B3%95%E7%9A%84%E4%BD%BF%E7%94%A8/ \"Markdown语法的使用\")中查看。\n","slug":"Hexo使用上的一些小tips","published":1,"updated":"2018-06-26T12:13:31.571Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv53e000258ugyuvl2i5e","content":"<h3 id=\"更换next主题的背景\"><a class=\"header-anchor\" href=\"#更换next主题的背景\">¶</a>更换next主题的背景</h3>\n<ol>\n<li>将喜欢的背景图放到project–&gt;themes–&gt;next–&gt;source–&gt;images目录下。</li>\n<li>打开project–&gt;themes–&gt;next–&gt;source–&gt;css–&gt;_custom–&gt;custom.styl文件，加入代码<br>\n<code>body { background:url(/images/imagename.jpg);}</code></li>\n<li>重新编译项目就OK了。</li>\n</ol>\n<a id=\"more\"></a>\n<h3 id=\"markdown语法中实现添加脚注功能\"><a class=\"header-anchor\" href=\"#markdown语法中实现添加脚注功能\">¶</a>Markdown语法中实现添加脚注功能</h3>\n<p>hexo默认的渲染组件，是不能实现添加脚注功能的，因此需要安装新的渲染组件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm un hexo-renderer-marked --save</span><br><span class=\"line\">$ npm i hexo-renderer-markdown-it --save</span><br></pre></td></tr></table></figure>\n<p>打开项目_config.yml文件，在文中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">markdown:</span><br><span class=\"line\">  render:</span><br><span class=\"line\">    html: true</span><br><span class=\"line\">    xhtmlOut: false</span><br><span class=\"line\">    breaks: false</span><br><span class=\"line\">    linkify: true</span><br><span class=\"line\">    typographer: true</span><br><span class=\"line\">    quotes: &apos;“”‘’&apos;</span><br><span class=\"line\">  plugins:</span><br><span class=\"line\">    - markdown-it-footnote</span><br><span class=\"line\">    - markdown-it-sup</span><br><span class=\"line\">    - markdown-it-sub</span><br><span class=\"line\">    - markdown-it-abbr</span><br><span class=\"line\">  anchors:</span><br><span class=\"line\">    level: 2</span><br><span class=\"line\">    collisionSuffix: &apos;v&apos;</span><br><span class=\"line\">    permalink: true</span><br><span class=\"line\">    permalinkClass: header-anchor</span><br><span class=\"line\">    permalinkSymbol: ¶</span><br></pre></td></tr></table></figure>\n<p>重新编译后就可以使用脚注了。</p>\n<p>测试发现，直接跑hexo server没有效果，需要发布后才能看到脚注的实现效果。</p>\n<p>脚注的使用方法可以在<a href=\"http://www.lieeber.com/2017/01/22/markdown%E8%AF%AD%E6%B3%95%E7%9A%84%E4%BD%BF%E7%94%A8/\" title=\"Markdown语法的使用\" target=\"_blank\" rel=\"noopener\"><font color=\"#0099ff\">Markdown语法的使用</font></a>中查看。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"更换next主题的背景\"><a class=\"header-anchor\" href=\"#更换next主题的背景\">¶</a>更换next主题的背景</h3>\n<ol>\n<li>将喜欢的背景图放到project–&gt;themes–&gt;next–&gt;source–&gt;images目录下。</li>\n<li>打开project–&gt;themes–&gt;next–&gt;source–&gt;css–&gt;_custom–&gt;custom.styl文件，加入代码<br>\n<code>body { background:url(/images/imagename.jpg);}</code></li>\n<li>重新编译项目就OK了。</li>\n</ol>","more":"<h3 id=\"markdown语法中实现添加脚注功能\"><a class=\"header-anchor\" href=\"#markdown语法中实现添加脚注功能\">¶</a>Markdown语法中实现添加脚注功能</h3>\n<p>hexo默认的渲染组件，是不能实现添加脚注功能的，因此需要安装新的渲染组件。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ npm un hexo-renderer-marked --save</span><br><span class=\"line\">$ npm i hexo-renderer-markdown-it --save</span><br></pre></td></tr></table></figure>\n<p>打开项目_config.yml文件，在文中添加</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">markdown:</span><br><span class=\"line\">  render:</span><br><span class=\"line\">    html: true</span><br><span class=\"line\">    xhtmlOut: false</span><br><span class=\"line\">    breaks: false</span><br><span class=\"line\">    linkify: true</span><br><span class=\"line\">    typographer: true</span><br><span class=\"line\">    quotes: &apos;“”‘’&apos;</span><br><span class=\"line\">  plugins:</span><br><span class=\"line\">    - markdown-it-footnote</span><br><span class=\"line\">    - markdown-it-sup</span><br><span class=\"line\">    - markdown-it-sub</span><br><span class=\"line\">    - markdown-it-abbr</span><br><span class=\"line\">  anchors:</span><br><span class=\"line\">    level: 2</span><br><span class=\"line\">    collisionSuffix: &apos;v&apos;</span><br><span class=\"line\">    permalink: true</span><br><span class=\"line\">    permalinkClass: header-anchor</span><br><span class=\"line\">    permalinkSymbol: ¶</span><br></pre></td></tr></table></figure>\n<p>重新编译后就可以使用脚注了。</p>\n<p>测试发现，直接跑hexo server没有效果，需要发布后才能看到脚注的实现效果。</p>\n<p>脚注的使用方法可以在<a href=\"http://www.lieeber.com/2017/01/22/markdown%E8%AF%AD%E6%B3%95%E7%9A%84%E4%BD%BF%E7%94%A8/\" title=\"Markdown语法的使用\" target=\"_blank\" rel=\"noopener\"><font color=\"#0099ff\">Markdown语法的使用</font></a>中查看。</p>"},{"title":"发布自己的开源库到JitPack","date":"2018-02-15T04:28:15.000Z","_content":"\n&emsp;&emsp;之前我们使用过jCenter,虽然也很简单，步骤也只有简单几步，不过与JitPack比起来，还是显得太麻烦了。看看JitPack发布开源库的流程有多简单。\n<!-- more -->\n###  创建项目 \n通过Android studio 创建开源库，然后上传到github.\n### 登录网站 \n打开 http://jitpack.io ,使用github登录账号，在输入框中输入你的项目的github地址。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fspvea5y1vj214y0hvabr.jpg)\n### 发布版本\n可以看到下面有一个Version，如果你没有发布release，这里默认显示的是master，如果需要显得正式一点，可以每次修改重新发布一个版本，提交release更新版本号。\n\n在github中打开你的项目，点击release。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fspvhn7wlnj20xb05nmxq.jpg)\n然后创建一个新的release，这里创建了一个v1.2的版本，并简单描述了这次改动。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fspvjjd8nnj20od0lkwfs.jpg)\n然后再JitPack就可以看到这次修改的release了。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fspvkzpq0tj20kn0aagly.jpg)\n我们点击Get it。\n### 引入并使用\n然后JitPack自动帮我们生成了开源库的地址。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fspvm6j708j20la0h6myn.jpg)\n按照提示在android studio中引入即可。","source":"_posts/Android Studio-发布自己的开源库到JitPack.md","raw":"---\ntitle: 发布自己的开源库到JitPack\ntags:\n  - Android studio\n  - JitPack\ncategories:\n  - Android studio\ndate: 2018-2-15 12:28:15\n---\n\n&emsp;&emsp;之前我们使用过jCenter,虽然也很简单，步骤也只有简单几步，不过与JitPack比起来，还是显得太麻烦了。看看JitPack发布开源库的流程有多简单。\n<!-- more -->\n###  创建项目 \n通过Android studio 创建开源库，然后上传到github.\n### 登录网站 \n打开 http://jitpack.io ,使用github登录账号，在输入框中输入你的项目的github地址。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fspvea5y1vj214y0hvabr.jpg)\n### 发布版本\n可以看到下面有一个Version，如果你没有发布release，这里默认显示的是master，如果需要显得正式一点，可以每次修改重新发布一个版本，提交release更新版本号。\n\n在github中打开你的项目，点击release。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fspvhn7wlnj20xb05nmxq.jpg)\n然后创建一个新的release，这里创建了一个v1.2的版本，并简单描述了这次改动。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fspvjjd8nnj20od0lkwfs.jpg)\n然后再JitPack就可以看到这次修改的release了。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fspvkzpq0tj20kn0aagly.jpg)\n我们点击Get it。\n### 引入并使用\n然后JitPack自动帮我们生成了开源库的地址。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fspvm6j708j20la0h6myn.jpg)\n按照提示在android studio中引入即可。","slug":"Android Studio-发布自己的开源库到JitPack","published":1,"updated":"2018-06-27T09:49:25.093Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv53i000558ug8bmlbvgp","content":"<p>  之前我们使用过jCenter,虽然也很简单，步骤也只有简单几步，不过与JitPack比起来，还是显得太麻烦了。看看JitPack发布开源库的流程有多简单。</p>\n<a id=\"more\"></a>\n<h3 id=\"创建项目\"><a class=\"header-anchor\" href=\"#创建项目\">¶</a>创建项目</h3>\n<p>通过Android studio 创建开源库，然后上传到github.</p>\n<h3 id=\"登录网站\"><a class=\"header-anchor\" href=\"#登录网站\">¶</a>登录网站</h3>\n<p>打开 <a href=\"http://jitpack.io\" target=\"_blank\" rel=\"noopener\">http://jitpack.io</a> ,使用github登录账号，在输入框中输入你的项目的github地址。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fspvea5y1vj214y0hvabr.jpg\" alt=\"\"></p>\n<h3 id=\"发布版本\"><a class=\"header-anchor\" href=\"#发布版本\">¶</a>发布版本</h3>\n<p>可以看到下面有一个Version，如果你没有发布release，这里默认显示的是master，如果需要显得正式一点，可以每次修改重新发布一个版本，提交release更新版本号。</p>\n<p>在github中打开你的项目，点击release。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fspvhn7wlnj20xb05nmxq.jpg\" alt=\"\">\n然后创建一个新的release，这里创建了一个v1.2的版本，并简单描述了这次改动。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fspvjjd8nnj20od0lkwfs.jpg\" alt=\"\">\n然后再JitPack就可以看到这次修改的release了。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fspvkzpq0tj20kn0aagly.jpg\" alt=\"\">\n我们点击Get it。</p>\n<h3 id=\"引入并使用\"><a class=\"header-anchor\" href=\"#引入并使用\">¶</a>引入并使用</h3>\n<p>然后JitPack自动帮我们生成了开源库的地址。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fspvm6j708j20la0h6myn.jpg\" alt=\"\">\n按照提示在android studio中引入即可。</p>\n","site":{"data":{}},"excerpt":"<p>  之前我们使用过jCenter,虽然也很简单，步骤也只有简单几步，不过与JitPack比起来，还是显得太麻烦了。看看JitPack发布开源库的流程有多简单。</p>","more":"<h3 id=\"创建项目\"><a class=\"header-anchor\" href=\"#创建项目\">¶</a>创建项目</h3>\n<p>通过Android studio 创建开源库，然后上传到github.</p>\n<h3 id=\"登录网站\"><a class=\"header-anchor\" href=\"#登录网站\">¶</a>登录网站</h3>\n<p>打开 <a href=\"http://jitpack.io\" target=\"_blank\" rel=\"noopener\">http://jitpack.io</a> ,使用github登录账号，在输入框中输入你的项目的github地址。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fspvea5y1vj214y0hvabr.jpg\" alt=\"\"></p>\n<h3 id=\"发布版本\"><a class=\"header-anchor\" href=\"#发布版本\">¶</a>发布版本</h3>\n<p>可以看到下面有一个Version，如果你没有发布release，这里默认显示的是master，如果需要显得正式一点，可以每次修改重新发布一个版本，提交release更新版本号。</p>\n<p>在github中打开你的项目，点击release。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fspvhn7wlnj20xb05nmxq.jpg\" alt=\"\">\n然后创建一个新的release，这里创建了一个v1.2的版本，并简单描述了这次改动。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fspvjjd8nnj20od0lkwfs.jpg\" alt=\"\">\n然后再JitPack就可以看到这次修改的release了。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fspvkzpq0tj20kn0aagly.jpg\" alt=\"\">\n我们点击Get it。</p>\n<h3 id=\"引入并使用\"><a class=\"header-anchor\" href=\"#引入并使用\">¶</a>引入并使用</h3>\n<p>然后JitPack自动帮我们生成了开源库的地址。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fspvm6j708j20la0h6myn.jpg\" alt=\"\">\n按照提示在android studio中引入即可。</p>"},{"title":"Android studio中用gradle统一版本。","date":"2018-05-03T07:30:22.000Z","_content":"\n如果我们的项目比较小，只有一个moudle，那么我们在导入第三方库，或者设置minSdkVersion，targetSdkVersion等参数时，直接在moudle的build.gradle的相关位置进行设置就可以了，如果我们的项目比较庞大，有很多个moudle，特别是当我们使用组件化开发时，有多个gradle文件需要导入相同的配置，这时候如果按照老方法在build.gradle中写死我们的配置的话，是非常不方便修改的。这时候，我们就需要将gradle中的参数抽取出来，放到另外一个文件中，然后再在每个build.gradle文件中进行引入即可。\n<!-- more -->\n\n### 创建配置文件config.gradle\n\n```bash\next {\n\n    android = [\n            targetSdkVersion : 27,\n            compileSdkVersion: 27,\n            buildToolsVersion: '25.0.2',\n            minSdkVersion    : 21,\n            versionCode      : 1,\n            versionName      : \"1.0\",\n    ]\n    dependVersion = [\n            support: '27.1.1'\n    ]\n    gradle = [\n            gradle_version: \"3.1.3\"\n    ]\n    kotlin = [\n            kotlin_version: '1.2.31',\n    ]\n    dependencies = [\n            // ------------- Android -------------\n            supportV4            : \"com.android.support:support-v4:${dependVersion.support}\",\n            appcompatV7          : \"com.android.support:appcompat-v7:${dependVersion.support}\",\n            design               : \"com.android.support:design:${dependVersion.support}\",\n            constraintLayout     : 'com.android.support.constraint:constraint-layout:1.1.2',\n            //------------- 测试 -------------\n            junit                : 'junit:junit:4.12',\n            testRunner           : 'com.android.support.test:runner:1.0.2',\n            espresso             : 'com.android.support.test.espresso:espresso-core:3.0.2',\n            // ------------- 网络请求 -------------\n            okhttp               : 'com.squareup.okhttp3:okhttp:3.3.1',\n            retrofit             : 'com.squareup.retrofit2:retrofit:2.1.0',\n\n            // ------------- 图片加载 -------------\n            fresco               : 'com.facebook.fresco:fresco:0.11.0',\n            animatedGif          : 'com.facebook.fresco:animated-gif:0.12.0',\n            picasso              : 'com.squareup.picasso:picasso:2.5.2',\n            photoView            : 'com.github.chrisbanes:PhotoView:1.3.1',\n\n            // ------------- RxAndroid -------------\n            rxAndroid            : 'io.reactivex:rxandroid:1.2.1',\n            rxJava               : 'io.reactivex:rxjava:1.2.2',\n\n            // ------------- json解析 -------------\n            fastJson             : 'com.alibaba:fastjson:1.1.54.android',\n            gson                 : 'com.google.code.gson:gson:2.8.0',\n\n            // ------------- log打印工具 -------------\n            logger               : 'com.orhanobut:logger:1.15',\n\n            greendao             : 'org.greenrobot:greendao:3.2.0',\n\n            // ------------- ButterKnife -------------\n            butterknife          : 'com.jakewharton:butterknife:8.4.0',\n            butterknifeCompiler  : 'com.jakewharton:butterknife-compiler:8.4.0',\n\n            // ------------- LeakCanary -------------\n            leakcanaryAndroid    : 'com.squareup.leakcanary:leakcanary-android:1.5',\n            leakcanaryAndroidNoOp: 'com.squareup.leakcanary:leakcanary-android-no-op:1.5',\n            // ------------- activityrouter -------------\n            activityrouter       : 'com.github.mzule.activityrouter:activityrouter:1.2.2',\n    ]\n\n}\n```\n\n### 项目Project中的build.gradle对该配置文件进行引入\n```bash\nbuildscript {\n    apply from: \"config.gradle\"\n    repositories {\n        google()\n        jcenter()\n    }\n    dependencies {\n        classpath \"com.android.tools.build:gradle:$rootProject.ext.gradle.gradle_version\"\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$rootProject.ext.kotlin.kotlin_version\"\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        jcenter()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n```\n\n### moudle中的build.gradle的配置方式\n```bash\napply plugin: 'com.android.application'\n\napply plugin: 'kotlin-android'\n\napply plugin: 'kotlin-android-extensions'\n\nandroid {\n    compileSdkVersion rootProject.android.compileSdkVersion\n    defaultConfig {\n        applicationId \"lieeber.com.androidcomponent\"\n        minSdkVersion rootProject.android.minSdkVersion\n        targetSdkVersion rootProject.android.targetSdkVersion\n        versionCode rootProject.android.versionCode\n        versionName rootProject.android.versionName\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    implementation fileTree(include: ['*.jar'], dir: 'libs')\n    implementation project(':common')\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jre7:$rootProject.ext.kotlin.kotlin_version\"\n    implementation rootProject.ext.dependencies.appcompatV7\n    implementation rootProject.ext.dependencies.constraintLayout\n    testImplementation rootProject.ext.dependencies.junit\n    androidTestImplementation rootProject.ext.dependencies.testRunner\n    androidTestImplementation rootProject.ext.dependencies.espresso\n}\n```\n\n可以看出，配置文件是很灵活的，我们可以按照自己的习惯或者项目的情况来进行分组，不同的moudle都可以进行引入，当需要修改版本号或者对第三方库进行升级时，只需要在config.gradle修改就可以了。\n\n\n","source":"_posts/Android Studio-用gradle统一版本.md","raw":"---\ntitle: Android studio中用gradle统一版本。\ntags:\n  - Android studio\n  - gradle\ncategories:\n  - Android studio\ndate: 2018-5-03 15:30:22\n---\n\n如果我们的项目比较小，只有一个moudle，那么我们在导入第三方库，或者设置minSdkVersion，targetSdkVersion等参数时，直接在moudle的build.gradle的相关位置进行设置就可以了，如果我们的项目比较庞大，有很多个moudle，特别是当我们使用组件化开发时，有多个gradle文件需要导入相同的配置，这时候如果按照老方法在build.gradle中写死我们的配置的话，是非常不方便修改的。这时候，我们就需要将gradle中的参数抽取出来，放到另外一个文件中，然后再在每个build.gradle文件中进行引入即可。\n<!-- more -->\n\n### 创建配置文件config.gradle\n\n```bash\next {\n\n    android = [\n            targetSdkVersion : 27,\n            compileSdkVersion: 27,\n            buildToolsVersion: '25.0.2',\n            minSdkVersion    : 21,\n            versionCode      : 1,\n            versionName      : \"1.0\",\n    ]\n    dependVersion = [\n            support: '27.1.1'\n    ]\n    gradle = [\n            gradle_version: \"3.1.3\"\n    ]\n    kotlin = [\n            kotlin_version: '1.2.31',\n    ]\n    dependencies = [\n            // ------------- Android -------------\n            supportV4            : \"com.android.support:support-v4:${dependVersion.support}\",\n            appcompatV7          : \"com.android.support:appcompat-v7:${dependVersion.support}\",\n            design               : \"com.android.support:design:${dependVersion.support}\",\n            constraintLayout     : 'com.android.support.constraint:constraint-layout:1.1.2',\n            //------------- 测试 -------------\n            junit                : 'junit:junit:4.12',\n            testRunner           : 'com.android.support.test:runner:1.0.2',\n            espresso             : 'com.android.support.test.espresso:espresso-core:3.0.2',\n            // ------------- 网络请求 -------------\n            okhttp               : 'com.squareup.okhttp3:okhttp:3.3.1',\n            retrofit             : 'com.squareup.retrofit2:retrofit:2.1.0',\n\n            // ------------- 图片加载 -------------\n            fresco               : 'com.facebook.fresco:fresco:0.11.0',\n            animatedGif          : 'com.facebook.fresco:animated-gif:0.12.0',\n            picasso              : 'com.squareup.picasso:picasso:2.5.2',\n            photoView            : 'com.github.chrisbanes:PhotoView:1.3.1',\n\n            // ------------- RxAndroid -------------\n            rxAndroid            : 'io.reactivex:rxandroid:1.2.1',\n            rxJava               : 'io.reactivex:rxjava:1.2.2',\n\n            // ------------- json解析 -------------\n            fastJson             : 'com.alibaba:fastjson:1.1.54.android',\n            gson                 : 'com.google.code.gson:gson:2.8.0',\n\n            // ------------- log打印工具 -------------\n            logger               : 'com.orhanobut:logger:1.15',\n\n            greendao             : 'org.greenrobot:greendao:3.2.0',\n\n            // ------------- ButterKnife -------------\n            butterknife          : 'com.jakewharton:butterknife:8.4.0',\n            butterknifeCompiler  : 'com.jakewharton:butterknife-compiler:8.4.0',\n\n            // ------------- LeakCanary -------------\n            leakcanaryAndroid    : 'com.squareup.leakcanary:leakcanary-android:1.5',\n            leakcanaryAndroidNoOp: 'com.squareup.leakcanary:leakcanary-android-no-op:1.5',\n            // ------------- activityrouter -------------\n            activityrouter       : 'com.github.mzule.activityrouter:activityrouter:1.2.2',\n    ]\n\n}\n```\n\n### 项目Project中的build.gradle对该配置文件进行引入\n```bash\nbuildscript {\n    apply from: \"config.gradle\"\n    repositories {\n        google()\n        jcenter()\n    }\n    dependencies {\n        classpath \"com.android.tools.build:gradle:$rootProject.ext.gradle.gradle_version\"\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$rootProject.ext.kotlin.kotlin_version\"\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        jcenter()\n    }\n}\n\ntask clean(type: Delete) {\n    delete rootProject.buildDir\n}\n```\n\n### moudle中的build.gradle的配置方式\n```bash\napply plugin: 'com.android.application'\n\napply plugin: 'kotlin-android'\n\napply plugin: 'kotlin-android-extensions'\n\nandroid {\n    compileSdkVersion rootProject.android.compileSdkVersion\n    defaultConfig {\n        applicationId \"lieeber.com.androidcomponent\"\n        minSdkVersion rootProject.android.minSdkVersion\n        targetSdkVersion rootProject.android.targetSdkVersion\n        versionCode rootProject.android.versionCode\n        versionName rootProject.android.versionName\n        testInstrumentationRunner \"android.support.test.runner.AndroidJUnitRunner\"\n    }\n    buildTypes {\n        release {\n            minifyEnabled false\n            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'\n        }\n    }\n}\n\ndependencies {\n    implementation fileTree(include: ['*.jar'], dir: 'libs')\n    implementation project(':common')\n    implementation \"org.jetbrains.kotlin:kotlin-stdlib-jre7:$rootProject.ext.kotlin.kotlin_version\"\n    implementation rootProject.ext.dependencies.appcompatV7\n    implementation rootProject.ext.dependencies.constraintLayout\n    testImplementation rootProject.ext.dependencies.junit\n    androidTestImplementation rootProject.ext.dependencies.testRunner\n    androidTestImplementation rootProject.ext.dependencies.espresso\n}\n```\n\n可以看出，配置文件是很灵活的，我们可以按照自己的习惯或者项目的情况来进行分组，不同的moudle都可以进行引入，当需要修改版本号或者对第三方库进行升级时，只需要在config.gradle修改就可以了。\n\n\n","slug":"Android Studio-用gradle统一版本","published":1,"updated":"2018-06-26T12:13:31.571Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv53j000658ug67owhodm","content":"<p>如果我们的项目比较小，只有一个moudle，那么我们在导入第三方库，或者设置minSdkVersion，targetSdkVersion等参数时，直接在moudle的build.gradle的相关位置进行设置就可以了，如果我们的项目比较庞大，有很多个moudle，特别是当我们使用组件化开发时，有多个gradle文件需要导入相同的配置，这时候如果按照老方法在build.gradle中写死我们的配置的话，是非常不方便修改的。这时候，我们就需要将gradle中的参数抽取出来，放到另外一个文件中，然后再在每个build.gradle文件中进行引入即可。</p>\n<a id=\"more\"></a>\n<h3 id=\"创建配置文件config-gradle\"><a class=\"header-anchor\" href=\"#创建配置文件config-gradle\">¶</a>创建配置文件config.gradle</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ext &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    android = [</span><br><span class=\"line\">            targetSdkVersion : 27,</span><br><span class=\"line\">            compileSdkVersion: 27,</span><br><span class=\"line\">            buildToolsVersion: <span class=\"string\">'25.0.2'</span>,</span><br><span class=\"line\">            minSdkVersion    : 21,</span><br><span class=\"line\">            versionCode      : 1,</span><br><span class=\"line\">            versionName      : <span class=\"string\">\"1.0\"</span>,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">    dependVersion = [</span><br><span class=\"line\">            support: <span class=\"string\">'27.1.1'</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">    gradle = [</span><br><span class=\"line\">            gradle_version: <span class=\"string\">\"3.1.3\"</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">    kotlin = [</span><br><span class=\"line\">            kotlin_version: <span class=\"string\">'1.2.31'</span>,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">    dependencies = [</span><br><span class=\"line\">            // ------------- Android -------------</span><br><span class=\"line\">            supportV4            : <span class=\"string\">\"com.android.support:support-v4:<span class=\"variable\">$&#123;dependVersion.support&#125;</span>\"</span>,</span><br><span class=\"line\">            appcompatV7          : <span class=\"string\">\"com.android.support:appcompat-v7:<span class=\"variable\">$&#123;dependVersion.support&#125;</span>\"</span>,</span><br><span class=\"line\">            design               : <span class=\"string\">\"com.android.support:design:<span class=\"variable\">$&#123;dependVersion.support&#125;</span>\"</span>,</span><br><span class=\"line\">            constraintLayout     : <span class=\"string\">'com.android.support.constraint:constraint-layout:1.1.2'</span>,</span><br><span class=\"line\">            //------------- 测试 -------------</span><br><span class=\"line\">            junit                : <span class=\"string\">'junit:junit:4.12'</span>,</span><br><span class=\"line\">            testRunner           : <span class=\"string\">'com.android.support.test:runner:1.0.2'</span>,</span><br><span class=\"line\">            espresso             : <span class=\"string\">'com.android.support.test.espresso:espresso-core:3.0.2'</span>,</span><br><span class=\"line\">            // ------------- 网络请求 -------------</span><br><span class=\"line\">            okhttp               : <span class=\"string\">'com.squareup.okhttp3:okhttp:3.3.1'</span>,</span><br><span class=\"line\">            retrofit             : <span class=\"string\">'com.squareup.retrofit2:retrofit:2.1.0'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            // ------------- 图片加载 -------------</span><br><span class=\"line\">            fresco               : <span class=\"string\">'com.facebook.fresco:fresco:0.11.0'</span>,</span><br><span class=\"line\">            animatedGif          : <span class=\"string\">'com.facebook.fresco:animated-gif:0.12.0'</span>,</span><br><span class=\"line\">            picasso              : <span class=\"string\">'com.squareup.picasso:picasso:2.5.2'</span>,</span><br><span class=\"line\">            photoView            : <span class=\"string\">'com.github.chrisbanes:PhotoView:1.3.1'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            // ------------- RxAndroid -------------</span><br><span class=\"line\">            rxAndroid            : <span class=\"string\">'io.reactivex:rxandroid:1.2.1'</span>,</span><br><span class=\"line\">            rxJava               : <span class=\"string\">'io.reactivex:rxjava:1.2.2'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            // ------------- json解析 -------------</span><br><span class=\"line\">            fastJson             : <span class=\"string\">'com.alibaba:fastjson:1.1.54.android'</span>,</span><br><span class=\"line\">            gson                 : <span class=\"string\">'com.google.code.gson:gson:2.8.0'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            // ------------- <span class=\"built_in\">log</span>打印工具 -------------</span><br><span class=\"line\">            logger               : <span class=\"string\">'com.orhanobut:logger:1.15'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            greendao             : <span class=\"string\">'org.greenrobot:greendao:3.2.0'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            // ------------- ButterKnife -------------</span><br><span class=\"line\">            butterknife          : <span class=\"string\">'com.jakewharton:butterknife:8.4.0'</span>,</span><br><span class=\"line\">            butterknifeCompiler  : <span class=\"string\">'com.jakewharton:butterknife-compiler:8.4.0'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            // ------------- LeakCanary -------------</span><br><span class=\"line\">            leakcanaryAndroid    : <span class=\"string\">'com.squareup.leakcanary:leakcanary-android:1.5'</span>,</span><br><span class=\"line\">            leakcanaryAndroidNoOp: <span class=\"string\">'com.squareup.leakcanary:leakcanary-android-no-op:1.5'</span>,</span><br><span class=\"line\">            // ------------- activityrouter -------------</span><br><span class=\"line\">            activityrouter       : <span class=\"string\">'com.github.mzule.activityrouter:activityrouter:1.2.2'</span>,</span><br><span class=\"line\">    ]</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"项目project中的build-gradle对该配置文件进行引入\"><a class=\"header-anchor\" href=\"#项目project中的build-gradle对该配置文件进行引入\">¶</a>项目Project中的build.gradle对该配置文件进行引入</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">buildscript &#123;</span><br><span class=\"line\">    apply from: <span class=\"string\">\"config.gradle\"</span></span><br><span class=\"line\">    repositories &#123;</span><br><span class=\"line\">        google()</span><br><span class=\"line\">        jcenter()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    dependencies &#123;</span><br><span class=\"line\">        classpath <span class=\"string\">\"com.android.tools.build:gradle:<span class=\"variable\">$rootProject</span>.ext.gradle.gradle_version\"</span></span><br><span class=\"line\">        classpath <span class=\"string\">\"org.jetbrains.kotlin:kotlin-gradle-plugin:<span class=\"variable\">$rootProject</span>.ext.kotlin.kotlin_version\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">allprojects &#123;</span><br><span class=\"line\">    repositories &#123;</span><br><span class=\"line\">        google()</span><br><span class=\"line\">        jcenter()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">task clean(<span class=\"built_in\">type</span>: Delete) &#123;</span><br><span class=\"line\">    delete rootProject.buildDir</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"moudle中的build-gradle的配置方式\"><a class=\"header-anchor\" href=\"#moudle中的build-gradle的配置方式\">¶</a>moudle中的build.gradle的配置方式</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply plugin: <span class=\"string\">'com.android.application'</span></span><br><span class=\"line\"></span><br><span class=\"line\">apply plugin: <span class=\"string\">'kotlin-android'</span></span><br><span class=\"line\"></span><br><span class=\"line\">apply plugin: <span class=\"string\">'kotlin-android-extensions'</span></span><br><span class=\"line\"></span><br><span class=\"line\">android &#123;</span><br><span class=\"line\">    compileSdkVersion rootProject.android.compileSdkVersion</span><br><span class=\"line\">    defaultConfig &#123;</span><br><span class=\"line\">        applicationId <span class=\"string\">\"lieeber.com.androidcomponent\"</span></span><br><span class=\"line\">        minSdkVersion rootProject.android.minSdkVersion</span><br><span class=\"line\">        targetSdkVersion rootProject.android.targetSdkVersion</span><br><span class=\"line\">        versionCode rootProject.android.versionCode</span><br><span class=\"line\">        versionName rootProject.android.versionName</span><br><span class=\"line\">        testInstrumentationRunner <span class=\"string\">\"android.support.test.runner.AndroidJUnitRunner\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    buildTypes &#123;</span><br><span class=\"line\">        release &#123;</span><br><span class=\"line\">            minifyEnabled <span class=\"literal\">false</span></span><br><span class=\"line\">            proguardFiles getDefaultProguardFile(<span class=\"string\">'proguard-android.txt'</span>), <span class=\"string\">'proguard-rules.pro'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    implementation fileTree(include: [<span class=\"string\">'*.jar'</span>], dir: <span class=\"string\">'libs'</span>)</span><br><span class=\"line\">    implementation project(<span class=\"string\">':common'</span>)</span><br><span class=\"line\">    implementation <span class=\"string\">\"org.jetbrains.kotlin:kotlin-stdlib-jre7:<span class=\"variable\">$rootProject</span>.ext.kotlin.kotlin_version\"</span></span><br><span class=\"line\">    implementation rootProject.ext.dependencies.appcompatV7</span><br><span class=\"line\">    implementation rootProject.ext.dependencies.constraintLayout</span><br><span class=\"line\">    testImplementation rootProject.ext.dependencies.junit</span><br><span class=\"line\">    androidTestImplementation rootProject.ext.dependencies.testRunner</span><br><span class=\"line\">    androidTestImplementation rootProject.ext.dependencies.espresso</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看出，配置文件是很灵活的，我们可以按照自己的习惯或者项目的情况来进行分组，不同的moudle都可以进行引入，当需要修改版本号或者对第三方库进行升级时，只需要在config.gradle修改就可以了。</p>\n","site":{"data":{}},"excerpt":"<p>如果我们的项目比较小，只有一个moudle，那么我们在导入第三方库，或者设置minSdkVersion，targetSdkVersion等参数时，直接在moudle的build.gradle的相关位置进行设置就可以了，如果我们的项目比较庞大，有很多个moudle，特别是当我们使用组件化开发时，有多个gradle文件需要导入相同的配置，这时候如果按照老方法在build.gradle中写死我们的配置的话，是非常不方便修改的。这时候，我们就需要将gradle中的参数抽取出来，放到另外一个文件中，然后再在每个build.gradle文件中进行引入即可。</p>","more":"<h3 id=\"创建配置文件config-gradle\"><a class=\"header-anchor\" href=\"#创建配置文件config-gradle\">¶</a>创建配置文件config.gradle</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ext &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    android = [</span><br><span class=\"line\">            targetSdkVersion : 27,</span><br><span class=\"line\">            compileSdkVersion: 27,</span><br><span class=\"line\">            buildToolsVersion: <span class=\"string\">'25.0.2'</span>,</span><br><span class=\"line\">            minSdkVersion    : 21,</span><br><span class=\"line\">            versionCode      : 1,</span><br><span class=\"line\">            versionName      : <span class=\"string\">\"1.0\"</span>,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">    dependVersion = [</span><br><span class=\"line\">            support: <span class=\"string\">'27.1.1'</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">    gradle = [</span><br><span class=\"line\">            gradle_version: <span class=\"string\">\"3.1.3\"</span></span><br><span class=\"line\">    ]</span><br><span class=\"line\">    kotlin = [</span><br><span class=\"line\">            kotlin_version: <span class=\"string\">'1.2.31'</span>,</span><br><span class=\"line\">    ]</span><br><span class=\"line\">    dependencies = [</span><br><span class=\"line\">            // ------------- Android -------------</span><br><span class=\"line\">            supportV4            : <span class=\"string\">\"com.android.support:support-v4:<span class=\"variable\">$&#123;dependVersion.support&#125;</span>\"</span>,</span><br><span class=\"line\">            appcompatV7          : <span class=\"string\">\"com.android.support:appcompat-v7:<span class=\"variable\">$&#123;dependVersion.support&#125;</span>\"</span>,</span><br><span class=\"line\">            design               : <span class=\"string\">\"com.android.support:design:<span class=\"variable\">$&#123;dependVersion.support&#125;</span>\"</span>,</span><br><span class=\"line\">            constraintLayout     : <span class=\"string\">'com.android.support.constraint:constraint-layout:1.1.2'</span>,</span><br><span class=\"line\">            //------------- 测试 -------------</span><br><span class=\"line\">            junit                : <span class=\"string\">'junit:junit:4.12'</span>,</span><br><span class=\"line\">            testRunner           : <span class=\"string\">'com.android.support.test:runner:1.0.2'</span>,</span><br><span class=\"line\">            espresso             : <span class=\"string\">'com.android.support.test.espresso:espresso-core:3.0.2'</span>,</span><br><span class=\"line\">            // ------------- 网络请求 -------------</span><br><span class=\"line\">            okhttp               : <span class=\"string\">'com.squareup.okhttp3:okhttp:3.3.1'</span>,</span><br><span class=\"line\">            retrofit             : <span class=\"string\">'com.squareup.retrofit2:retrofit:2.1.0'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            // ------------- 图片加载 -------------</span><br><span class=\"line\">            fresco               : <span class=\"string\">'com.facebook.fresco:fresco:0.11.0'</span>,</span><br><span class=\"line\">            animatedGif          : <span class=\"string\">'com.facebook.fresco:animated-gif:0.12.0'</span>,</span><br><span class=\"line\">            picasso              : <span class=\"string\">'com.squareup.picasso:picasso:2.5.2'</span>,</span><br><span class=\"line\">            photoView            : <span class=\"string\">'com.github.chrisbanes:PhotoView:1.3.1'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            // ------------- RxAndroid -------------</span><br><span class=\"line\">            rxAndroid            : <span class=\"string\">'io.reactivex:rxandroid:1.2.1'</span>,</span><br><span class=\"line\">            rxJava               : <span class=\"string\">'io.reactivex:rxjava:1.2.2'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            // ------------- json解析 -------------</span><br><span class=\"line\">            fastJson             : <span class=\"string\">'com.alibaba:fastjson:1.1.54.android'</span>,</span><br><span class=\"line\">            gson                 : <span class=\"string\">'com.google.code.gson:gson:2.8.0'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            // ------------- <span class=\"built_in\">log</span>打印工具 -------------</span><br><span class=\"line\">            logger               : <span class=\"string\">'com.orhanobut:logger:1.15'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            greendao             : <span class=\"string\">'org.greenrobot:greendao:3.2.0'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            // ------------- ButterKnife -------------</span><br><span class=\"line\">            butterknife          : <span class=\"string\">'com.jakewharton:butterknife:8.4.0'</span>,</span><br><span class=\"line\">            butterknifeCompiler  : <span class=\"string\">'com.jakewharton:butterknife-compiler:8.4.0'</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">            // ------------- LeakCanary -------------</span><br><span class=\"line\">            leakcanaryAndroid    : <span class=\"string\">'com.squareup.leakcanary:leakcanary-android:1.5'</span>,</span><br><span class=\"line\">            leakcanaryAndroidNoOp: <span class=\"string\">'com.squareup.leakcanary:leakcanary-android-no-op:1.5'</span>,</span><br><span class=\"line\">            // ------------- activityrouter -------------</span><br><span class=\"line\">            activityrouter       : <span class=\"string\">'com.github.mzule.activityrouter:activityrouter:1.2.2'</span>,</span><br><span class=\"line\">    ]</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"项目project中的build-gradle对该配置文件进行引入\"><a class=\"header-anchor\" href=\"#项目project中的build-gradle对该配置文件进行引入\">¶</a>项目Project中的build.gradle对该配置文件进行引入</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">buildscript &#123;</span><br><span class=\"line\">    apply from: <span class=\"string\">\"config.gradle\"</span></span><br><span class=\"line\">    repositories &#123;</span><br><span class=\"line\">        google()</span><br><span class=\"line\">        jcenter()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    dependencies &#123;</span><br><span class=\"line\">        classpath <span class=\"string\">\"com.android.tools.build:gradle:<span class=\"variable\">$rootProject</span>.ext.gradle.gradle_version\"</span></span><br><span class=\"line\">        classpath <span class=\"string\">\"org.jetbrains.kotlin:kotlin-gradle-plugin:<span class=\"variable\">$rootProject</span>.ext.kotlin.kotlin_version\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">allprojects &#123;</span><br><span class=\"line\">    repositories &#123;</span><br><span class=\"line\">        google()</span><br><span class=\"line\">        jcenter()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">task clean(<span class=\"built_in\">type</span>: Delete) &#123;</span><br><span class=\"line\">    delete rootProject.buildDir</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"moudle中的build-gradle的配置方式\"><a class=\"header-anchor\" href=\"#moudle中的build-gradle的配置方式\">¶</a>moudle中的build.gradle的配置方式</h3>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apply plugin: <span class=\"string\">'com.android.application'</span></span><br><span class=\"line\"></span><br><span class=\"line\">apply plugin: <span class=\"string\">'kotlin-android'</span></span><br><span class=\"line\"></span><br><span class=\"line\">apply plugin: <span class=\"string\">'kotlin-android-extensions'</span></span><br><span class=\"line\"></span><br><span class=\"line\">android &#123;</span><br><span class=\"line\">    compileSdkVersion rootProject.android.compileSdkVersion</span><br><span class=\"line\">    defaultConfig &#123;</span><br><span class=\"line\">        applicationId <span class=\"string\">\"lieeber.com.androidcomponent\"</span></span><br><span class=\"line\">        minSdkVersion rootProject.android.minSdkVersion</span><br><span class=\"line\">        targetSdkVersion rootProject.android.targetSdkVersion</span><br><span class=\"line\">        versionCode rootProject.android.versionCode</span><br><span class=\"line\">        versionName rootProject.android.versionName</span><br><span class=\"line\">        testInstrumentationRunner <span class=\"string\">\"android.support.test.runner.AndroidJUnitRunner\"</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    buildTypes &#123;</span><br><span class=\"line\">        release &#123;</span><br><span class=\"line\">            minifyEnabled <span class=\"literal\">false</span></span><br><span class=\"line\">            proguardFiles getDefaultProguardFile(<span class=\"string\">'proguard-android.txt'</span>), <span class=\"string\">'proguard-rules.pro'</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">dependencies &#123;</span><br><span class=\"line\">    implementation fileTree(include: [<span class=\"string\">'*.jar'</span>], dir: <span class=\"string\">'libs'</span>)</span><br><span class=\"line\">    implementation project(<span class=\"string\">':common'</span>)</span><br><span class=\"line\">    implementation <span class=\"string\">\"org.jetbrains.kotlin:kotlin-stdlib-jre7:<span class=\"variable\">$rootProject</span>.ext.kotlin.kotlin_version\"</span></span><br><span class=\"line\">    implementation rootProject.ext.dependencies.appcompatV7</span><br><span class=\"line\">    implementation rootProject.ext.dependencies.constraintLayout</span><br><span class=\"line\">    testImplementation rootProject.ext.dependencies.junit</span><br><span class=\"line\">    androidTestImplementation rootProject.ext.dependencies.testRunner</span><br><span class=\"line\">    androidTestImplementation rootProject.ext.dependencies.espresso</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以看出，配置文件是很灵活的，我们可以按照自己的习惯或者项目的情况来进行分组，不同的moudle都可以进行引入，当需要修改版本号或者对第三方库进行升级时，只需要在config.gradle修改就可以了。</p>"},{"title":"垃圾收集器与内存分配策略","date":"2017-03-15T04:03:22.000Z","_content":"不同的语言有不同的内存分配策略和垃圾收集技术，比如C++语言，对象的创建和回收都需要程序员手动去完成，虽然这样自由度高，但是也大大增加了程序员的工作量；Java的垃圾回收策略解放了程序员的双手，而且Java的内存分配和回收技术已经相当成熟，我们甚至在完全不必关心内存分配的情况下书写代码，但是当我们遇到内存溢出，内存泄露的问题时。如果不了解Java的回收策略，面对这些问题就会束手无策。所以对于这部分知识的了解还是很重要的。\n<!-- more -->\n### 怎样判断一个对象已死\n\n1. 引用计数算法：\n\n很多语言都采用的这种方式来判断一个对象是否已经\"死去\"，比如Object-C，给对象添加一个引用计数器，每当有一个地方引用它时，计数器就加1，当引用失效时，计数器就减1；任何时刻计数器为0的对象就是不可能再被使用的。\n\n引用计数法虽然实现简单，判定效率也很高，但是如果两个对象相互引用，就容易造成死锁。\n2. 可达性分析算法：Java，C#，Lisp等都是通过这种算法来判断对象是否存活的\n    - 通过一系列称为“GC Roots”的对象作为起始点，从这些节点开始向下搜索，搜索所走过的路径称为引用链。如果一个对象到GC Roots没有任何引用链相连时，则证明对象是不可用的。会被判定为可回收的对象。\n    - 在Java语言中，可作为GC Roots的对象包括：\n        - 虚拟机栈中引用的对象。\n        - 方法区中类静态属性引用的对象。\n        - 方法区中常量引用的对象。\n        - 本地方法栈中JNI（Native方法）引用的对象。\n\n无论是通过引用计数算法判断对象的引用数量还是通过可达性分析算法判断对象的引用链是否可达，判定对象是否存活都与\"引用\"有关，Java中引用主要分为以下几类。\n\n3. 引用的分类（JDK1.2之后对引用的概念进行了补充）\n    - 强引用：垃圾收集器永远不会回收掉被强引用引用的对象。\n    - 软引用：在系统将要发生内存溢出异常之前，将会把这些对象列进回收范围之中进行二次回收。如果这次回收还没有足够的内存，将会抛出内存溢出异常。SoftReference类\n    - 弱引用：被弱引用关联的对象只能存活到下一次垃圾收集发生之前。当垃圾收集器工作时，无论当前内存是否足够，都会回收掉只被弱引用关联的对象。WeakReference类\n    - 虚引用 ：唯一目的就是能在这个对象被收集器回收时收到一个系统通知。PhantomReference类。\n\n4. finalize方法\n在Java中，还有一个比较特殊的方法，当一个对象不可达时，他不一定会立马被释放，要真正宣告一个对象的死亡，需要进过两次标记过程。如果对象在进行可达性分析后发现没有与CG Roots相连接的引用连，那它就会被第一次标记并进行一次筛选，筛选的条件是此对象是否有必要执行finalize方法（覆盖且没执行过finalize方法）；对于有必要执行finalize方法的，会把对象放入到F-Queue队列中，然后执行finalize方法。如果对象在该方法中自救了，那第二次标记时就会被移除出“即将回收”集合，不会再调用finalize方法。\n\n5. 回收方法区\n在新生代中，进行一次垃圾收集一般可以回收70%-95%的空间，是不需要对方法区进行垃圾收集的，但是在永久代，效率就远低于此，因此还存在方法区的垃圾回收。主要回收两部分内容：废弃常量和无用的类。\n    - 废弃常量：没有任何String对象引用常量池中的该常量。\n    - 无用的类\n        - 该类所有的实例都已经被回收，也就是Java堆中不存在该类的任何实例。\n        - 加载该类的ClassLoader已经被回收。\n        - 该类对应的java.lang.Class对象没有在任何地方被引用，无法在任何地方通过反射访问该类的方法。\n\n### 垃圾回收算法\n\n判断出一个对象\"已死\"之后，就需要采取算法将其回收，不同的平台虚拟机有不同的回收算法，下面是几种主流垃圾回收算法。\n\n1. 标记清除算法\n    - 效率问题：标记和清除两个过程的效率都不高。\n    - 空间问题：标记清除后产生大量不连续的内存碎片，空间碎片太多可能会导致以后在程序运行过程中需要分配较大对象时，无法找到足够的连续内存而不得不提前触发另一次垃圾收集动作。\n2. 复制算法\n    - 将可用的内存按容量划分为大小相等的两块，每次只使用其中的一块。当这一块内存用完了，就将还存活着的对象复制到另外一块上面，然后再把已使用过的内存空间一次清理掉。\n    - 每次都是对整个半区进行内存回收，不用考虑内存碎片等复杂情况，实现简单，运行高效，但是代价是将内存缩小为原来的一半。\n    - 将内存分为一块较大的Eden空间和两块较小的Survivor空间，每次使用Eden和其中一块Survivor，当回收时，将Eden和Survivor中还存活的对象一次性复制到另外一块Survivor空间上，最后清理掉Eden和刚才使用过的Survivor空间。\n    - Eden和Survivor空间，8：1。当Survivor空间不够用时，需要依赖其他内存进行分配担保。\n1. 标记-整理算法\n    * 标记过程和标记-清除算法一样，但不是直接对可回收对象进行清理了，而是让所有存活的对象都向一端移动，然后直接清理掉边界以外的内存。\n2. 分代收集算法\n    * 将Java堆分为新生代和老年代，新生代每次垃圾收集时都有大批对象死去，可以选用复制算法，只需要付出少量存活对象的复制成本就可以完成收集。老年代对象存活率高，没有额外空间对它进行分配担保，必须使用标记-清理或标记-整理算法进行回收。\n\n### HotSpot的算法实现\n1. 枚举根节点\n    * 在可达性分析获取GC Roots 节点这个操作中，使用的都是准确性GC，虚拟机在某个位置把栈上代表引用的位置记录下来，这样在gc发生的时候就不用全部扫描，在HotSpot中使用的是一种叫做OopMap的数据结构来记录的。\n2. 安全点（Safepoint）\n    * 在OopMap的协助下，可以快速的完成GC Roots的枚举，但是也不能随时随地都生成OopMap，那样一方面需要更多的空间来存放这些对象，另一方面效率也会简单低下。所以只会在特定的位置来记录一下：\n        * 循环的末尾。\n        * 方法临返回前/调用方法的call指令后。\n        * 可能抛异常的位置。\n    * 安全点也是所有线程在要GC的时候停顿的位置，可以通过两种方式让线程在安全点停顿下来。\n        * 抢先式中断（几乎没有虚拟机采用这种方式中断）\n            * 在GC发生的时候就让所有线程都中断，如果发现哪个线程中断的地方不在安全点上，那么就恢复线程，然后让它跑到安全点上。\n        * 主动式中断\n            * 让GC在需要中断线程的时候不直接对线程操作，设置一个标志，让各个线程主动轮询这个标志，如果中断标志位真时就让自己中断。\n3. 安全区域（Safe Region）\n    * 指在一段代码片段之中，引用关系不会发生变化，在这个区域中的任意地方开始GC都是安全的。\n\n### 垃圾收集器\n垃圾收集器是内存回收的具体实现。不同的厂商，不同的版本的虚拟机所提供的垃圾收集器都会有很大的差别，并且提供参数供用户根据自己的应用特点和要求组合出各个年代所使用的收集器。\n1. Serial收集器\n    - 最基本，发展历史最悠久的收集器；单线程收集器，在进行垃圾收集时，必须暂停其他所有的工作线程，直到收集结束；（与其他收集器的单线程相比，简单而高效，对于限定单个cpu的环境来说，Serial收集器由于没有线程交互的开销，专心做垃圾收集自然可以获得最高的单线程收集效率。在桌面应用中，停顿在几十毫秒到一百多毫秒以内，只要不是频繁发生，可以接受。)\n2. ParNew收集器\n    - Serial收集器的多线程版本。是许多运行在Server模式下的虚拟机中首选的新生代收集器。\n3. Parallel Scavenge收集器\n    - 使用复制算法的并行的多线程新生代收集器，他的目标是达到一个可控制的吞吐量[吞吐量=运行用户代码时间/(运行用户代码时间+垃圾收集时间)]，而不是尽可能地缩短垃圾收集时用户线程的停顿时间。该收集器具有自适应调节策略。\n4. Serial Old收集器\n    - Serial收集器的老年代版本。同样是一个单线程收集器，使用“标记-整理”算法\n5. Parallel Old 收集器\n    - Parallel Scavenge收集器的老年代版本。使用多线程和”标记-整理“算法。\n6. CMS收集器\n    - 是一种以获取最短回收停顿时间为目标的收集器，基于“标记-清除”算法。分为初始标记，并发标记，重新标记和并发清除。其中初始标记和重新标记依然需要”Stop The World“。它有以下三个缺点：\n        - 对CPU资源敏感。\n        - 无法处理浮动垃圾。\n        - 基于标记-清除算法实现，收集结束后会有大量空间碎片产生。\n7. G1收集器\n    - 并行与并发：G1 能充分利用多 CPU、多核环境下的硬件优势，使用多个 CPU  (CPU 或者 CPU 核心）来缩短 Stop-The-World 停顿的时间，部分其他收集器原本需要停顿 Java 线程执行的 GC 动作，G1 收集器仍然可以通过并发的方式让 Java 程序继续执行。\n    - 分代收集：与其他收集器一样，分代概念在 G1 中依然得以保留。虽然 G1 可以不需要其他收集器配合就能独立管理整个 GC 堆，但它能够采用不同的方式去处理新创建的对象和已经存活了一段时间、熬过多次 GC 的旧对象以获取更好的收集效果。\n    - 空间整合：与 CMS 的“标记一清理”算法不同，G1 从整体来看是基于“标记一整理”算法实现的收集器，从局部（两个 Region 之间）上来看是基于“复制”算法实现的，但无论如何，这两种算法都意味着 G1 运作期间不会产生内存空间碎片，收集后能提供规整的可用内存。这种特性有利于程序长时间运行，分配大对象时不会因为无法找到连续内存空间而提前触发下一次 GC。\n    - 可预测的停顿：这是 G1 相对于 CMS 的另一大优势，降低停顿时间是 G1 和 CMS 共同的关注点，但 G1 除了追求低停顿外，还能建立可预测的停顿时间模型，能让使用者明确指定在一个长度为 M 毫秒的时间片段内，消耗在垃圾收集上的时间不得超过N 毫秒，这几乎已经是实时 Java  (RTSJ）的垃圾收集器的特征了。\n    - 四个步骤\n        - 初始标记（Initial Marking）\n        - 并发标记（Concurrent Marking）\n        - 最终标记（Final Marking)\n        - 筛选回收（Live Data Counting and Evacuation)\n\n### 内存分配与回收策略\n1. 对象优先在 Eden 分配\n2. 大对象直接进入老年代\n3. 长期存活的对象将进入老年代\n4. 动态对象年龄判定\n    * 为了能更好地适应不同程序的内存状况，虚拟机并不是永远地要求对象的年龄必须达到了 MaxTenuringThreshold 才能晋升老年代，如果在 Survivor 空间中相同年龄所有对象大小的总和大于 Survivor 空间的一半，年龄大于或等于该年龄的对象就可以直接进人老年代，无须等到 MaxTenuringThreshold 中要求的年龄。\n5. 空间分配担保\n\n","source":"_posts/Java虚拟机--垃圾收集器与内存分配策略.md","raw":"---\ntitle: 垃圾收集器与内存分配策略\ntags:\n  - Java\n  - Java虚拟机\ncategories:\n  - Java\ndate: 2017-03-15 12:03:22\n---\n不同的语言有不同的内存分配策略和垃圾收集技术，比如C++语言，对象的创建和回收都需要程序员手动去完成，虽然这样自由度高，但是也大大增加了程序员的工作量；Java的垃圾回收策略解放了程序员的双手，而且Java的内存分配和回收技术已经相当成熟，我们甚至在完全不必关心内存分配的情况下书写代码，但是当我们遇到内存溢出，内存泄露的问题时。如果不了解Java的回收策略，面对这些问题就会束手无策。所以对于这部分知识的了解还是很重要的。\n<!-- more -->\n### 怎样判断一个对象已死\n\n1. 引用计数算法：\n\n很多语言都采用的这种方式来判断一个对象是否已经\"死去\"，比如Object-C，给对象添加一个引用计数器，每当有一个地方引用它时，计数器就加1，当引用失效时，计数器就减1；任何时刻计数器为0的对象就是不可能再被使用的。\n\n引用计数法虽然实现简单，判定效率也很高，但是如果两个对象相互引用，就容易造成死锁。\n2. 可达性分析算法：Java，C#，Lisp等都是通过这种算法来判断对象是否存活的\n    - 通过一系列称为“GC Roots”的对象作为起始点，从这些节点开始向下搜索，搜索所走过的路径称为引用链。如果一个对象到GC Roots没有任何引用链相连时，则证明对象是不可用的。会被判定为可回收的对象。\n    - 在Java语言中，可作为GC Roots的对象包括：\n        - 虚拟机栈中引用的对象。\n        - 方法区中类静态属性引用的对象。\n        - 方法区中常量引用的对象。\n        - 本地方法栈中JNI（Native方法）引用的对象。\n\n无论是通过引用计数算法判断对象的引用数量还是通过可达性分析算法判断对象的引用链是否可达，判定对象是否存活都与\"引用\"有关，Java中引用主要分为以下几类。\n\n3. 引用的分类（JDK1.2之后对引用的概念进行了补充）\n    - 强引用：垃圾收集器永远不会回收掉被强引用引用的对象。\n    - 软引用：在系统将要发生内存溢出异常之前，将会把这些对象列进回收范围之中进行二次回收。如果这次回收还没有足够的内存，将会抛出内存溢出异常。SoftReference类\n    - 弱引用：被弱引用关联的对象只能存活到下一次垃圾收集发生之前。当垃圾收集器工作时，无论当前内存是否足够，都会回收掉只被弱引用关联的对象。WeakReference类\n    - 虚引用 ：唯一目的就是能在这个对象被收集器回收时收到一个系统通知。PhantomReference类。\n\n4. finalize方法\n在Java中，还有一个比较特殊的方法，当一个对象不可达时，他不一定会立马被释放，要真正宣告一个对象的死亡，需要进过两次标记过程。如果对象在进行可达性分析后发现没有与CG Roots相连接的引用连，那它就会被第一次标记并进行一次筛选，筛选的条件是此对象是否有必要执行finalize方法（覆盖且没执行过finalize方法）；对于有必要执行finalize方法的，会把对象放入到F-Queue队列中，然后执行finalize方法。如果对象在该方法中自救了，那第二次标记时就会被移除出“即将回收”集合，不会再调用finalize方法。\n\n5. 回收方法区\n在新生代中，进行一次垃圾收集一般可以回收70%-95%的空间，是不需要对方法区进行垃圾收集的，但是在永久代，效率就远低于此，因此还存在方法区的垃圾回收。主要回收两部分内容：废弃常量和无用的类。\n    - 废弃常量：没有任何String对象引用常量池中的该常量。\n    - 无用的类\n        - 该类所有的实例都已经被回收，也就是Java堆中不存在该类的任何实例。\n        - 加载该类的ClassLoader已经被回收。\n        - 该类对应的java.lang.Class对象没有在任何地方被引用，无法在任何地方通过反射访问该类的方法。\n\n### 垃圾回收算法\n\n判断出一个对象\"已死\"之后，就需要采取算法将其回收，不同的平台虚拟机有不同的回收算法，下面是几种主流垃圾回收算法。\n\n1. 标记清除算法\n    - 效率问题：标记和清除两个过程的效率都不高。\n    - 空间问题：标记清除后产生大量不连续的内存碎片，空间碎片太多可能会导致以后在程序运行过程中需要分配较大对象时，无法找到足够的连续内存而不得不提前触发另一次垃圾收集动作。\n2. 复制算法\n    - 将可用的内存按容量划分为大小相等的两块，每次只使用其中的一块。当这一块内存用完了，就将还存活着的对象复制到另外一块上面，然后再把已使用过的内存空间一次清理掉。\n    - 每次都是对整个半区进行内存回收，不用考虑内存碎片等复杂情况，实现简单，运行高效，但是代价是将内存缩小为原来的一半。\n    - 将内存分为一块较大的Eden空间和两块较小的Survivor空间，每次使用Eden和其中一块Survivor，当回收时，将Eden和Survivor中还存活的对象一次性复制到另外一块Survivor空间上，最后清理掉Eden和刚才使用过的Survivor空间。\n    - Eden和Survivor空间，8：1。当Survivor空间不够用时，需要依赖其他内存进行分配担保。\n1. 标记-整理算法\n    * 标记过程和标记-清除算法一样，但不是直接对可回收对象进行清理了，而是让所有存活的对象都向一端移动，然后直接清理掉边界以外的内存。\n2. 分代收集算法\n    * 将Java堆分为新生代和老年代，新生代每次垃圾收集时都有大批对象死去，可以选用复制算法，只需要付出少量存活对象的复制成本就可以完成收集。老年代对象存活率高，没有额外空间对它进行分配担保，必须使用标记-清理或标记-整理算法进行回收。\n\n### HotSpot的算法实现\n1. 枚举根节点\n    * 在可达性分析获取GC Roots 节点这个操作中，使用的都是准确性GC，虚拟机在某个位置把栈上代表引用的位置记录下来，这样在gc发生的时候就不用全部扫描，在HotSpot中使用的是一种叫做OopMap的数据结构来记录的。\n2. 安全点（Safepoint）\n    * 在OopMap的协助下，可以快速的完成GC Roots的枚举，但是也不能随时随地都生成OopMap，那样一方面需要更多的空间来存放这些对象，另一方面效率也会简单低下。所以只会在特定的位置来记录一下：\n        * 循环的末尾。\n        * 方法临返回前/调用方法的call指令后。\n        * 可能抛异常的位置。\n    * 安全点也是所有线程在要GC的时候停顿的位置，可以通过两种方式让线程在安全点停顿下来。\n        * 抢先式中断（几乎没有虚拟机采用这种方式中断）\n            * 在GC发生的时候就让所有线程都中断，如果发现哪个线程中断的地方不在安全点上，那么就恢复线程，然后让它跑到安全点上。\n        * 主动式中断\n            * 让GC在需要中断线程的时候不直接对线程操作，设置一个标志，让各个线程主动轮询这个标志，如果中断标志位真时就让自己中断。\n3. 安全区域（Safe Region）\n    * 指在一段代码片段之中，引用关系不会发生变化，在这个区域中的任意地方开始GC都是安全的。\n\n### 垃圾收集器\n垃圾收集器是内存回收的具体实现。不同的厂商，不同的版本的虚拟机所提供的垃圾收集器都会有很大的差别，并且提供参数供用户根据自己的应用特点和要求组合出各个年代所使用的收集器。\n1. Serial收集器\n    - 最基本，发展历史最悠久的收集器；单线程收集器，在进行垃圾收集时，必须暂停其他所有的工作线程，直到收集结束；（与其他收集器的单线程相比，简单而高效，对于限定单个cpu的环境来说，Serial收集器由于没有线程交互的开销，专心做垃圾收集自然可以获得最高的单线程收集效率。在桌面应用中，停顿在几十毫秒到一百多毫秒以内，只要不是频繁发生，可以接受。)\n2. ParNew收集器\n    - Serial收集器的多线程版本。是许多运行在Server模式下的虚拟机中首选的新生代收集器。\n3. Parallel Scavenge收集器\n    - 使用复制算法的并行的多线程新生代收集器，他的目标是达到一个可控制的吞吐量[吞吐量=运行用户代码时间/(运行用户代码时间+垃圾收集时间)]，而不是尽可能地缩短垃圾收集时用户线程的停顿时间。该收集器具有自适应调节策略。\n4. Serial Old收集器\n    - Serial收集器的老年代版本。同样是一个单线程收集器，使用“标记-整理”算法\n5. Parallel Old 收集器\n    - Parallel Scavenge收集器的老年代版本。使用多线程和”标记-整理“算法。\n6. CMS收集器\n    - 是一种以获取最短回收停顿时间为目标的收集器，基于“标记-清除”算法。分为初始标记，并发标记，重新标记和并发清除。其中初始标记和重新标记依然需要”Stop The World“。它有以下三个缺点：\n        - 对CPU资源敏感。\n        - 无法处理浮动垃圾。\n        - 基于标记-清除算法实现，收集结束后会有大量空间碎片产生。\n7. G1收集器\n    - 并行与并发：G1 能充分利用多 CPU、多核环境下的硬件优势，使用多个 CPU  (CPU 或者 CPU 核心）来缩短 Stop-The-World 停顿的时间，部分其他收集器原本需要停顿 Java 线程执行的 GC 动作，G1 收集器仍然可以通过并发的方式让 Java 程序继续执行。\n    - 分代收集：与其他收集器一样，分代概念在 G1 中依然得以保留。虽然 G1 可以不需要其他收集器配合就能独立管理整个 GC 堆，但它能够采用不同的方式去处理新创建的对象和已经存活了一段时间、熬过多次 GC 的旧对象以获取更好的收集效果。\n    - 空间整合：与 CMS 的“标记一清理”算法不同，G1 从整体来看是基于“标记一整理”算法实现的收集器，从局部（两个 Region 之间）上来看是基于“复制”算法实现的，但无论如何，这两种算法都意味着 G1 运作期间不会产生内存空间碎片，收集后能提供规整的可用内存。这种特性有利于程序长时间运行，分配大对象时不会因为无法找到连续内存空间而提前触发下一次 GC。\n    - 可预测的停顿：这是 G1 相对于 CMS 的另一大优势，降低停顿时间是 G1 和 CMS 共同的关注点，但 G1 除了追求低停顿外，还能建立可预测的停顿时间模型，能让使用者明确指定在一个长度为 M 毫秒的时间片段内，消耗在垃圾收集上的时间不得超过N 毫秒，这几乎已经是实时 Java  (RTSJ）的垃圾收集器的特征了。\n    - 四个步骤\n        - 初始标记（Initial Marking）\n        - 并发标记（Concurrent Marking）\n        - 最终标记（Final Marking)\n        - 筛选回收（Live Data Counting and Evacuation)\n\n### 内存分配与回收策略\n1. 对象优先在 Eden 分配\n2. 大对象直接进入老年代\n3. 长期存活的对象将进入老年代\n4. 动态对象年龄判定\n    * 为了能更好地适应不同程序的内存状况，虚拟机并不是永远地要求对象的年龄必须达到了 MaxTenuringThreshold 才能晋升老年代，如果在 Survivor 空间中相同年龄所有对象大小的总和大于 Survivor 空间的一半，年龄大于或等于该年龄的对象就可以直接进人老年代，无须等到 MaxTenuringThreshold 中要求的年龄。\n5. 空间分配担保\n\n","slug":"Java虚拟机--垃圾收集器与内存分配策略","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv53k000758ug2crixz2j","content":"<p>不同的语言有不同的内存分配策略和垃圾收集技术，比如C++语言，对象的创建和回收都需要程序员手动去完成，虽然这样自由度高，但是也大大增加了程序员的工作量；Java的垃圾回收策略解放了程序员的双手，而且Java的内存分配和回收技术已经相当成熟，我们甚至在完全不必关心内存分配的情况下书写代码，但是当我们遇到内存溢出，内存泄露的问题时。如果不了解Java的回收策略，面对这些问题就会束手无策。所以对于这部分知识的了解还是很重要的。</p>\n<a id=\"more\"></a>\n<h3 id=\"怎样判断一个对象已死\"><a class=\"header-anchor\" href=\"#怎样判断一个对象已死\">¶</a>怎样判断一个对象已死</h3>\n<ol>\n<li>引用计数算法：</li>\n</ol>\n<p>很多语言都采用的这种方式来判断一个对象是否已经&quot;死去&quot;，比如Object-C，给对象添加一个引用计数器，每当有一个地方引用它时，计数器就加1，当引用失效时，计数器就减1；任何时刻计数器为0的对象就是不可能再被使用的。</p>\n<p>引用计数法虽然实现简单，判定效率也很高，但是如果两个对象相互引用，就容易造成死锁。</p>\n<ol start=\"2\">\n<li>可达性分析算法：Java，C#，Lisp等都是通过这种算法来判断对象是否存活的\n<ul>\n<li>通过一系列称为“GC Roots”的对象作为起始点，从这些节点开始向下搜索，搜索所走过的路径称为引用链。如果一个对象到GC Roots没有任何引用链相连时，则证明对象是不可用的。会被判定为可回收的对象。</li>\n<li>在Java语言中，可作为GC Roots的对象包括：\n<ul>\n<li>虚拟机栈中引用的对象。</li>\n<li>方法区中类静态属性引用的对象。</li>\n<li>方法区中常量引用的对象。</li>\n<li>本地方法栈中JNI（Native方法）引用的对象。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<p>无论是通过引用计数算法判断对象的引用数量还是通过可达性分析算法判断对象的引用链是否可达，判定对象是否存活都与&quot;引用&quot;有关，Java中引用主要分为以下几类。</p>\n<ol start=\"3\">\n<li>\n<p>引用的分类（JDK1.2之后对引用的概念进行了补充）</p>\n<ul>\n<li>强引用：垃圾收集器永远不会回收掉被强引用引用的对象。</li>\n<li>软引用：在系统将要发生内存溢出异常之前，将会把这些对象列进回收范围之中进行二次回收。如果这次回收还没有足够的内存，将会抛出内存溢出异常。SoftReference类</li>\n<li>弱引用：被弱引用关联的对象只能存活到下一次垃圾收集发生之前。当垃圾收集器工作时，无论当前内存是否足够，都会回收掉只被弱引用关联的对象。WeakReference类</li>\n<li>虚引用 ：唯一目的就是能在这个对象被收集器回收时收到一个系统通知。PhantomReference类。</li>\n</ul>\n</li>\n<li>\n<p>finalize方法\n在Java中，还有一个比较特殊的方法，当一个对象不可达时，他不一定会立马被释放，要真正宣告一个对象的死亡，需要进过两次标记过程。如果对象在进行可达性分析后发现没有与CG Roots相连接的引用连，那它就会被第一次标记并进行一次筛选，筛选的条件是此对象是否有必要执行finalize方法（覆盖且没执行过finalize方法）；对于有必要执行finalize方法的，会把对象放入到F-Queue队列中，然后执行finalize方法。如果对象在该方法中自救了，那第二次标记时就会被移除出“即将回收”集合，不会再调用finalize方法。</p>\n</li>\n<li>\n<p>回收方法区\n在新生代中，进行一次垃圾收集一般可以回收70%-95%的空间，是不需要对方法区进行垃圾收集的，但是在永久代，效率就远低于此，因此还存在方法区的垃圾回收。主要回收两部分内容：废弃常量和无用的类。</p>\n<ul>\n<li>废弃常量：没有任何String对象引用常量池中的该常量。</li>\n<li>无用的类\n<ul>\n<li>该类所有的实例都已经被回收，也就是Java堆中不存在该类的任何实例。</li>\n<li>加载该类的ClassLoader已经被回收。</li>\n<li>该类对应的java.lang.Class对象没有在任何地方被引用，无法在任何地方通过反射访问该类的方法。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"垃圾回收算法\"><a class=\"header-anchor\" href=\"#垃圾回收算法\">¶</a>垃圾回收算法</h3>\n<p>判断出一个对象&quot;已死&quot;之后，就需要采取算法将其回收，不同的平台虚拟机有不同的回收算法，下面是几种主流垃圾回收算法。</p>\n<ol>\n<li>标记清除算法\n<ul>\n<li>效率问题：标记和清除两个过程的效率都不高。</li>\n<li>空间问题：标记清除后产生大量不连续的内存碎片，空间碎片太多可能会导致以后在程序运行过程中需要分配较大对象时，无法找到足够的连续内存而不得不提前触发另一次垃圾收集动作。</li>\n</ul>\n</li>\n<li>复制算法\n<ul>\n<li>将可用的内存按容量划分为大小相等的两块，每次只使用其中的一块。当这一块内存用完了，就将还存活着的对象复制到另外一块上面，然后再把已使用过的内存空间一次清理掉。</li>\n<li>每次都是对整个半区进行内存回收，不用考虑内存碎片等复杂情况，实现简单，运行高效，但是代价是将内存缩小为原来的一半。</li>\n<li>将内存分为一块较大的Eden空间和两块较小的Survivor空间，每次使用Eden和其中一块Survivor，当回收时，将Eden和Survivor中还存活的对象一次性复制到另外一块Survivor空间上，最后清理掉Eden和刚才使用过的Survivor空间。</li>\n<li>Eden和Survivor空间，8：1。当Survivor空间不够用时，需要依赖其他内存进行分配担保。</li>\n</ul>\n</li>\n<li>标记-整理算法\n<ul>\n<li>标记过程和标记-清除算法一样，但不是直接对可回收对象进行清理了，而是让所有存活的对象都向一端移动，然后直接清理掉边界以外的内存。</li>\n</ul>\n</li>\n<li>分代收集算法\n<ul>\n<li>将Java堆分为新生代和老年代，新生代每次垃圾收集时都有大批对象死去，可以选用复制算法，只需要付出少量存活对象的复制成本就可以完成收集。老年代对象存活率高，没有额外空间对它进行分配担保，必须使用标记-清理或标记-整理算法进行回收。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"hotspot的算法实现\"><a class=\"header-anchor\" href=\"#hotspot的算法实现\">¶</a>HotSpot的算法实现</h3>\n<ol>\n<li>枚举根节点\n<ul>\n<li>在可达性分析获取GC Roots 节点这个操作中，使用的都是准确性GC，虚拟机在某个位置把栈上代表引用的位置记录下来，这样在gc发生的时候就不用全部扫描，在HotSpot中使用的是一种叫做OopMap的数据结构来记录的。</li>\n</ul>\n</li>\n<li>安全点（Safepoint）\n<ul>\n<li>在OopMap的协助下，可以快速的完成GC Roots的枚举，但是也不能随时随地都生成OopMap，那样一方面需要更多的空间来存放这些对象，另一方面效率也会简单低下。所以只会在特定的位置来记录一下：\n<ul>\n<li>循环的末尾。</li>\n<li>方法临返回前/调用方法的call指令后。</li>\n<li>可能抛异常的位置。</li>\n</ul>\n</li>\n<li>安全点也是所有线程在要GC的时候停顿的位置，可以通过两种方式让线程在安全点停顿下来。\n<ul>\n<li>抢先式中断（几乎没有虚拟机采用这种方式中断）\n<ul>\n<li>在GC发生的时候就让所有线程都中断，如果发现哪个线程中断的地方不在安全点上，那么就恢复线程，然后让它跑到安全点上。</li>\n</ul>\n</li>\n<li>主动式中断\n<ul>\n<li>让GC在需要中断线程的时候不直接对线程操作，设置一个标志，让各个线程主动轮询这个标志，如果中断标志位真时就让自己中断。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>安全区域（Safe Region）\n<ul>\n<li>指在一段代码片段之中，引用关系不会发生变化，在这个区域中的任意地方开始GC都是安全的。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"垃圾收集器\"><a class=\"header-anchor\" href=\"#垃圾收集器\">¶</a>垃圾收集器</h3>\n<p>垃圾收集器是内存回收的具体实现。不同的厂商，不同的版本的虚拟机所提供的垃圾收集器都会有很大的差别，并且提供参数供用户根据自己的应用特点和要求组合出各个年代所使用的收集器。</p>\n<ol>\n<li>Serial收集器\n<ul>\n<li>最基本，发展历史最悠久的收集器；单线程收集器，在进行垃圾收集时，必须暂停其他所有的工作线程，直到收集结束；（与其他收集器的单线程相比，简单而高效，对于限定单个cpu的环境来说，Serial收集器由于没有线程交互的开销，专心做垃圾收集自然可以获得最高的单线程收集效率。在桌面应用中，停顿在几十毫秒到一百多毫秒以内，只要不是频繁发生，可以接受。)</li>\n</ul>\n</li>\n<li>ParNew收集器\n<ul>\n<li>Serial收集器的多线程版本。是许多运行在Server模式下的虚拟机中首选的新生代收集器。</li>\n</ul>\n</li>\n<li>Parallel Scavenge收集器\n<ul>\n<li>使用复制算法的并行的多线程新生代收集器，他的目标是达到一个可控制的吞吐量[吞吐量=运行用户代码时间/(运行用户代码时间+垃圾收集时间)]，而不是尽可能地缩短垃圾收集时用户线程的停顿时间。该收集器具有自适应调节策略。</li>\n</ul>\n</li>\n<li>Serial Old收集器\n<ul>\n<li>Serial收集器的老年代版本。同样是一个单线程收集器，使用“标记-整理”算法</li>\n</ul>\n</li>\n<li>Parallel Old 收集器\n<ul>\n<li>Parallel Scavenge收集器的老年代版本。使用多线程和”标记-整理“算法。</li>\n</ul>\n</li>\n<li>CMS收集器\n<ul>\n<li>是一种以获取最短回收停顿时间为目标的收集器，基于“标记-清除”算法。分为初始标记，并发标记，重新标记和并发清除。其中初始标记和重新标记依然需要”Stop The World“。它有以下三个缺点：\n<ul>\n<li>对CPU资源敏感。</li>\n<li>无法处理浮动垃圾。</li>\n<li>基于标记-清除算法实现，收集结束后会有大量空间碎片产生。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>G1收集器\n<ul>\n<li>并行与并发：G1 能充分利用多 CPU、多核环境下的硬件优势，使用多个 CPU  (CPU 或者 CPU 核心）来缩短 Stop-The-World 停顿的时间，部分其他收集器原本需要停顿 Java 线程执行的 GC 动作，G1 收集器仍然可以通过并发的方式让 Java 程序继续执行。</li>\n<li>分代收集：与其他收集器一样，分代概念在 G1 中依然得以保留。虽然 G1 可以不需要其他收集器配合就能独立管理整个 GC 堆，但它能够采用不同的方式去处理新创建的对象和已经存活了一段时间、熬过多次 GC 的旧对象以获取更好的收集效果。</li>\n<li>空间整合：与 CMS 的“标记一清理”算法不同，G1 从整体来看是基于“标记一整理”算法实现的收集器，从局部（两个 Region 之间）上来看是基于“复制”算法实现的，但无论如何，这两种算法都意味着 G1 运作期间不会产生内存空间碎片，收集后能提供规整的可用内存。这种特性有利于程序长时间运行，分配大对象时不会因为无法找到连续内存空间而提前触发下一次 GC。</li>\n<li>可预测的停顿：这是 G1 相对于 CMS 的另一大优势，降低停顿时间是 G1 和 CMS 共同的关注点，但 G1 除了追求低停顿外，还能建立可预测的停顿时间模型，能让使用者明确指定在一个长度为 M 毫秒的时间片段内，消耗在垃圾收集上的时间不得超过N 毫秒，这几乎已经是实时 Java  (RTSJ）的垃圾收集器的特征了。</li>\n<li>四个步骤\n<ul>\n<li>初始标记（Initial Marking）</li>\n<li>并发标记（Concurrent Marking）</li>\n<li>最终标记（Final Marking)</li>\n<li>筛选回收（Live Data Counting and Evacuation)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"内存分配与回收策略\"><a class=\"header-anchor\" href=\"#内存分配与回收策略\">¶</a>内存分配与回收策略</h3>\n<ol>\n<li>对象优先在 Eden 分配</li>\n<li>大对象直接进入老年代</li>\n<li>长期存活的对象将进入老年代</li>\n<li>动态对象年龄判定\n<ul>\n<li>为了能更好地适应不同程序的内存状况，虚拟机并不是永远地要求对象的年龄必须达到了 MaxTenuringThreshold 才能晋升老年代，如果在 Survivor 空间中相同年龄所有对象大小的总和大于 Survivor 空间的一半，年龄大于或等于该年龄的对象就可以直接进人老年代，无须等到 MaxTenuringThreshold 中要求的年龄。</li>\n</ul>\n</li>\n<li>空间分配担保</li>\n</ol>\n","site":{"data":{}},"excerpt":"<p>不同的语言有不同的内存分配策略和垃圾收集技术，比如C++语言，对象的创建和回收都需要程序员手动去完成，虽然这样自由度高，但是也大大增加了程序员的工作量；Java的垃圾回收策略解放了程序员的双手，而且Java的内存分配和回收技术已经相当成熟，我们甚至在完全不必关心内存分配的情况下书写代码，但是当我们遇到内存溢出，内存泄露的问题时。如果不了解Java的回收策略，面对这些问题就会束手无策。所以对于这部分知识的了解还是很重要的。</p>","more":"<h3 id=\"怎样判断一个对象已死\"><a class=\"header-anchor\" href=\"#怎样判断一个对象已死\">¶</a>怎样判断一个对象已死</h3>\n<ol>\n<li>引用计数算法：</li>\n</ol>\n<p>很多语言都采用的这种方式来判断一个对象是否已经&quot;死去&quot;，比如Object-C，给对象添加一个引用计数器，每当有一个地方引用它时，计数器就加1，当引用失效时，计数器就减1；任何时刻计数器为0的对象就是不可能再被使用的。</p>\n<p>引用计数法虽然实现简单，判定效率也很高，但是如果两个对象相互引用，就容易造成死锁。</p>\n<ol start=\"2\">\n<li>可达性分析算法：Java，C#，Lisp等都是通过这种算法来判断对象是否存活的\n<ul>\n<li>通过一系列称为“GC Roots”的对象作为起始点，从这些节点开始向下搜索，搜索所走过的路径称为引用链。如果一个对象到GC Roots没有任何引用链相连时，则证明对象是不可用的。会被判定为可回收的对象。</li>\n<li>在Java语言中，可作为GC Roots的对象包括：\n<ul>\n<li>虚拟机栈中引用的对象。</li>\n<li>方法区中类静态属性引用的对象。</li>\n<li>方法区中常量引用的对象。</li>\n<li>本地方法栈中JNI（Native方法）引用的对象。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<p>无论是通过引用计数算法判断对象的引用数量还是通过可达性分析算法判断对象的引用链是否可达，判定对象是否存活都与&quot;引用&quot;有关，Java中引用主要分为以下几类。</p>\n<ol start=\"3\">\n<li>\n<p>引用的分类（JDK1.2之后对引用的概念进行了补充）</p>\n<ul>\n<li>强引用：垃圾收集器永远不会回收掉被强引用引用的对象。</li>\n<li>软引用：在系统将要发生内存溢出异常之前，将会把这些对象列进回收范围之中进行二次回收。如果这次回收还没有足够的内存，将会抛出内存溢出异常。SoftReference类</li>\n<li>弱引用：被弱引用关联的对象只能存活到下一次垃圾收集发生之前。当垃圾收集器工作时，无论当前内存是否足够，都会回收掉只被弱引用关联的对象。WeakReference类</li>\n<li>虚引用 ：唯一目的就是能在这个对象被收集器回收时收到一个系统通知。PhantomReference类。</li>\n</ul>\n</li>\n<li>\n<p>finalize方法\n在Java中，还有一个比较特殊的方法，当一个对象不可达时，他不一定会立马被释放，要真正宣告一个对象的死亡，需要进过两次标记过程。如果对象在进行可达性分析后发现没有与CG Roots相连接的引用连，那它就会被第一次标记并进行一次筛选，筛选的条件是此对象是否有必要执行finalize方法（覆盖且没执行过finalize方法）；对于有必要执行finalize方法的，会把对象放入到F-Queue队列中，然后执行finalize方法。如果对象在该方法中自救了，那第二次标记时就会被移除出“即将回收”集合，不会再调用finalize方法。</p>\n</li>\n<li>\n<p>回收方法区\n在新生代中，进行一次垃圾收集一般可以回收70%-95%的空间，是不需要对方法区进行垃圾收集的，但是在永久代，效率就远低于此，因此还存在方法区的垃圾回收。主要回收两部分内容：废弃常量和无用的类。</p>\n<ul>\n<li>废弃常量：没有任何String对象引用常量池中的该常量。</li>\n<li>无用的类\n<ul>\n<li>该类所有的实例都已经被回收，也就是Java堆中不存在该类的任何实例。</li>\n<li>加载该类的ClassLoader已经被回收。</li>\n<li>该类对应的java.lang.Class对象没有在任何地方被引用，无法在任何地方通过反射访问该类的方法。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"垃圾回收算法\"><a class=\"header-anchor\" href=\"#垃圾回收算法\">¶</a>垃圾回收算法</h3>\n<p>判断出一个对象&quot;已死&quot;之后，就需要采取算法将其回收，不同的平台虚拟机有不同的回收算法，下面是几种主流垃圾回收算法。</p>\n<ol>\n<li>标记清除算法\n<ul>\n<li>效率问题：标记和清除两个过程的效率都不高。</li>\n<li>空间问题：标记清除后产生大量不连续的内存碎片，空间碎片太多可能会导致以后在程序运行过程中需要分配较大对象时，无法找到足够的连续内存而不得不提前触发另一次垃圾收集动作。</li>\n</ul>\n</li>\n<li>复制算法\n<ul>\n<li>将可用的内存按容量划分为大小相等的两块，每次只使用其中的一块。当这一块内存用完了，就将还存活着的对象复制到另外一块上面，然后再把已使用过的内存空间一次清理掉。</li>\n<li>每次都是对整个半区进行内存回收，不用考虑内存碎片等复杂情况，实现简单，运行高效，但是代价是将内存缩小为原来的一半。</li>\n<li>将内存分为一块较大的Eden空间和两块较小的Survivor空间，每次使用Eden和其中一块Survivor，当回收时，将Eden和Survivor中还存活的对象一次性复制到另外一块Survivor空间上，最后清理掉Eden和刚才使用过的Survivor空间。</li>\n<li>Eden和Survivor空间，8：1。当Survivor空间不够用时，需要依赖其他内存进行分配担保。</li>\n</ul>\n</li>\n<li>标记-整理算法\n<ul>\n<li>标记过程和标记-清除算法一样，但不是直接对可回收对象进行清理了，而是让所有存活的对象都向一端移动，然后直接清理掉边界以外的内存。</li>\n</ul>\n</li>\n<li>分代收集算法\n<ul>\n<li>将Java堆分为新生代和老年代，新生代每次垃圾收集时都有大批对象死去，可以选用复制算法，只需要付出少量存活对象的复制成本就可以完成收集。老年代对象存活率高，没有额外空间对它进行分配担保，必须使用标记-清理或标记-整理算法进行回收。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"hotspot的算法实现\"><a class=\"header-anchor\" href=\"#hotspot的算法实现\">¶</a>HotSpot的算法实现</h3>\n<ol>\n<li>枚举根节点\n<ul>\n<li>在可达性分析获取GC Roots 节点这个操作中，使用的都是准确性GC，虚拟机在某个位置把栈上代表引用的位置记录下来，这样在gc发生的时候就不用全部扫描，在HotSpot中使用的是一种叫做OopMap的数据结构来记录的。</li>\n</ul>\n</li>\n<li>安全点（Safepoint）\n<ul>\n<li>在OopMap的协助下，可以快速的完成GC Roots的枚举，但是也不能随时随地都生成OopMap，那样一方面需要更多的空间来存放这些对象，另一方面效率也会简单低下。所以只会在特定的位置来记录一下：\n<ul>\n<li>循环的末尾。</li>\n<li>方法临返回前/调用方法的call指令后。</li>\n<li>可能抛异常的位置。</li>\n</ul>\n</li>\n<li>安全点也是所有线程在要GC的时候停顿的位置，可以通过两种方式让线程在安全点停顿下来。\n<ul>\n<li>抢先式中断（几乎没有虚拟机采用这种方式中断）\n<ul>\n<li>在GC发生的时候就让所有线程都中断，如果发现哪个线程中断的地方不在安全点上，那么就恢复线程，然后让它跑到安全点上。</li>\n</ul>\n</li>\n<li>主动式中断\n<ul>\n<li>让GC在需要中断线程的时候不直接对线程操作，设置一个标志，让各个线程主动轮询这个标志，如果中断标志位真时就让自己中断。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>安全区域（Safe Region）\n<ul>\n<li>指在一段代码片段之中，引用关系不会发生变化，在这个区域中的任意地方开始GC都是安全的。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"垃圾收集器\"><a class=\"header-anchor\" href=\"#垃圾收集器\">¶</a>垃圾收集器</h3>\n<p>垃圾收集器是内存回收的具体实现。不同的厂商，不同的版本的虚拟机所提供的垃圾收集器都会有很大的差别，并且提供参数供用户根据自己的应用特点和要求组合出各个年代所使用的收集器。</p>\n<ol>\n<li>Serial收集器\n<ul>\n<li>最基本，发展历史最悠久的收集器；单线程收集器，在进行垃圾收集时，必须暂停其他所有的工作线程，直到收集结束；（与其他收集器的单线程相比，简单而高效，对于限定单个cpu的环境来说，Serial收集器由于没有线程交互的开销，专心做垃圾收集自然可以获得最高的单线程收集效率。在桌面应用中，停顿在几十毫秒到一百多毫秒以内，只要不是频繁发生，可以接受。)</li>\n</ul>\n</li>\n<li>ParNew收集器\n<ul>\n<li>Serial收集器的多线程版本。是许多运行在Server模式下的虚拟机中首选的新生代收集器。</li>\n</ul>\n</li>\n<li>Parallel Scavenge收集器\n<ul>\n<li>使用复制算法的并行的多线程新生代收集器，他的目标是达到一个可控制的吞吐量[吞吐量=运行用户代码时间/(运行用户代码时间+垃圾收集时间)]，而不是尽可能地缩短垃圾收集时用户线程的停顿时间。该收集器具有自适应调节策略。</li>\n</ul>\n</li>\n<li>Serial Old收集器\n<ul>\n<li>Serial收集器的老年代版本。同样是一个单线程收集器，使用“标记-整理”算法</li>\n</ul>\n</li>\n<li>Parallel Old 收集器\n<ul>\n<li>Parallel Scavenge收集器的老年代版本。使用多线程和”标记-整理“算法。</li>\n</ul>\n</li>\n<li>CMS收集器\n<ul>\n<li>是一种以获取最短回收停顿时间为目标的收集器，基于“标记-清除”算法。分为初始标记，并发标记，重新标记和并发清除。其中初始标记和重新标记依然需要”Stop The World“。它有以下三个缺点：\n<ul>\n<li>对CPU资源敏感。</li>\n<li>无法处理浮动垃圾。</li>\n<li>基于标记-清除算法实现，收集结束后会有大量空间碎片产生。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>G1收集器\n<ul>\n<li>并行与并发：G1 能充分利用多 CPU、多核环境下的硬件优势，使用多个 CPU  (CPU 或者 CPU 核心）来缩短 Stop-The-World 停顿的时间，部分其他收集器原本需要停顿 Java 线程执行的 GC 动作，G1 收集器仍然可以通过并发的方式让 Java 程序继续执行。</li>\n<li>分代收集：与其他收集器一样，分代概念在 G1 中依然得以保留。虽然 G1 可以不需要其他收集器配合就能独立管理整个 GC 堆，但它能够采用不同的方式去处理新创建的对象和已经存活了一段时间、熬过多次 GC 的旧对象以获取更好的收集效果。</li>\n<li>空间整合：与 CMS 的“标记一清理”算法不同，G1 从整体来看是基于“标记一整理”算法实现的收集器，从局部（两个 Region 之间）上来看是基于“复制”算法实现的，但无论如何，这两种算法都意味着 G1 运作期间不会产生内存空间碎片，收集后能提供规整的可用内存。这种特性有利于程序长时间运行，分配大对象时不会因为无法找到连续内存空间而提前触发下一次 GC。</li>\n<li>可预测的停顿：这是 G1 相对于 CMS 的另一大优势，降低停顿时间是 G1 和 CMS 共同的关注点，但 G1 除了追求低停顿外，还能建立可预测的停顿时间模型，能让使用者明确指定在一个长度为 M 毫秒的时间片段内，消耗在垃圾收集上的时间不得超过N 毫秒，这几乎已经是实时 Java  (RTSJ）的垃圾收集器的特征了。</li>\n<li>四个步骤\n<ul>\n<li>初始标记（Initial Marking）</li>\n<li>并发标记（Concurrent Marking）</li>\n<li>最终标记（Final Marking)</li>\n<li>筛选回收（Live Data Counting and Evacuation)</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"内存分配与回收策略\"><a class=\"header-anchor\" href=\"#内存分配与回收策略\">¶</a>内存分配与回收策略</h3>\n<ol>\n<li>对象优先在 Eden 分配</li>\n<li>大对象直接进入老年代</li>\n<li>长期存活的对象将进入老年代</li>\n<li>动态对象年龄判定\n<ul>\n<li>为了能更好地适应不同程序的内存状况，虚拟机并不是永远地要求对象的年龄必须达到了 MaxTenuringThreshold 才能晋升老年代，如果在 Survivor 空间中相同年龄所有对象大小的总和大于 Survivor 空间的一半，年龄大于或等于该年龄的对象就可以直接进人老年代，无须等到 MaxTenuringThreshold 中要求的年龄。</li>\n</ul>\n</li>\n<li>空间分配担保</li>\n</ol>"},{"title":"Java的自动内存管理机制","date":"2017-03-11T02:31:04.000Z","_content":"### 运行时数据区域\nJava虚拟机在执行Java程序时会把它管理的内存划分为几个不同的数据区域。每个区域有各自的用途，并且创建和销毁的时间都会有所不同，有的区域随着虚拟机进程的启动而存在，有些区域则依赖用户线程的启动和结束而建立和销毁。以下是Java虚拟机所管理的几个运行时数据区域。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsoe263y0vj20dr0b1ju7.jpg)\n<!-- more -->\n1. 程序计数器\n    - 每个线程都有自己独立的程序计数器，用来记录下一条要执行的字节码指令，分支，循环，跳转，异常处理，线程恢复等基础功能。此内存区域是唯一一个在Java虚拟机规范中没有规定任何OutOfMemoryError情况的区域。\n2. Java虚拟机栈\n    - 虚拟机栈是线程私有的，每个方法在执行时都会创建一个栈帧，用来存储局部变量表，操作数栈，动态链接，方法出口等信息。每一个方法从调用到执行完成，就对应着一个栈帧在虚拟机中入栈到出栈的过程。\n    - 局部变量表存放各种基本数据类型，对象引用和returnAddress类型，其中64位长度的double和long数据会占用2个局部变量空间。\n    - 局部变量表所需的内存空间在编译期间就完成了分配，在方法运行期间不会改变。\n    - stackoverflowerror：线程请求的栈深度大于虚拟机允许的深度。outofmemoryerror：虚拟机栈可以动态扩展，但是扩展时无法申请到足够的内存。\n3. 本地方法栈\n    - 虚拟机栈执行Java方法，而本地方法栈则为虚拟机使用到的native方法服务。\n    - 本地方法栈也会抛出StackOverFlowError和OutOfMemoryError异常。\n4. Java堆\n    - 被所有线程共享。在虚拟机启动时创建。用来存放对象实例和数组（唯一目的）。技术在发展，并不是所有对象都分配在堆上面了（JIT编译器的发展与逃逸分析技术逐渐成熟，栈上分配、标量替换优化技术将导致一些微妙的变化发生）。\n    - Java堆是垃圾收集器管理的主要区域。有什么新生代，老年代划分，目的就是为了更好地回收内存，与存放的内容无关。\n    - Java堆可以处于物理上不连续的内存中，如果堆中的内存用完，无法再扩展时，就会抛出OutOfMemoryError。\n5. 方法区\n    - 被所有线程共享。用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。\n    - 在JDK1.7的hotspot中，已经把原本放在永久代的字符串常量池移出。\n    - 虚拟机规范对方法区的限制非常宽松，不需要连续的内存和可以固定大小或者课扩展，可以选择不实现垃圾收集。\n    - 当方法区无法满足内存分配需求时，将抛出OutOfMemoryError。\n6. 运行时常量池\n    - 运行时常量池是方法区的一部分。用于存放在编译期产生的各种字面量和符号引用。但是具备动态性，允许运行期间加入新的常量。当常量池无法再申请到内存时会抛出OutOfMemoryError异常。\n7. 直接内存\n    - 不是虚拟机运行时数据区的一部分，也不是Java虚拟机规范中定义的内存区域，但是这部分内存被频繁地调用，也可能导致OutOfMemoryError异常的出现。\n\n### HotSpot虚拟机对象探秘\n了解了虚拟机的组成，接下来需要探索的就是，对象是如何被创建，布局以及如何访问的。HotSpot是Java中比较常见的虚拟机，接下来看看在HotSpot中，java对象是如何分贝，布局和访问的。\n1. 对象的创建\n    - new指令->检查指令的参数是否能在常量池中定位到一个类的符号引用，并检查这个符号引用代表的类是否已被加载、解析和初始化过。如果没有，必须先执行相应的类的检查过程。\n    - 类加载检查通过后，虚拟机将为新生对象分配内存，对象所需内存大小在类加载完成时就已经确定， 分配空间的任务等于把一块确定大小的内存从Java堆中划分出来。具体采用哪种分配方式由Java堆是否规整决定，而Java堆是否规整又由所采用的垃圾收集器是否带有压缩整理功能决定。\n        - 指针碰撞：分配内存时，把指针向空闲空间挪动一段与对象大小相等的距离。\n        - 空闲列表：维护一个列表用来记录那些内存块是可用的，分配的时候从列表中找到一块足够大的空间划分给对象实例，并更新列表上的记录。\n    - 对象创建时需要考虑并发问题。\n        - 对分配内存空间的动作进行同步处理--实际上虚拟机采用CAS配上失败重试的方式保证更新操作的原子性。\n        - 把内存分配的动作按照线程划分在不同的空间之中进行。即每个线程在Java堆中预先分配一小块内存，称为本地线程分配缓冲（TLAB：Thread Local Allocation Buffer）。哪个线程要分配内存，就在哪个线程的TLAB上分配，只有TLAB用完并分配新的TLAB时，才需要同步锁定。\n    - 内存分配完成需要将分配到的内存空间都初始化为零值（不包括对象头），这一步操作保证了对象的实例字段在Java代码中可以不赋初始值就直接使用，程序能访问到这些字段的数据类型所对应的零值。\n    - 虚拟机对对象进行必要的设置（设置对象的对象头信息）。比如这个对象是哪个类的实例、如何找到类的元数据信息、对象的哈希码、对象的GC分代年龄等信息。\n    - 执行<init>方法。把对象按照程序员的意愿进行初始化。\n2. 对象的内存布局\n    - 对象头：包括两部分信息\n        - 存储对象自身的运行时数据，如哈希码、GC分代年龄、锁状态标志、线程持有的锁、偏向线程ID、偏向时间戳。\n        - 类型指针，指对象指向它的类元数据指针，虚拟机通过这个指针来确定这个对象是哪个类的实例。（查找对象的元数据信息不一定要通过对象本身，所以并不是所有的虚拟机实现都必须在对象数据上保留类型指针）。对于数组，还需要一块记录数组长度的数据，因为虚拟机可以通过普通Java对象的元数据信息确定Java对象的大小，但是从数组的元数据中却无法确定数组的大小。\n    - 实例数据\n        - 对象真正存储的有效信息，无论是从父类继承下来的，还是在子类中定义的，都需要记录下来。\n    - 对齐填充\n        - 并不是必然存在的，仅仅起着占位符的作用。对象的大小必须是8字节的整数倍，而对象头部分正好是8字节的倍数。当对象实例数据部分没有对齐时，就需要通过对齐填充来补全。\n\n3. 对象的访问定位\n    - 句柄访问：Java堆中将会划分出一块内存来作为句柄池，reference中存储的就是对象的句柄地址。而句柄中包含了对象实例数据与类型数据各自的具体地址信息。好处是reference种存储的是稳定的句柄地址，在对象被移动时只会改变句柄中的实例数据指针，而reference本身不需要更改。\n    - 指针访问：reference中存储的直接就是对象地址。好处是速度更快，节省了一次指针定位的时间开销，Sun HotSpot虚拟机就是使用第二种方式来进行对象访问的。\n\n\n\n","source":"_posts/Java虚拟机--自动内存管理机制.md","raw":"---\ntitle: Java的自动内存管理机制\ntags:\n  - Java\n  - Java虚拟机\ncategories:\n  - Java\ndate: 2017-03-11 10:31:04\n---\n### 运行时数据区域\nJava虚拟机在执行Java程序时会把它管理的内存划分为几个不同的数据区域。每个区域有各自的用途，并且创建和销毁的时间都会有所不同，有的区域随着虚拟机进程的启动而存在，有些区域则依赖用户线程的启动和结束而建立和销毁。以下是Java虚拟机所管理的几个运行时数据区域。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsoe263y0vj20dr0b1ju7.jpg)\n<!-- more -->\n1. 程序计数器\n    - 每个线程都有自己独立的程序计数器，用来记录下一条要执行的字节码指令，分支，循环，跳转，异常处理，线程恢复等基础功能。此内存区域是唯一一个在Java虚拟机规范中没有规定任何OutOfMemoryError情况的区域。\n2. Java虚拟机栈\n    - 虚拟机栈是线程私有的，每个方法在执行时都会创建一个栈帧，用来存储局部变量表，操作数栈，动态链接，方法出口等信息。每一个方法从调用到执行完成，就对应着一个栈帧在虚拟机中入栈到出栈的过程。\n    - 局部变量表存放各种基本数据类型，对象引用和returnAddress类型，其中64位长度的double和long数据会占用2个局部变量空间。\n    - 局部变量表所需的内存空间在编译期间就完成了分配，在方法运行期间不会改变。\n    - stackoverflowerror：线程请求的栈深度大于虚拟机允许的深度。outofmemoryerror：虚拟机栈可以动态扩展，但是扩展时无法申请到足够的内存。\n3. 本地方法栈\n    - 虚拟机栈执行Java方法，而本地方法栈则为虚拟机使用到的native方法服务。\n    - 本地方法栈也会抛出StackOverFlowError和OutOfMemoryError异常。\n4. Java堆\n    - 被所有线程共享。在虚拟机启动时创建。用来存放对象实例和数组（唯一目的）。技术在发展，并不是所有对象都分配在堆上面了（JIT编译器的发展与逃逸分析技术逐渐成熟，栈上分配、标量替换优化技术将导致一些微妙的变化发生）。\n    - Java堆是垃圾收集器管理的主要区域。有什么新生代，老年代划分，目的就是为了更好地回收内存，与存放的内容无关。\n    - Java堆可以处于物理上不连续的内存中，如果堆中的内存用完，无法再扩展时，就会抛出OutOfMemoryError。\n5. 方法区\n    - 被所有线程共享。用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。\n    - 在JDK1.7的hotspot中，已经把原本放在永久代的字符串常量池移出。\n    - 虚拟机规范对方法区的限制非常宽松，不需要连续的内存和可以固定大小或者课扩展，可以选择不实现垃圾收集。\n    - 当方法区无法满足内存分配需求时，将抛出OutOfMemoryError。\n6. 运行时常量池\n    - 运行时常量池是方法区的一部分。用于存放在编译期产生的各种字面量和符号引用。但是具备动态性，允许运行期间加入新的常量。当常量池无法再申请到内存时会抛出OutOfMemoryError异常。\n7. 直接内存\n    - 不是虚拟机运行时数据区的一部分，也不是Java虚拟机规范中定义的内存区域，但是这部分内存被频繁地调用，也可能导致OutOfMemoryError异常的出现。\n\n### HotSpot虚拟机对象探秘\n了解了虚拟机的组成，接下来需要探索的就是，对象是如何被创建，布局以及如何访问的。HotSpot是Java中比较常见的虚拟机，接下来看看在HotSpot中，java对象是如何分贝，布局和访问的。\n1. 对象的创建\n    - new指令->检查指令的参数是否能在常量池中定位到一个类的符号引用，并检查这个符号引用代表的类是否已被加载、解析和初始化过。如果没有，必须先执行相应的类的检查过程。\n    - 类加载检查通过后，虚拟机将为新生对象分配内存，对象所需内存大小在类加载完成时就已经确定， 分配空间的任务等于把一块确定大小的内存从Java堆中划分出来。具体采用哪种分配方式由Java堆是否规整决定，而Java堆是否规整又由所采用的垃圾收集器是否带有压缩整理功能决定。\n        - 指针碰撞：分配内存时，把指针向空闲空间挪动一段与对象大小相等的距离。\n        - 空闲列表：维护一个列表用来记录那些内存块是可用的，分配的时候从列表中找到一块足够大的空间划分给对象实例，并更新列表上的记录。\n    - 对象创建时需要考虑并发问题。\n        - 对分配内存空间的动作进行同步处理--实际上虚拟机采用CAS配上失败重试的方式保证更新操作的原子性。\n        - 把内存分配的动作按照线程划分在不同的空间之中进行。即每个线程在Java堆中预先分配一小块内存，称为本地线程分配缓冲（TLAB：Thread Local Allocation Buffer）。哪个线程要分配内存，就在哪个线程的TLAB上分配，只有TLAB用完并分配新的TLAB时，才需要同步锁定。\n    - 内存分配完成需要将分配到的内存空间都初始化为零值（不包括对象头），这一步操作保证了对象的实例字段在Java代码中可以不赋初始值就直接使用，程序能访问到这些字段的数据类型所对应的零值。\n    - 虚拟机对对象进行必要的设置（设置对象的对象头信息）。比如这个对象是哪个类的实例、如何找到类的元数据信息、对象的哈希码、对象的GC分代年龄等信息。\n    - 执行<init>方法。把对象按照程序员的意愿进行初始化。\n2. 对象的内存布局\n    - 对象头：包括两部分信息\n        - 存储对象自身的运行时数据，如哈希码、GC分代年龄、锁状态标志、线程持有的锁、偏向线程ID、偏向时间戳。\n        - 类型指针，指对象指向它的类元数据指针，虚拟机通过这个指针来确定这个对象是哪个类的实例。（查找对象的元数据信息不一定要通过对象本身，所以并不是所有的虚拟机实现都必须在对象数据上保留类型指针）。对于数组，还需要一块记录数组长度的数据，因为虚拟机可以通过普通Java对象的元数据信息确定Java对象的大小，但是从数组的元数据中却无法确定数组的大小。\n    - 实例数据\n        - 对象真正存储的有效信息，无论是从父类继承下来的，还是在子类中定义的，都需要记录下来。\n    - 对齐填充\n        - 并不是必然存在的，仅仅起着占位符的作用。对象的大小必须是8字节的整数倍，而对象头部分正好是8字节的倍数。当对象实例数据部分没有对齐时，就需要通过对齐填充来补全。\n\n3. 对象的访问定位\n    - 句柄访问：Java堆中将会划分出一块内存来作为句柄池，reference中存储的就是对象的句柄地址。而句柄中包含了对象实例数据与类型数据各自的具体地址信息。好处是reference种存储的是稳定的句柄地址，在对象被移动时只会改变句柄中的实例数据指针，而reference本身不需要更改。\n    - 指针访问：reference中存储的直接就是对象地址。好处是速度更快，节省了一次指针定位的时间开销，Sun HotSpot虚拟机就是使用第二种方式来进行对象访问的。\n\n\n\n","slug":"Java虚拟机--自动内存管理机制","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv53l000a58ugdufs09yo","content":"<h3 id=\"运行时数据区域\"><a class=\"header-anchor\" href=\"#运行时数据区域\">¶</a>运行时数据区域</h3>\n<p>Java虚拟机在执行Java程序时会把它管理的内存划分为几个不同的数据区域。每个区域有各自的用途，并且创建和销毁的时间都会有所不同，有的区域随着虚拟机进程的启动而存在，有些区域则依赖用户线程的启动和结束而建立和销毁。以下是Java虚拟机所管理的几个运行时数据区域。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsoe263y0vj20dr0b1ju7.jpg\" alt=\"\"></p>\n<a id=\"more\"></a>\n<ol>\n<li>程序计数器\n<ul>\n<li>每个线程都有自己独立的程序计数器，用来记录下一条要执行的字节码指令，分支，循环，跳转，异常处理，线程恢复等基础功能。此内存区域是唯一一个在Java虚拟机规范中没有规定任何OutOfMemoryError情况的区域。</li>\n</ul>\n</li>\n<li>Java虚拟机栈\n<ul>\n<li>虚拟机栈是线程私有的，每个方法在执行时都会创建一个栈帧，用来存储局部变量表，操作数栈，动态链接，方法出口等信息。每一个方法从调用到执行完成，就对应着一个栈帧在虚拟机中入栈到出栈的过程。</li>\n<li>局部变量表存放各种基本数据类型，对象引用和returnAddress类型，其中64位长度的double和long数据会占用2个局部变量空间。</li>\n<li>局部变量表所需的内存空间在编译期间就完成了分配，在方法运行期间不会改变。</li>\n<li>stackoverflowerror：线程请求的栈深度大于虚拟机允许的深度。outofmemoryerror：虚拟机栈可以动态扩展，但是扩展时无法申请到足够的内存。</li>\n</ul>\n</li>\n<li>本地方法栈\n<ul>\n<li>虚拟机栈执行Java方法，而本地方法栈则为虚拟机使用到的native方法服务。</li>\n<li>本地方法栈也会抛出StackOverFlowError和OutOfMemoryError异常。</li>\n</ul>\n</li>\n<li>Java堆\n<ul>\n<li>被所有线程共享。在虚拟机启动时创建。用来存放对象实例和数组（唯一目的）。技术在发展，并不是所有对象都分配在堆上面了（JIT编译器的发展与逃逸分析技术逐渐成熟，栈上分配、标量替换优化技术将导致一些微妙的变化发生）。</li>\n<li>Java堆是垃圾收集器管理的主要区域。有什么新生代，老年代划分，目的就是为了更好地回收内存，与存放的内容无关。</li>\n<li>Java堆可以处于物理上不连续的内存中，如果堆中的内存用完，无法再扩展时，就会抛出OutOfMemoryError。</li>\n</ul>\n</li>\n<li>方法区\n<ul>\n<li>被所有线程共享。用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。</li>\n<li>在JDK1.7的hotspot中，已经把原本放在永久代的字符串常量池移出。</li>\n<li>虚拟机规范对方法区的限制非常宽松，不需要连续的内存和可以固定大小或者课扩展，可以选择不实现垃圾收集。</li>\n<li>当方法区无法满足内存分配需求时，将抛出OutOfMemoryError。</li>\n</ul>\n</li>\n<li>运行时常量池\n<ul>\n<li>运行时常量池是方法区的一部分。用于存放在编译期产生的各种字面量和符号引用。但是具备动态性，允许运行期间加入新的常量。当常量池无法再申请到内存时会抛出OutOfMemoryError异常。</li>\n</ul>\n</li>\n<li>直接内存\n<ul>\n<li>不是虚拟机运行时数据区的一部分，也不是Java虚拟机规范中定义的内存区域，但是这部分内存被频繁地调用，也可能导致OutOfMemoryError异常的出现。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"hotspot虚拟机对象探秘\"><a class=\"header-anchor\" href=\"#hotspot虚拟机对象探秘\">¶</a>HotSpot虚拟机对象探秘</h3>\n<p>了解了虚拟机的组成，接下来需要探索的就是，对象是如何被创建，布局以及如何访问的。HotSpot是Java中比较常见的虚拟机，接下来看看在HotSpot中，java对象是如何分贝，布局和访问的。</p>\n<ol>\n<li>\n<p>对象的创建</p>\n<ul>\n<li>new指令-&gt;检查指令的参数是否能在常量池中定位到一个类的符号引用，并检查这个符号引用代表的类是否已被加载、解析和初始化过。如果没有，必须先执行相应的类的检查过程。</li>\n<li>类加载检查通过后，虚拟机将为新生对象分配内存，对象所需内存大小在类加载完成时就已经确定， 分配空间的任务等于把一块确定大小的内存从Java堆中划分出来。具体采用哪种分配方式由Java堆是否规整决定，而Java堆是否规整又由所采用的垃圾收集器是否带有压缩整理功能决定。\n<ul>\n<li>指针碰撞：分配内存时，把指针向空闲空间挪动一段与对象大小相等的距离。</li>\n<li>空闲列表：维护一个列表用来记录那些内存块是可用的，分配的时候从列表中找到一块足够大的空间划分给对象实例，并更新列表上的记录。</li>\n</ul>\n</li>\n<li>对象创建时需要考虑并发问题。\n<ul>\n<li>对分配内存空间的动作进行同步处理–实际上虚拟机采用CAS配上失败重试的方式保证更新操作的原子性。</li>\n<li>把内存分配的动作按照线程划分在不同的空间之中进行。即每个线程在Java堆中预先分配一小块内存，称为本地线程分配缓冲（TLAB：Thread Local Allocation Buffer）。哪个线程要分配内存，就在哪个线程的TLAB上分配，只有TLAB用完并分配新的TLAB时，才需要同步锁定。</li>\n</ul>\n</li>\n<li>内存分配完成需要将分配到的内存空间都初始化为零值（不包括对象头），这一步操作保证了对象的实例字段在Java代码中可以不赋初始值就直接使用，程序能访问到这些字段的数据类型所对应的零值。</li>\n<li>虚拟机对对象进行必要的设置（设置对象的对象头信息）。比如这个对象是哪个类的实例、如何找到类的元数据信息、对象的哈希码、对象的GC分代年龄等信息。</li>\n<li>执行<init>方法。把对象按照程序员的意愿进行初始化。</init></li>\n</ul>\n</li>\n<li>\n<p>对象的内存布局</p>\n<ul>\n<li>对象头：包括两部分信息\n<ul>\n<li>存储对象自身的运行时数据，如哈希码、GC分代年龄、锁状态标志、线程持有的锁、偏向线程ID、偏向时间戳。</li>\n<li>类型指针，指对象指向它的类元数据指针，虚拟机通过这个指针来确定这个对象是哪个类的实例。（查找对象的元数据信息不一定要通过对象本身，所以并不是所有的虚拟机实现都必须在对象数据上保留类型指针）。对于数组，还需要一块记录数组长度的数据，因为虚拟机可以通过普通Java对象的元数据信息确定Java对象的大小，但是从数组的元数据中却无法确定数组的大小。</li>\n</ul>\n</li>\n<li>实例数据\n<ul>\n<li>对象真正存储的有效信息，无论是从父类继承下来的，还是在子类中定义的，都需要记录下来。</li>\n</ul>\n</li>\n<li>对齐填充\n<ul>\n<li>并不是必然存在的，仅仅起着占位符的作用。对象的大小必须是8字节的整数倍，而对象头部分正好是8字节的倍数。当对象实例数据部分没有对齐时，就需要通过对齐填充来补全。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>对象的访问定位</p>\n<ul>\n<li>句柄访问：Java堆中将会划分出一块内存来作为句柄池，reference中存储的就是对象的句柄地址。而句柄中包含了对象实例数据与类型数据各自的具体地址信息。好处是reference种存储的是稳定的句柄地址，在对象被移动时只会改变句柄中的实例数据指针，而reference本身不需要更改。</li>\n<li>指针访问：reference中存储的直接就是对象地址。好处是速度更快，节省了一次指针定位的时间开销，Sun HotSpot虚拟机就是使用第二种方式来进行对象访问的。</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h3 id=\"运行时数据区域\"><a class=\"header-anchor\" href=\"#运行时数据区域\">¶</a>运行时数据区域</h3>\n<p>Java虚拟机在执行Java程序时会把它管理的内存划分为几个不同的数据区域。每个区域有各自的用途，并且创建和销毁的时间都会有所不同，有的区域随着虚拟机进程的启动而存在，有些区域则依赖用户线程的启动和结束而建立和销毁。以下是Java虚拟机所管理的几个运行时数据区域。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsoe263y0vj20dr0b1ju7.jpg\" alt=\"\"></p>","more":"<ol>\n<li>程序计数器\n<ul>\n<li>每个线程都有自己独立的程序计数器，用来记录下一条要执行的字节码指令，分支，循环，跳转，异常处理，线程恢复等基础功能。此内存区域是唯一一个在Java虚拟机规范中没有规定任何OutOfMemoryError情况的区域。</li>\n</ul>\n</li>\n<li>Java虚拟机栈\n<ul>\n<li>虚拟机栈是线程私有的，每个方法在执行时都会创建一个栈帧，用来存储局部变量表，操作数栈，动态链接，方法出口等信息。每一个方法从调用到执行完成，就对应着一个栈帧在虚拟机中入栈到出栈的过程。</li>\n<li>局部变量表存放各种基本数据类型，对象引用和returnAddress类型，其中64位长度的double和long数据会占用2个局部变量空间。</li>\n<li>局部变量表所需的内存空间在编译期间就完成了分配，在方法运行期间不会改变。</li>\n<li>stackoverflowerror：线程请求的栈深度大于虚拟机允许的深度。outofmemoryerror：虚拟机栈可以动态扩展，但是扩展时无法申请到足够的内存。</li>\n</ul>\n</li>\n<li>本地方法栈\n<ul>\n<li>虚拟机栈执行Java方法，而本地方法栈则为虚拟机使用到的native方法服务。</li>\n<li>本地方法栈也会抛出StackOverFlowError和OutOfMemoryError异常。</li>\n</ul>\n</li>\n<li>Java堆\n<ul>\n<li>被所有线程共享。在虚拟机启动时创建。用来存放对象实例和数组（唯一目的）。技术在发展，并不是所有对象都分配在堆上面了（JIT编译器的发展与逃逸分析技术逐渐成熟，栈上分配、标量替换优化技术将导致一些微妙的变化发生）。</li>\n<li>Java堆是垃圾收集器管理的主要区域。有什么新生代，老年代划分，目的就是为了更好地回收内存，与存放的内容无关。</li>\n<li>Java堆可以处于物理上不连续的内存中，如果堆中的内存用完，无法再扩展时，就会抛出OutOfMemoryError。</li>\n</ul>\n</li>\n<li>方法区\n<ul>\n<li>被所有线程共享。用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。</li>\n<li>在JDK1.7的hotspot中，已经把原本放在永久代的字符串常量池移出。</li>\n<li>虚拟机规范对方法区的限制非常宽松，不需要连续的内存和可以固定大小或者课扩展，可以选择不实现垃圾收集。</li>\n<li>当方法区无法满足内存分配需求时，将抛出OutOfMemoryError。</li>\n</ul>\n</li>\n<li>运行时常量池\n<ul>\n<li>运行时常量池是方法区的一部分。用于存放在编译期产生的各种字面量和符号引用。但是具备动态性，允许运行期间加入新的常量。当常量池无法再申请到内存时会抛出OutOfMemoryError异常。</li>\n</ul>\n</li>\n<li>直接内存\n<ul>\n<li>不是虚拟机运行时数据区的一部分，也不是Java虚拟机规范中定义的内存区域，但是这部分内存被频繁地调用，也可能导致OutOfMemoryError异常的出现。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"hotspot虚拟机对象探秘\"><a class=\"header-anchor\" href=\"#hotspot虚拟机对象探秘\">¶</a>HotSpot虚拟机对象探秘</h3>\n<p>了解了虚拟机的组成，接下来需要探索的就是，对象是如何被创建，布局以及如何访问的。HotSpot是Java中比较常见的虚拟机，接下来看看在HotSpot中，java对象是如何分贝，布局和访问的。</p>\n<ol>\n<li>\n<p>对象的创建</p>\n<ul>\n<li>new指令-&gt;检查指令的参数是否能在常量池中定位到一个类的符号引用，并检查这个符号引用代表的类是否已被加载、解析和初始化过。如果没有，必须先执行相应的类的检查过程。</li>\n<li>类加载检查通过后，虚拟机将为新生对象分配内存，对象所需内存大小在类加载完成时就已经确定， 分配空间的任务等于把一块确定大小的内存从Java堆中划分出来。具体采用哪种分配方式由Java堆是否规整决定，而Java堆是否规整又由所采用的垃圾收集器是否带有压缩整理功能决定。\n<ul>\n<li>指针碰撞：分配内存时，把指针向空闲空间挪动一段与对象大小相等的距离。</li>\n<li>空闲列表：维护一个列表用来记录那些内存块是可用的，分配的时候从列表中找到一块足够大的空间划分给对象实例，并更新列表上的记录。</li>\n</ul>\n</li>\n<li>对象创建时需要考虑并发问题。\n<ul>\n<li>对分配内存空间的动作进行同步处理–实际上虚拟机采用CAS配上失败重试的方式保证更新操作的原子性。</li>\n<li>把内存分配的动作按照线程划分在不同的空间之中进行。即每个线程在Java堆中预先分配一小块内存，称为本地线程分配缓冲（TLAB：Thread Local Allocation Buffer）。哪个线程要分配内存，就在哪个线程的TLAB上分配，只有TLAB用完并分配新的TLAB时，才需要同步锁定。</li>\n</ul>\n</li>\n<li>内存分配完成需要将分配到的内存空间都初始化为零值（不包括对象头），这一步操作保证了对象的实例字段在Java代码中可以不赋初始值就直接使用，程序能访问到这些字段的数据类型所对应的零值。</li>\n<li>虚拟机对对象进行必要的设置（设置对象的对象头信息）。比如这个对象是哪个类的实例、如何找到类的元数据信息、对象的哈希码、对象的GC分代年龄等信息。</li>\n<li>执行<init>方法。把对象按照程序员的意愿进行初始化。</init></li>\n</ul>\n</li>\n<li>\n<p>对象的内存布局</p>\n<ul>\n<li>对象头：包括两部分信息\n<ul>\n<li>存储对象自身的运行时数据，如哈希码、GC分代年龄、锁状态标志、线程持有的锁、偏向线程ID、偏向时间戳。</li>\n<li>类型指针，指对象指向它的类元数据指针，虚拟机通过这个指针来确定这个对象是哪个类的实例。（查找对象的元数据信息不一定要通过对象本身，所以并不是所有的虚拟机实现都必须在对象数据上保留类型指针）。对于数组，还需要一块记录数组长度的数据，因为虚拟机可以通过普通Java对象的元数据信息确定Java对象的大小，但是从数组的元数据中却无法确定数组的大小。</li>\n</ul>\n</li>\n<li>实例数据\n<ul>\n<li>对象真正存储的有效信息，无论是从父类继承下来的，还是在子类中定义的，都需要记录下来。</li>\n</ul>\n</li>\n<li>对齐填充\n<ul>\n<li>并不是必然存在的，仅仅起着占位符的作用。对象的大小必须是8字节的整数倍，而对象头部分正好是8字节的倍数。当对象实例数据部分没有对齐时，就需要通过对齐填充来补全。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p>对象的访问定位</p>\n<ul>\n<li>句柄访问：Java堆中将会划分出一块内存来作为句柄池，reference中存储的就是对象的句柄地址。而句柄中包含了对象实例数据与类型数据各自的具体地址信息。好处是reference种存储的是稳定的句柄地址，在对象被移动时只会改变句柄中的实例数据指针，而reference本身不需要更改。</li>\n<li>指针访问：reference中存储的直接就是对象地址。好处是速度更快，节省了一次指针定位的时间开销，Sun HotSpot虚拟机就是使用第二种方式来进行对象访问的。</li>\n</ul>\n</li>\n</ol>"},{"title":"Markdown的使用","date":"2016-01-22T04:39:04.000Z","_content":"\nMarkDown语法比较简单，能够很轻松的学会，但如果搭配html的语法使用，能够实现更多复杂的效果。\n\n### 标题\n\n在文字前面添加#即可实现标题效果\n`# 一级标题`\n`## 二级标题`\n`### 三级标题`\n依此类推，总共可以创建六级标题\n\n<!-- more -->\n\n### 引用文字\n在文字前添加>\n> 这是一级引用\n>>这是二级引用\n>>> 这是三级引用\n\n语法：\n`> 这是一段引用。`\n\n### 添加超连接\n\n这是一个跳转到博客首页的连接[<font color=#0099ff>首页</font>](http://www.lieeber.com/ \"我的首页\")\n语法：`[首页](http://www.lieeber.com/ \"我的首页\")`\n\n\n### 添加图片\n\n<img width=\"150\" height=\"150\" align=center src=\"http://osphuquui.bkt.clouddn.com/lieeber.jpg\"/>\n\n语法：\n1. `![图片](https://mgpath/xxx.jpg)`\n2. `<img width=\"150\" height=\"150\" align=center src=\"mgpath/xxx.jpg\"/>`\n\n第一种是使用的Markdown自带的添加语法，无法控制图片的大小和位置，第二种是html的语法，可以指定图片的大小和位置，不过对于Markdown语法，我们可以结合div来控制图片的位置。\n\n```\n<div align=center>\n![图片](https://mgpath/xxx.jpg)\n</div>\n```\n\n### 分割线\n***\n语法：`***`\n\n### 列表\n\n#### 无序列表\n- one\n- two\n- three\n\n语法：`在需要列表样式的文字前添加\"-\"或者\"*\"`\n\n#### 有序列表\n1. one\n2. two\n3. three\n\n语法：`在需要列表样式的文字前添加\"1.\"，依次增加。`\n\n### 粗体与斜体\n\n**这个是粗体**\n\n*这个是斜体*\n\n语法：\n`**这个是粗体**`\n`*这个是斜体*`\n\n### 表格\n\n| 书籍         | 价格   |  作者    |\n| ---------   | -----: | :----:  |\n| 金瓶梅       | ￥30  |   小明   |\n| 西厢记       | ￥49  |   小华   |\n| 计算机原理    | ￥50  |  韩梅梅  |\n\n语法：\n```\n| 书籍         | 价格   |  作者    |\n| ---------   | -----: | :----:  |\n| 金瓶梅       | \\￥30  |   小明   |\n| 西厢记       | \\￥49  |   小华   |\n| 计算机原理    | \\￥50  |  韩梅梅  |\n\n* ------:为右对齐。 \n* :------为左对齐。 \n* :------:为居中对齐。 \n* -------为使用默认居中对齐\n```\n\n### 阅读全文\n`<!-- more -->`\n\n### 代码块：\n\n#### 单行代码块：\n`public static void main(String args)`\n语法：在代码块左右分别添加一个&acute;\n\n#### 多行代码块\n```\npublic static void main(String ..args){\n    System.out.println(\"hello Markdown!\")\n}\n```\n语法：在代码块左右分别添加三个&acute;\n\n### 删除线\n~~这是一条被删除文本~~\n语法：`~~这是一条被删除文本~~`\n\n### 脚注\n这是一个脚注[^1]。\n语法：\n```\n这是一个脚注[^1]。\n脚注须使用数字，然后再文章末尾加上\"[^1]: 脚注内容\"即可\n```\n### 实现页面内跳转\n[锚点](#index)\n<br>\n<span id = \"index\">跳转到这里</span><br>\n语法：\n```\n[锚点](#index)\n<span id = \"index\">跳转到这里</span>\n```\n\n### 配合html,css使用\n#### 设置字体颜色，样式，大小等\n<font face=\"黑体\">我是黑体字</font></br>\n<font face=\"微软雅黑\">我是微软雅黑</font></br>\n<font face=\"STCAIYUN\">我是华文彩云</font></br>\n<font color=#0099ff size=5 face=\"黑体\">color=#0099ff size=72 face=\"黑体\"</font></br>\n<font color=#00ffff size=4>color=#00ffff</font></br>\n<font color=gray size=10>color=gray</font></br>\n语法：\n```\n<font face=\"黑体\">我是黑体字</font></br>\n<font face=\"微软雅黑\">我是微软雅黑</font></br>\n<font face=\"STCAIYUN\">我是华文彩云</font></br>\n<font color=#0099ff size=5 face=\"黑体\">color=#0099ff size=72 face=\"黑体\"</font></br>\n<font color=#00ffff size=4>color=#00ffff</font></br>\n<font color=gray size=10>color=gray</font></br>\n```\n\nhtml样式可以和Markdown语法组合起来使用，比如可以指定超链接的颜色。<br>\n这是一个跳转到博客首页的连接[<font color=#0099ff>首页</font>](http://www.lieeber.com/ \"我的首页\")\n语法：`这是一个跳转到博客首页的连接[<font color=#0099ff>首页</font>](http://www.lieeber.com/ \"我的首页\")`\n#### 设置背景色\n<table><tr><td bgcolor=orange>黄色背景：orange</td></tr></table>\n\n\n[^1]: 脚注内容","source":"_posts/Markdown的使用.md","raw":"---\ntitle: Markdown的使用\ntags:\n  - Markdown\ncategories:\n  - 博客\ndate: 2016-01-22 12:39:04\n---\n\nMarkDown语法比较简单，能够很轻松的学会，但如果搭配html的语法使用，能够实现更多复杂的效果。\n\n### 标题\n\n在文字前面添加#即可实现标题效果\n`# 一级标题`\n`## 二级标题`\n`### 三级标题`\n依此类推，总共可以创建六级标题\n\n<!-- more -->\n\n### 引用文字\n在文字前添加>\n> 这是一级引用\n>>这是二级引用\n>>> 这是三级引用\n\n语法：\n`> 这是一段引用。`\n\n### 添加超连接\n\n这是一个跳转到博客首页的连接[<font color=#0099ff>首页</font>](http://www.lieeber.com/ \"我的首页\")\n语法：`[首页](http://www.lieeber.com/ \"我的首页\")`\n\n\n### 添加图片\n\n<img width=\"150\" height=\"150\" align=center src=\"http://osphuquui.bkt.clouddn.com/lieeber.jpg\"/>\n\n语法：\n1. `![图片](https://mgpath/xxx.jpg)`\n2. `<img width=\"150\" height=\"150\" align=center src=\"mgpath/xxx.jpg\"/>`\n\n第一种是使用的Markdown自带的添加语法，无法控制图片的大小和位置，第二种是html的语法，可以指定图片的大小和位置，不过对于Markdown语法，我们可以结合div来控制图片的位置。\n\n```\n<div align=center>\n![图片](https://mgpath/xxx.jpg)\n</div>\n```\n\n### 分割线\n***\n语法：`***`\n\n### 列表\n\n#### 无序列表\n- one\n- two\n- three\n\n语法：`在需要列表样式的文字前添加\"-\"或者\"*\"`\n\n#### 有序列表\n1. one\n2. two\n3. three\n\n语法：`在需要列表样式的文字前添加\"1.\"，依次增加。`\n\n### 粗体与斜体\n\n**这个是粗体**\n\n*这个是斜体*\n\n语法：\n`**这个是粗体**`\n`*这个是斜体*`\n\n### 表格\n\n| 书籍         | 价格   |  作者    |\n| ---------   | -----: | :----:  |\n| 金瓶梅       | ￥30  |   小明   |\n| 西厢记       | ￥49  |   小华   |\n| 计算机原理    | ￥50  |  韩梅梅  |\n\n语法：\n```\n| 书籍         | 价格   |  作者    |\n| ---------   | -----: | :----:  |\n| 金瓶梅       | \\￥30  |   小明   |\n| 西厢记       | \\￥49  |   小华   |\n| 计算机原理    | \\￥50  |  韩梅梅  |\n\n* ------:为右对齐。 \n* :------为左对齐。 \n* :------:为居中对齐。 \n* -------为使用默认居中对齐\n```\n\n### 阅读全文\n`<!-- more -->`\n\n### 代码块：\n\n#### 单行代码块：\n`public static void main(String args)`\n语法：在代码块左右分别添加一个&acute;\n\n#### 多行代码块\n```\npublic static void main(String ..args){\n    System.out.println(\"hello Markdown!\")\n}\n```\n语法：在代码块左右分别添加三个&acute;\n\n### 删除线\n~~这是一条被删除文本~~\n语法：`~~这是一条被删除文本~~`\n\n### 脚注\n这是一个脚注[^1]。\n语法：\n```\n这是一个脚注[^1]。\n脚注须使用数字，然后再文章末尾加上\"[^1]: 脚注内容\"即可\n```\n### 实现页面内跳转\n[锚点](#index)\n<br>\n<span id = \"index\">跳转到这里</span><br>\n语法：\n```\n[锚点](#index)\n<span id = \"index\">跳转到这里</span>\n```\n\n### 配合html,css使用\n#### 设置字体颜色，样式，大小等\n<font face=\"黑体\">我是黑体字</font></br>\n<font face=\"微软雅黑\">我是微软雅黑</font></br>\n<font face=\"STCAIYUN\">我是华文彩云</font></br>\n<font color=#0099ff size=5 face=\"黑体\">color=#0099ff size=72 face=\"黑体\"</font></br>\n<font color=#00ffff size=4>color=#00ffff</font></br>\n<font color=gray size=10>color=gray</font></br>\n语法：\n```\n<font face=\"黑体\">我是黑体字</font></br>\n<font face=\"微软雅黑\">我是微软雅黑</font></br>\n<font face=\"STCAIYUN\">我是华文彩云</font></br>\n<font color=#0099ff size=5 face=\"黑体\">color=#0099ff size=72 face=\"黑体\"</font></br>\n<font color=#00ffff size=4>color=#00ffff</font></br>\n<font color=gray size=10>color=gray</font></br>\n```\n\nhtml样式可以和Markdown语法组合起来使用，比如可以指定超链接的颜色。<br>\n这是一个跳转到博客首页的连接[<font color=#0099ff>首页</font>](http://www.lieeber.com/ \"我的首页\")\n语法：`这是一个跳转到博客首页的连接[<font color=#0099ff>首页</font>](http://www.lieeber.com/ \"我的首页\")`\n#### 设置背景色\n<table><tr><td bgcolor=orange>黄色背景：orange</td></tr></table>\n\n\n[^1]: 脚注内容","slug":"Markdown的使用","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv53n000b58ug2pzcmn8u","content":"<p>MarkDown语法比较简单，能够很轻松的学会，但如果搭配html的语法使用，能够实现更多复杂的效果。</p>\n<h3 id=\"标题\"><a class=\"header-anchor\" href=\"#标题\">¶</a>标题</h3>\n<p>在文字前面添加#即可实现标题效果\n<code># 一级标题</code>\n<code>## 二级标题</code>\n<code>### 三级标题</code>\n依此类推，总共可以创建六级标题</p>\n<a id=\"more\"></a>\n<h3 id=\"引用文字\"><a class=\"header-anchor\" href=\"#引用文字\">¶</a>引用文字</h3>\n<p>在文字前添加&gt;</p>\n<blockquote>\n<p>这是一级引用</p>\n<blockquote>\n<p>这是二级引用</p>\n<blockquote>\n<p>这是三级引用</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>语法：\n<code>&gt; 这是一段引用。</code></p>\n<h3 id=\"添加超连接\"><a class=\"header-anchor\" href=\"#添加超连接\">¶</a>添加超连接</h3>\n<p>这是一个跳转到博客首页的连接<a href=\"http://www.lieeber.com/\" title=\"我的首页\" target=\"_blank\" rel=\"noopener\"><font color=\"#0099ff\">首页</font></a>\n语法：<code>[首页](http://www.lieeber.com/ &quot;我的首页&quot;)</code></p>\n<h3 id=\"添加图片\"><a class=\"header-anchor\" href=\"#添加图片\">¶</a>添加图片</h3>\n<img width=\"150\" height=\"150\" align=\"center\" src=\"http://osphuquui.bkt.clouddn.com/lieeber.jpg\">\n<p>语法：</p>\n<ol>\n<li><code>![图片](https://mgpath/xxx.jpg)</code></li>\n<li><code>&lt;img width=&quot;150&quot; height=&quot;150&quot; align=center src=&quot;mgpath/xxx.jpg&quot;/&gt;</code></li>\n</ol>\n<p>第一种是使用的Markdown自带的添加语法，无法控制图片的大小和位置，第二种是html的语法，可以指定图片的大小和位置，不过对于Markdown语法，我们可以结合div来控制图片的位置。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div align=center&gt;</span><br><span class=\"line\">![图片](https://mgpath/xxx.jpg)</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"分割线\"><a class=\"header-anchor\" href=\"#分割线\">¶</a>分割线</h3>\n<hr>\n<p>语法：<code>***</code></p>\n<h3 id=\"列表\"><a class=\"header-anchor\" href=\"#列表\">¶</a>列表</h3>\n<h4 id=\"无序列表\"><a class=\"header-anchor\" href=\"#无序列表\">¶</a>无序列表</h4>\n<ul>\n<li>one</li>\n<li>two</li>\n<li>three</li>\n</ul>\n<p>语法：<code>在需要列表样式的文字前添加&quot;-&quot;或者&quot;*&quot;</code></p>\n<h4 id=\"有序列表\"><a class=\"header-anchor\" href=\"#有序列表\">¶</a>有序列表</h4>\n<ol>\n<li>one</li>\n<li>two</li>\n<li>three</li>\n</ol>\n<p>语法：<code>在需要列表样式的文字前添加&quot;1.&quot;，依次增加。</code></p>\n<h3 id=\"粗体与斜体\"><a class=\"header-anchor\" href=\"#粗体与斜体\">¶</a>粗体与斜体</h3>\n<p><strong>这个是粗体</strong></p>\n<p><em>这个是斜体</em></p>\n<p>语法：\n<code>**这个是粗体**</code>\n<code>*这个是斜体*</code></p>\n<h3 id=\"表格\"><a class=\"header-anchor\" href=\"#表格\">¶</a>表格</h3>\n<table>\n<thead>\n<tr>\n<th>书籍</th>\n<th style=\"text-align:right\">价格</th>\n<th style=\"text-align:center\">作者</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>金瓶梅</td>\n<td style=\"text-align:right\">￥30</td>\n<td style=\"text-align:center\">小明</td>\n</tr>\n<tr>\n<td>西厢记</td>\n<td style=\"text-align:right\">￥49</td>\n<td style=\"text-align:center\">小华</td>\n</tr>\n<tr>\n<td>计算机原理</td>\n<td style=\"text-align:right\">￥50</td>\n<td style=\"text-align:center\">韩梅梅</td>\n</tr>\n</tbody>\n</table>\n<p>语法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| 书籍         | 价格   |  作者    |</span><br><span class=\"line\">| ---------   | -----: | :----:  |</span><br><span class=\"line\">| 金瓶梅       | \\￥30  |   小明   |</span><br><span class=\"line\">| 西厢记       | \\￥49  |   小华   |</span><br><span class=\"line\">| 计算机原理    | \\￥50  |  韩梅梅  |</span><br><span class=\"line\"></span><br><span class=\"line\">* ------:为右对齐。 </span><br><span class=\"line\">* :------为左对齐。 </span><br><span class=\"line\">* :------:为居中对齐。 </span><br><span class=\"line\">* -------为使用默认居中对齐</span><br></pre></td></tr></table></figure>\n<h3 id=\"阅读全文\"><a class=\"header-anchor\" href=\"#阅读全文\">¶</a>阅读全文</h3>\n<p><code>&lt;!-- more --&gt;</code></p>\n<h3 id=\"代码块：\"><a class=\"header-anchor\" href=\"#代码块：\">¶</a>代码块：</h3>\n<h4 id=\"单行代码块：\"><a class=\"header-anchor\" href=\"#单行代码块：\">¶</a>单行代码块：</h4>\n<p><code>public static void main(String args)</code>\n语法：在代码块左右分别添加一个´</p>\n<h4 id=\"多行代码块\"><a class=\"header-anchor\" href=\"#多行代码块\">¶</a>多行代码块</h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static void main(String ..args)&#123;</span><br><span class=\"line\">    System.out.println(&quot;hello Markdown!&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>语法：在代码块左右分别添加三个´</p>\n<h3 id=\"删除线\"><a class=\"header-anchor\" href=\"#删除线\">¶</a>删除线</h3>\n<p><s>这是一条被删除文本</s>\n语法：<code>~~这是一条被删除文本~~</code></p>\n<h3 id=\"脚注\"><a class=\"header-anchor\" href=\"#脚注\">¶</a>脚注</h3>\n<p>这是一个脚注<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>。\n语法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是一个脚注[^1]。</span><br><span class=\"line\">脚注须使用数字，然后再文章末尾加上&quot;[^1]: 脚注内容&quot;即可</span><br></pre></td></tr></table></figure>\n<h3 id=\"实现页面内跳转\"><a class=\"header-anchor\" href=\"#实现页面内跳转\">¶</a>实现页面内跳转</h3>\n<p><a href=\"#index\">锚点</a>\n<br>\n<span id=\"index\">跳转到这里</span><br>\n语法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[锚点](#index)</span><br><span class=\"line\">&lt;span id = &quot;index&quot;&gt;跳转到这里&lt;/span&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"配合html-css使用\"><a class=\"header-anchor\" href=\"#配合html-css使用\">¶</a>配合html,css使用</h3>\n<h4 id=\"设置字体颜色-样式-大小等\"><a class=\"header-anchor\" href=\"#设置字体颜色-样式-大小等\">¶</a>设置字体颜色，样式，大小等</h4>\n<p><font face=\"黑体\">我是黑体字</font><br>\n<font face=\"微软雅黑\">我是微软雅黑</font><br>\n<font face=\"STCAIYUN\">我是华文彩云</font><br>\n<font color=\"#0099ff\" size=\"5\" face=\"黑体\">color=#0099ff size=72 face=&quot;黑体&quot;</font><br>\n<font color=\"#00ffff\" size=\"4\">color=#00ffff</font><br>\n<font color=\"gray\" size=\"10\">color=gray</font><br>\n语法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt;&lt;/br&gt;</span><br><span class=\"line\">&lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;/font&gt;&lt;/br&gt;</span><br><span class=\"line\">&lt;font face=&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;/font&gt;&lt;/br&gt;</span><br><span class=\"line\">&lt;font color=#0099ff size=5 face=&quot;黑体&quot;&gt;color=#0099ff size=72 face=&quot;黑体&quot;&lt;/font&gt;&lt;/br&gt;</span><br><span class=\"line\">&lt;font color=#00ffff size=4&gt;color=#00ffff&lt;/font&gt;&lt;/br&gt;</span><br><span class=\"line\">&lt;font color=gray size=10&gt;color=gray&lt;/font&gt;&lt;/br&gt;</span><br></pre></td></tr></table></figure>\n<p>html样式可以和Markdown语法组合起来使用，比如可以指定超链接的颜色。<br>\n这是一个跳转到博客首页的连接<a href=\"http://www.lieeber.com/\" title=\"我的首页\" target=\"_blank\" rel=\"noopener\"><font color=\"#0099ff\">首页</font></a>\n语法：<code>这是一个跳转到博客首页的连接[&lt;font color=#0099ff&gt;首页&lt;/font&gt;](http://www.lieeber.com/ &quot;我的首页&quot;)</code></p>\n<h4 id=\"设置背景色\"><a class=\"header-anchor\" href=\"#设置背景色\">¶</a>设置背景色</h4>\n<table><tr><td bgcolor=\"orange\">黄色背景：orange</td></tr></table>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>脚注内容 <a href=\"#fnref1\" class=\"footnote-backref\">↩</a></p>\n</li>\n</ol>\n</section>\n","site":{"data":{}},"excerpt":"<p>MarkDown语法比较简单，能够很轻松的学会，但如果搭配html的语法使用，能够实现更多复杂的效果。</p>\n<h3 id=\"标题\"><a class=\"header-anchor\" href=\"#标题\">¶</a>标题</h3>\n<p>在文字前面添加#即可实现标题效果\n<code># 一级标题</code>\n<code>## 二级标题</code>\n<code>### 三级标题</code>\n依此类推，总共可以创建六级标题</p>","more":"<h3 id=\"引用文字\"><a class=\"header-anchor\" href=\"#引用文字\">¶</a>引用文字</h3>\n<p>在文字前添加&gt;</p>\n<blockquote>\n<p>这是一级引用</p>\n<blockquote>\n<p>这是二级引用</p>\n<blockquote>\n<p>这是三级引用</p>\n</blockquote>\n</blockquote>\n</blockquote>\n<p>语法：\n<code>&gt; 这是一段引用。</code></p>\n<h3 id=\"添加超连接\"><a class=\"header-anchor\" href=\"#添加超连接\">¶</a>添加超连接</h3>\n<p>这是一个跳转到博客首页的连接<a href=\"http://www.lieeber.com/\" title=\"我的首页\" target=\"_blank\" rel=\"noopener\"><font color=\"#0099ff\">首页</font></a>\n语法：<code>[首页](http://www.lieeber.com/ &quot;我的首页&quot;)</code></p>\n<h3 id=\"添加图片\"><a class=\"header-anchor\" href=\"#添加图片\">¶</a>添加图片</h3>\n<img width=\"150\" height=\"150\" align=\"center\" src=\"http://osphuquui.bkt.clouddn.com/lieeber.jpg\">\n<p>语法：</p>\n<ol>\n<li><code>![图片](https://mgpath/xxx.jpg)</code></li>\n<li><code>&lt;img width=&quot;150&quot; height=&quot;150&quot; align=center src=&quot;mgpath/xxx.jpg&quot;/&gt;</code></li>\n</ol>\n<p>第一种是使用的Markdown自带的添加语法，无法控制图片的大小和位置，第二种是html的语法，可以指定图片的大小和位置，不过对于Markdown语法，我们可以结合div来控制图片的位置。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;div align=center&gt;</span><br><span class=\"line\">![图片](https://mgpath/xxx.jpg)</span><br><span class=\"line\">&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"分割线\"><a class=\"header-anchor\" href=\"#分割线\">¶</a>分割线</h3>\n<hr>\n<p>语法：<code>***</code></p>\n<h3 id=\"列表\"><a class=\"header-anchor\" href=\"#列表\">¶</a>列表</h3>\n<h4 id=\"无序列表\"><a class=\"header-anchor\" href=\"#无序列表\">¶</a>无序列表</h4>\n<ul>\n<li>one</li>\n<li>two</li>\n<li>three</li>\n</ul>\n<p>语法：<code>在需要列表样式的文字前添加&quot;-&quot;或者&quot;*&quot;</code></p>\n<h4 id=\"有序列表\"><a class=\"header-anchor\" href=\"#有序列表\">¶</a>有序列表</h4>\n<ol>\n<li>one</li>\n<li>two</li>\n<li>three</li>\n</ol>\n<p>语法：<code>在需要列表样式的文字前添加&quot;1.&quot;，依次增加。</code></p>\n<h3 id=\"粗体与斜体\"><a class=\"header-anchor\" href=\"#粗体与斜体\">¶</a>粗体与斜体</h3>\n<p><strong>这个是粗体</strong></p>\n<p><em>这个是斜体</em></p>\n<p>语法：\n<code>**这个是粗体**</code>\n<code>*这个是斜体*</code></p>\n<h3 id=\"表格\"><a class=\"header-anchor\" href=\"#表格\">¶</a>表格</h3>\n<table>\n<thead>\n<tr>\n<th>书籍</th>\n<th style=\"text-align:right\">价格</th>\n<th style=\"text-align:center\">作者</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>金瓶梅</td>\n<td style=\"text-align:right\">￥30</td>\n<td style=\"text-align:center\">小明</td>\n</tr>\n<tr>\n<td>西厢记</td>\n<td style=\"text-align:right\">￥49</td>\n<td style=\"text-align:center\">小华</td>\n</tr>\n<tr>\n<td>计算机原理</td>\n<td style=\"text-align:right\">￥50</td>\n<td style=\"text-align:center\">韩梅梅</td>\n</tr>\n</tbody>\n</table>\n<p>语法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| 书籍         | 价格   |  作者    |</span><br><span class=\"line\">| ---------   | -----: | :----:  |</span><br><span class=\"line\">| 金瓶梅       | \\￥30  |   小明   |</span><br><span class=\"line\">| 西厢记       | \\￥49  |   小华   |</span><br><span class=\"line\">| 计算机原理    | \\￥50  |  韩梅梅  |</span><br><span class=\"line\"></span><br><span class=\"line\">* ------:为右对齐。 </span><br><span class=\"line\">* :------为左对齐。 </span><br><span class=\"line\">* :------:为居中对齐。 </span><br><span class=\"line\">* -------为使用默认居中对齐</span><br></pre></td></tr></table></figure>\n<h3 id=\"阅读全文\"><a class=\"header-anchor\" href=\"#阅读全文\">¶</a>阅读全文</h3>\n<p><code>&lt;!-- more --&gt;</code></p>\n<h3 id=\"代码块：\"><a class=\"header-anchor\" href=\"#代码块：\">¶</a>代码块：</h3>\n<h4 id=\"单行代码块：\"><a class=\"header-anchor\" href=\"#单行代码块：\">¶</a>单行代码块：</h4>\n<p><code>public static void main(String args)</code>\n语法：在代码块左右分别添加一个´</p>\n<h4 id=\"多行代码块\"><a class=\"header-anchor\" href=\"#多行代码块\">¶</a>多行代码块</h4>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public static void main(String ..args)&#123;</span><br><span class=\"line\">    System.out.println(&quot;hello Markdown!&quot;)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>语法：在代码块左右分别添加三个´</p>\n<h3 id=\"删除线\"><a class=\"header-anchor\" href=\"#删除线\">¶</a>删除线</h3>\n<p><s>这是一条被删除文本</s>\n语法：<code>~~这是一条被删除文本~~</code></p>\n<h3 id=\"脚注\"><a class=\"header-anchor\" href=\"#脚注\">¶</a>脚注</h3>\n<p>这是一个脚注<sup class=\"footnote-ref\"><a href=\"#fn1\" id=\"fnref1\">[1]</a></sup>。\n语法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">这是一个脚注[^1]。</span><br><span class=\"line\">脚注须使用数字，然后再文章末尾加上&quot;[^1]: 脚注内容&quot;即可</span><br></pre></td></tr></table></figure>\n<h3 id=\"实现页面内跳转\"><a class=\"header-anchor\" href=\"#实现页面内跳转\">¶</a>实现页面内跳转</h3>\n<p><a href=\"#index\">锚点</a>\n<br>\n<span id=\"index\">跳转到这里</span><br>\n语法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[锚点](#index)</span><br><span class=\"line\">&lt;span id = &quot;index&quot;&gt;跳转到这里&lt;/span&gt;</span><br></pre></td></tr></table></figure>\n<h3 id=\"配合html-css使用\"><a class=\"header-anchor\" href=\"#配合html-css使用\">¶</a>配合html,css使用</h3>\n<h4 id=\"设置字体颜色-样式-大小等\"><a class=\"header-anchor\" href=\"#设置字体颜色-样式-大小等\">¶</a>设置字体颜色，样式，大小等</h4>\n<p><font face=\"黑体\">我是黑体字</font><br>\n<font face=\"微软雅黑\">我是微软雅黑</font><br>\n<font face=\"STCAIYUN\">我是华文彩云</font><br>\n<font color=\"#0099ff\" size=\"5\" face=\"黑体\">color=#0099ff size=72 face=&quot;黑体&quot;</font><br>\n<font color=\"#00ffff\" size=\"4\">color=#00ffff</font><br>\n<font color=\"gray\" size=\"10\">color=gray</font><br>\n语法：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt;&lt;/br&gt;</span><br><span class=\"line\">&lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;/font&gt;&lt;/br&gt;</span><br><span class=\"line\">&lt;font face=&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;/font&gt;&lt;/br&gt;</span><br><span class=\"line\">&lt;font color=#0099ff size=5 face=&quot;黑体&quot;&gt;color=#0099ff size=72 face=&quot;黑体&quot;&lt;/font&gt;&lt;/br&gt;</span><br><span class=\"line\">&lt;font color=#00ffff size=4&gt;color=#00ffff&lt;/font&gt;&lt;/br&gt;</span><br><span class=\"line\">&lt;font color=gray size=10&gt;color=gray&lt;/font&gt;&lt;/br&gt;</span><br></pre></td></tr></table></figure>\n<p>html样式可以和Markdown语法组合起来使用，比如可以指定超链接的颜色。<br>\n这是一个跳转到博客首页的连接<a href=\"http://www.lieeber.com/\" title=\"我的首页\" target=\"_blank\" rel=\"noopener\"><font color=\"#0099ff\">首页</font></a>\n语法：<code>这是一个跳转到博客首页的连接[&lt;font color=#0099ff&gt;首页&lt;/font&gt;](http://www.lieeber.com/ &quot;我的首页&quot;)</code></p>\n<h4 id=\"设置背景色\"><a class=\"header-anchor\" href=\"#设置背景色\">¶</a>设置背景色</h4>\n<table><tr><td bgcolor=\"orange\">黄色背景：orange</td></tr></table>\n<hr class=\"footnotes-sep\">\n<section class=\"footnotes\">\n<ol class=\"footnotes-list\">\n<li id=\"fn1\" class=\"footnote-item\"><p>脚注内容 <a href=\"#fnref1\" class=\"footnote-backref\">↩</a></p>\n</li>\n</ol>\n</section>"},{"title":"Pyspider爬取mzitu图片","date":"2016-09-10T03:10:00.000Z","_content":"\n最近在学习爬虫技术，简单记录一下pyspider的使用。\n\n### 安装pyspider\n```shell\npip3 install pyspider\n```\n\n<!-- more -->\n\n### 启动pyspider\n安装完成后就可以直接启动了\n```shell\n    pyspider all\n```\n服务启动后，打开浏览器，在网址栏输入localhost:5000，即可进入pyspider提供的webui界面\n\n<img  align=center src=\"http://image-1252244366.costj.myqcloud.com/pyspider_webui.png\"/>\n\n如果想开启一个新的任务，点击左上角的create\n\n<img width=\"400\" height=\"200\" align=center src=\"http://image-1252244366.costj.myqcloud.com/pyspider_create_new_project.png\"/>\n\n项目创建后就进入了任务详情界面，左边可以查看每一次爬取界面的详细信息，右边是代码。\n\n<img  align=center src=\"http://image-1252244366.costj.myqcloud.com/pyspider_webui_detail.png\"/>\n\n下面是具体的爬虫代码：\n\n```python\nfrom pyspider.libs.base_handler import *\nimport os\n\n\nclass Handler(BaseHandler):\n    crawl_config = {\n    }\n\n    def mkDir(self, dir_path):\n        exists = os.path.exists(dir_path)\n        if not exists:\n            os.makedirs(dir_path)\n            return dir_path\n        else:\n            return dir_path\n\n\n    def saveImg(self, content, path):\n        with open(path,'wb') as f:\n            f.write(content)\n\n            \n    def __init__(self):\n        self.page = 1\n        self.total_page = 150\n        self.base_url = \"/Users/lieeber/Downloads/meizitu2/\"\n\n        \n    @every(minutes=24 * 60)\n    def on_start(self):\n        while self.page <= self.total_page:\n            self.crawl('http://www.mzitu.com/page/' + str(self.page), callback=self.index_page)\n            self.page += 1\n\n            \n    @config(age=10 * 24 * 60 * 60)\n    def index_page(self, response):\n        aa = response.doc('div[class=postlist]')('ul[id=pins]')('li')('span')('a[target=_blank]')\n        for each in aa.items():\n            print(each.attr.href)\n            self.crawl(each.attr.href, callback=self.index_page_each_page)\n\n    @config(priority=2)\n    def index_page_each_page(self, response):\n        title = response.doc('title').text()\n        print(title)\n        big_page = response.doc('span[class=dots]').next('a span').text()\n        for item in range(1, int(big_page) + 1):\n            print(response.url + \"/\" + str(item))\n            self.crawl(response.url + \"/\" + str(item), callback=self.detail_page,save={'title': title})\n\n    @config(priority=2)\n    def detail_page(self, response):\n        image_url = response.doc('div[class=main-image]')('img').attr('src')\n        print(image_url)\n        title = response.save['title']\n        print(title)\n        self.crawl(image_url, headers={'referer': 'http://www.mzitu.com/'}, callback=self.get_image_content,save={'title': title})\n\n    @config(priority=2)\n    def get_image_content(self, response):\n        image_name = response.url.split('/')[-1]\n        print(image_name)\n        unicode_path = (self.base_url + response.save['title']).replace(' ','')\n        self.mkDir(unicode_path)\n        print( unicode_path + \"/\" + image_name)\n        self.saveImg(response.content, unicode_path + \"/\" + image_name)\n```\n\n代码写完后，就可以进入dashboard页面，更改status为running或者debug状态，点击action中的run按钮即可开启爬虫任务了。\n\n<img  align=center src=\"http://image-1252244366.costj.myqcloud.com/pyspider_mzitu_item.png\"/>\n\n可以看到，图片被成功的爬取下来了。","source":"_posts/PySpider爬取mzitu图片.md","raw":"---\ntitle: Pyspider爬取mzitu图片\ntags:\n  - python\n  - pyspider\n  - 爬虫\ncategories:\n  - 爬虫\ndate: 2016-09-10 11:10:00\n---\n\n最近在学习爬虫技术，简单记录一下pyspider的使用。\n\n### 安装pyspider\n```shell\npip3 install pyspider\n```\n\n<!-- more -->\n\n### 启动pyspider\n安装完成后就可以直接启动了\n```shell\n    pyspider all\n```\n服务启动后，打开浏览器，在网址栏输入localhost:5000，即可进入pyspider提供的webui界面\n\n<img  align=center src=\"http://image-1252244366.costj.myqcloud.com/pyspider_webui.png\"/>\n\n如果想开启一个新的任务，点击左上角的create\n\n<img width=\"400\" height=\"200\" align=center src=\"http://image-1252244366.costj.myqcloud.com/pyspider_create_new_project.png\"/>\n\n项目创建后就进入了任务详情界面，左边可以查看每一次爬取界面的详细信息，右边是代码。\n\n<img  align=center src=\"http://image-1252244366.costj.myqcloud.com/pyspider_webui_detail.png\"/>\n\n下面是具体的爬虫代码：\n\n```python\nfrom pyspider.libs.base_handler import *\nimport os\n\n\nclass Handler(BaseHandler):\n    crawl_config = {\n    }\n\n    def mkDir(self, dir_path):\n        exists = os.path.exists(dir_path)\n        if not exists:\n            os.makedirs(dir_path)\n            return dir_path\n        else:\n            return dir_path\n\n\n    def saveImg(self, content, path):\n        with open(path,'wb') as f:\n            f.write(content)\n\n            \n    def __init__(self):\n        self.page = 1\n        self.total_page = 150\n        self.base_url = \"/Users/lieeber/Downloads/meizitu2/\"\n\n        \n    @every(minutes=24 * 60)\n    def on_start(self):\n        while self.page <= self.total_page:\n            self.crawl('http://www.mzitu.com/page/' + str(self.page), callback=self.index_page)\n            self.page += 1\n\n            \n    @config(age=10 * 24 * 60 * 60)\n    def index_page(self, response):\n        aa = response.doc('div[class=postlist]')('ul[id=pins]')('li')('span')('a[target=_blank]')\n        for each in aa.items():\n            print(each.attr.href)\n            self.crawl(each.attr.href, callback=self.index_page_each_page)\n\n    @config(priority=2)\n    def index_page_each_page(self, response):\n        title = response.doc('title').text()\n        print(title)\n        big_page = response.doc('span[class=dots]').next('a span').text()\n        for item in range(1, int(big_page) + 1):\n            print(response.url + \"/\" + str(item))\n            self.crawl(response.url + \"/\" + str(item), callback=self.detail_page,save={'title': title})\n\n    @config(priority=2)\n    def detail_page(self, response):\n        image_url = response.doc('div[class=main-image]')('img').attr('src')\n        print(image_url)\n        title = response.save['title']\n        print(title)\n        self.crawl(image_url, headers={'referer': 'http://www.mzitu.com/'}, callback=self.get_image_content,save={'title': title})\n\n    @config(priority=2)\n    def get_image_content(self, response):\n        image_name = response.url.split('/')[-1]\n        print(image_name)\n        unicode_path = (self.base_url + response.save['title']).replace(' ','')\n        self.mkDir(unicode_path)\n        print( unicode_path + \"/\" + image_name)\n        self.saveImg(response.content, unicode_path + \"/\" + image_name)\n```\n\n代码写完后，就可以进入dashboard页面，更改status为running或者debug状态，点击action中的run按钮即可开启爬虫任务了。\n\n<img  align=center src=\"http://image-1252244366.costj.myqcloud.com/pyspider_mzitu_item.png\"/>\n\n可以看到，图片被成功的爬取下来了。","slug":"PySpider爬取mzitu图片","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv53q000f58ugg7ldclju","content":"<p>最近在学习爬虫技术，简单记录一下pyspider的使用。</p>\n<h3 id=\"安装pyspider\"><a class=\"header-anchor\" href=\"#安装pyspider\">¶</a>安装pyspider</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install pyspider</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"启动pyspider\"><a class=\"header-anchor\" href=\"#启动pyspider\">¶</a>启动pyspider</h3>\n<p>安装完成后就可以直接启动了</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyspider all</span><br></pre></td></tr></table></figure>\n<p>服务启动后，打开浏览器，在网址栏输入localhost:5000，即可进入pyspider提供的webui界面</p>\n<img align=\"center\" src=\"http://image-1252244366.costj.myqcloud.com/pyspider_webui.png\">\n<p>如果想开启一个新的任务，点击左上角的create</p>\n<img width=\"400\" height=\"200\" align=\"center\" src=\"http://image-1252244366.costj.myqcloud.com/pyspider_create_new_project.png\">\n<p>项目创建后就进入了任务详情界面，左边可以查看每一次爬取界面的详细信息，右边是代码。</p>\n<img align=\"center\" src=\"http://image-1252244366.costj.myqcloud.com/pyspider_webui_detail.png\">\n<p>下面是具体的爬虫代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pyspider.libs.base_handler <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Handler</span><span class=\"params\">(BaseHandler)</span>:</span></span><br><span class=\"line\">    crawl_config = &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mkDir</span><span class=\"params\">(self, dir_path)</span>:</span></span><br><span class=\"line\">        exists = os.path.exists(dir_path)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> exists:</span><br><span class=\"line\">            os.makedirs(dir_path)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> dir_path</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> dir_path</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">saveImg</span><span class=\"params\">(self, content, path)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> open(path,<span class=\"string\">'wb'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(content)</span><br><span class=\"line\"></span><br><span class=\"line\">            </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        self.page = <span class=\"number\">1</span></span><br><span class=\"line\">        self.total_page = <span class=\"number\">150</span></span><br><span class=\"line\">        self.base_url = <span class=\"string\">\"/Users/lieeber/Downloads/meizitu2/\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"meta\">    @every(minutes=24 * 60)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">on_start</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> self.page &lt;= self.total_page:</span><br><span class=\"line\">            self.crawl(<span class=\"string\">'http://www.mzitu.com/page/'</span> + str(self.page), callback=self.index_page)</span><br><span class=\"line\">            self.page += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"meta\">    @config(age=10 * 24 * 60 * 60)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index_page</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        aa = response.doc(<span class=\"string\">'div[class=postlist]'</span>)(<span class=\"string\">'ul[id=pins]'</span>)(<span class=\"string\">'li'</span>)(<span class=\"string\">'span'</span>)(<span class=\"string\">'a[target=_blank]'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> aa.items():</span><br><span class=\"line\">            print(each.attr.href)</span><br><span class=\"line\">            self.crawl(each.attr.href, callback=self.index_page_each_page)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @config(priority=2)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index_page_each_page</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        title = response.doc(<span class=\"string\">'title'</span>).text()</span><br><span class=\"line\">        print(title)</span><br><span class=\"line\">        big_page = response.doc(<span class=\"string\">'span[class=dots]'</span>).next(<span class=\"string\">'a span'</span>).text()</span><br><span class=\"line\">        <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(big_page) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            print(response.url + <span class=\"string\">\"/\"</span> + str(item))</span><br><span class=\"line\">            self.crawl(response.url + <span class=\"string\">\"/\"</span> + str(item), callback=self.detail_page,save=&#123;<span class=\"string\">'title'</span>: title&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @config(priority=2)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">detail_page</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        image_url = response.doc(<span class=\"string\">'div[class=main-image]'</span>)(<span class=\"string\">'img'</span>).attr(<span class=\"string\">'src'</span>)</span><br><span class=\"line\">        print(image_url)</span><br><span class=\"line\">        title = response.save[<span class=\"string\">'title'</span>]</span><br><span class=\"line\">        print(title)</span><br><span class=\"line\">        self.crawl(image_url, headers=&#123;<span class=\"string\">'referer'</span>: <span class=\"string\">'http://www.mzitu.com/'</span>&#125;, callback=self.get_image_content,save=&#123;<span class=\"string\">'title'</span>: title&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @config(priority=2)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_image_content</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        image_name = response.url.split(<span class=\"string\">'/'</span>)[<span class=\"number\">-1</span>]</span><br><span class=\"line\">        print(image_name)</span><br><span class=\"line\">        unicode_path = (self.base_url + response.save[<span class=\"string\">'title'</span>]).replace(<span class=\"string\">' '</span>,<span class=\"string\">''</span>)</span><br><span class=\"line\">        self.mkDir(unicode_path)</span><br><span class=\"line\">        print( unicode_path + <span class=\"string\">\"/\"</span> + image_name)</span><br><span class=\"line\">        self.saveImg(response.content, unicode_path + <span class=\"string\">\"/\"</span> + image_name)</span><br></pre></td></tr></table></figure>\n<p>代码写完后，就可以进入dashboard页面，更改status为running或者debug状态，点击action中的run按钮即可开启爬虫任务了。</p>\n<img align=\"center\" src=\"http://image-1252244366.costj.myqcloud.com/pyspider_mzitu_item.png\">\n<p>可以看到，图片被成功的爬取下来了。</p>\n","site":{"data":{}},"excerpt":"<p>最近在学习爬虫技术，简单记录一下pyspider的使用。</p>\n<h3 id=\"安装pyspider\"><a class=\"header-anchor\" href=\"#安装pyspider\">¶</a>安装pyspider</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install pyspider</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"启动pyspider\"><a class=\"header-anchor\" href=\"#启动pyspider\">¶</a>启动pyspider</h3>\n<p>安装完成后就可以直接启动了</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pyspider all</span><br></pre></td></tr></table></figure>\n<p>服务启动后，打开浏览器，在网址栏输入localhost:5000，即可进入pyspider提供的webui界面</p>\n<img align=\"center\" src=\"http://image-1252244366.costj.myqcloud.com/pyspider_webui.png\">\n<p>如果想开启一个新的任务，点击左上角的create</p>\n<img width=\"400\" height=\"200\" align=\"center\" src=\"http://image-1252244366.costj.myqcloud.com/pyspider_create_new_project.png\">\n<p>项目创建后就进入了任务详情界面，左边可以查看每一次爬取界面的详细信息，右边是代码。</p>\n<img align=\"center\" src=\"http://image-1252244366.costj.myqcloud.com/pyspider_webui_detail.png\">\n<p>下面是具体的爬虫代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pyspider.libs.base_handler <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Handler</span><span class=\"params\">(BaseHandler)</span>:</span></span><br><span class=\"line\">    crawl_config = &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mkDir</span><span class=\"params\">(self, dir_path)</span>:</span></span><br><span class=\"line\">        exists = os.path.exists(dir_path)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> exists:</span><br><span class=\"line\">            os.makedirs(dir_path)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> dir_path</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> dir_path</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">saveImg</span><span class=\"params\">(self, content, path)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> open(path,<span class=\"string\">'wb'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(content)</span><br><span class=\"line\"></span><br><span class=\"line\">            </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        self.page = <span class=\"number\">1</span></span><br><span class=\"line\">        self.total_page = <span class=\"number\">150</span></span><br><span class=\"line\">        self.base_url = <span class=\"string\">\"/Users/lieeber/Downloads/meizitu2/\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">        </span><br><span class=\"line\"><span class=\"meta\">    @every(minutes=24 * 60)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">on_start</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> self.page &lt;= self.total_page:</span><br><span class=\"line\">            self.crawl(<span class=\"string\">'http://www.mzitu.com/page/'</span> + str(self.page), callback=self.index_page)</span><br><span class=\"line\">            self.page += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">            </span><br><span class=\"line\"><span class=\"meta\">    @config(age=10 * 24 * 60 * 60)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index_page</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        aa = response.doc(<span class=\"string\">'div[class=postlist]'</span>)(<span class=\"string\">'ul[id=pins]'</span>)(<span class=\"string\">'li'</span>)(<span class=\"string\">'span'</span>)(<span class=\"string\">'a[target=_blank]'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> each <span class=\"keyword\">in</span> aa.items():</span><br><span class=\"line\">            print(each.attr.href)</span><br><span class=\"line\">            self.crawl(each.attr.href, callback=self.index_page_each_page)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @config(priority=2)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index_page_each_page</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        title = response.doc(<span class=\"string\">'title'</span>).text()</span><br><span class=\"line\">        print(title)</span><br><span class=\"line\">        big_page = response.doc(<span class=\"string\">'span[class=dots]'</span>).next(<span class=\"string\">'a span'</span>).text()</span><br><span class=\"line\">        <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, int(big_page) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            print(response.url + <span class=\"string\">\"/\"</span> + str(item))</span><br><span class=\"line\">            self.crawl(response.url + <span class=\"string\">\"/\"</span> + str(item), callback=self.detail_page,save=&#123;<span class=\"string\">'title'</span>: title&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @config(priority=2)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">detail_page</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        image_url = response.doc(<span class=\"string\">'div[class=main-image]'</span>)(<span class=\"string\">'img'</span>).attr(<span class=\"string\">'src'</span>)</span><br><span class=\"line\">        print(image_url)</span><br><span class=\"line\">        title = response.save[<span class=\"string\">'title'</span>]</span><br><span class=\"line\">        print(title)</span><br><span class=\"line\">        self.crawl(image_url, headers=&#123;<span class=\"string\">'referer'</span>: <span class=\"string\">'http://www.mzitu.com/'</span>&#125;, callback=self.get_image_content,save=&#123;<span class=\"string\">'title'</span>: title&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @config(priority=2)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_image_content</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        image_name = response.url.split(<span class=\"string\">'/'</span>)[<span class=\"number\">-1</span>]</span><br><span class=\"line\">        print(image_name)</span><br><span class=\"line\">        unicode_path = (self.base_url + response.save[<span class=\"string\">'title'</span>]).replace(<span class=\"string\">' '</span>,<span class=\"string\">''</span>)</span><br><span class=\"line\">        self.mkDir(unicode_path)</span><br><span class=\"line\">        print( unicode_path + <span class=\"string\">\"/\"</span> + image_name)</span><br><span class=\"line\">        self.saveImg(response.content, unicode_path + <span class=\"string\">\"/\"</span> + image_name)</span><br></pre></td></tr></table></figure>\n<p>代码写完后，就可以进入dashboard页面，更改status为running或者debug状态，点击action中的run按钮即可开启爬虫任务了。</p>\n<img align=\"center\" src=\"http://image-1252244366.costj.myqcloud.com/pyspider_mzitu_item.png\">\n<p>可以看到，图片被成功的爬取下来了。</p>"},{"title":"PySpider爬取糗事百科文章和图片","date":"2016-10-10T07:20:00.000Z","_content":"\n### 摘要\n\n爬取糗事百科的文章，有些文章含有图片，需要把图片也保存下来，同时保存用户的头像，通过用户的昵称来命名文件夹，同一个用户的段子保存在同一个目录下。\n\n<!-- more -->\n\n下面是具体的爬虫代码：\n\n```python\nfrom pyspider.libs.base_handler import *\nimport os\n\n\nclass Handler(BaseHandler):\n    crawl_config = {\n    }\n\n    def __init__(self):\n        self.base_dir = \"/Users/lieeber/Downloads/qiushibaike/\"\n\n    def mkDir(self, dir_path):\n        exists = os.path.exists(dir_path)\n        if not exists:\n            os.makedirs(dir_path)\n        return dir_path\n\n    def saveImg(self, content, path):\n        with open(path, 'wb') as f:\n            f.write(content)\n\n    def saveText(self, content, path):\n        with open(path, 'w') as f:\n            f.write(content)\n\n    @every(minutes=15)\n    def on_start(self):\n        for i in range(1, 14):\n            self.crawl('https://www.qiushibaike.com/8hr/page' + str(i), callback=self.index_page)\n\n    @config(age=10 * 24 * 60 * 60)\n    def index_page(self, response):\n        list_article = response.doc('div[class^=\"article block untagged mb15\"]')\n        for item in list_article.items():\n            item_article_url = item('a[class=contentHerf]').attr.href\n            print(item_article_url)\n            self.crawl(item_article_url, callback=self.detail_article_page)\n\n    @config(priority=2)\n    def detail_article_page(self, response):\n        # print(response.text)\n        content = response.doc('div[class=content]').text()\n        print(content)\n        user_info = response.doc('div[class=\"author clearfix\"]')\n        img_src = user_info('img[src^=\"https://pic.qiushibaike.com/system/avtnew\"]').attr('src')\n        user_name = user_info('a h2').text()\n        self.mkDir(self.base_dir + user_name)\n\n        print(img_src)\n        print(user_name)\n        self.crawl(img_src, callback=self.get_user_avatar, save={'user_name': user_name})\n        self.saveText(content, self.base_dir + user_name + \"/\" + user_name + \".txt\")\n        content_src = response.doc('div[class=thumb] img').attr('src')\n        if content_src:\n            print(content_src)\n            self.crawl(content_src, callback=self.get_content_img, save={'user_name': user_name})\n\n    @config(priority=2)\n    def get_content_img(self, response):\n        image_name = response.url.split('/')[-1]\n        user_name = response.save['user_name']\n        self.saveImg(response.content, self.base_dir + user_name + \"/\" + image_name)\n\n    @config(priority=2)\n    def get_user_avatar(self, response):\n        image_name = response.url.split('/')[-1]\n        user_name = response.save['user_name']\n        self.saveImg(response.content, self.base_dir + user_name + \"/\" + user_name + \".jpg\")\n```\n\n当某个方法需要使用上一个方法的数据时，往self.crawl()函数中添加参数save={'key':'value'}，下一个方法通过response.save['key']就能正确拿到value了。","source":"_posts/PySpider爬取糗事百科文章和图片.md","raw":"---\ntitle: PySpider爬取糗事百科文章和图片\ntags:\n  - python\n  - pyspider\n  - 爬虫\ncategories:\n  - 爬虫\ndate: 2016-10-10 15:20:00\n---\n\n### 摘要\n\n爬取糗事百科的文章，有些文章含有图片，需要把图片也保存下来，同时保存用户的头像，通过用户的昵称来命名文件夹，同一个用户的段子保存在同一个目录下。\n\n<!-- more -->\n\n下面是具体的爬虫代码：\n\n```python\nfrom pyspider.libs.base_handler import *\nimport os\n\n\nclass Handler(BaseHandler):\n    crawl_config = {\n    }\n\n    def __init__(self):\n        self.base_dir = \"/Users/lieeber/Downloads/qiushibaike/\"\n\n    def mkDir(self, dir_path):\n        exists = os.path.exists(dir_path)\n        if not exists:\n            os.makedirs(dir_path)\n        return dir_path\n\n    def saveImg(self, content, path):\n        with open(path, 'wb') as f:\n            f.write(content)\n\n    def saveText(self, content, path):\n        with open(path, 'w') as f:\n            f.write(content)\n\n    @every(minutes=15)\n    def on_start(self):\n        for i in range(1, 14):\n            self.crawl('https://www.qiushibaike.com/8hr/page' + str(i), callback=self.index_page)\n\n    @config(age=10 * 24 * 60 * 60)\n    def index_page(self, response):\n        list_article = response.doc('div[class^=\"article block untagged mb15\"]')\n        for item in list_article.items():\n            item_article_url = item('a[class=contentHerf]').attr.href\n            print(item_article_url)\n            self.crawl(item_article_url, callback=self.detail_article_page)\n\n    @config(priority=2)\n    def detail_article_page(self, response):\n        # print(response.text)\n        content = response.doc('div[class=content]').text()\n        print(content)\n        user_info = response.doc('div[class=\"author clearfix\"]')\n        img_src = user_info('img[src^=\"https://pic.qiushibaike.com/system/avtnew\"]').attr('src')\n        user_name = user_info('a h2').text()\n        self.mkDir(self.base_dir + user_name)\n\n        print(img_src)\n        print(user_name)\n        self.crawl(img_src, callback=self.get_user_avatar, save={'user_name': user_name})\n        self.saveText(content, self.base_dir + user_name + \"/\" + user_name + \".txt\")\n        content_src = response.doc('div[class=thumb] img').attr('src')\n        if content_src:\n            print(content_src)\n            self.crawl(content_src, callback=self.get_content_img, save={'user_name': user_name})\n\n    @config(priority=2)\n    def get_content_img(self, response):\n        image_name = response.url.split('/')[-1]\n        user_name = response.save['user_name']\n        self.saveImg(response.content, self.base_dir + user_name + \"/\" + image_name)\n\n    @config(priority=2)\n    def get_user_avatar(self, response):\n        image_name = response.url.split('/')[-1]\n        user_name = response.save['user_name']\n        self.saveImg(response.content, self.base_dir + user_name + \"/\" + user_name + \".jpg\")\n```\n\n当某个方法需要使用上一个方法的数据时，往self.crawl()函数中添加参数save={'key':'value'}，下一个方法通过response.save['key']就能正确拿到value了。","slug":"PySpider爬取糗事百科文章和图片","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv53s000i58ugxr5p55r1","content":"<h3 id=\"摘要\"><a class=\"header-anchor\" href=\"#摘要\">¶</a>摘要</h3>\n<p>爬取糗事百科的文章，有些文章含有图片，需要把图片也保存下来，同时保存用户的头像，通过用户的昵称来命名文件夹，同一个用户的段子保存在同一个目录下。</p>\n<a id=\"more\"></a>\n<p>下面是具体的爬虫代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pyspider.libs.base_handler <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Handler</span><span class=\"params\">(BaseHandler)</span>:</span></span><br><span class=\"line\">    crawl_config = &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        self.base_dir = <span class=\"string\">\"/Users/lieeber/Downloads/qiushibaike/\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mkDir</span><span class=\"params\">(self, dir_path)</span>:</span></span><br><span class=\"line\">        exists = os.path.exists(dir_path)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> exists:</span><br><span class=\"line\">            os.makedirs(dir_path)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dir_path</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">saveImg</span><span class=\"params\">(self, content, path)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> open(path, <span class=\"string\">'wb'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(content)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">saveText</span><span class=\"params\">(self, content, path)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> open(path, <span class=\"string\">'w'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(content)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @every(minutes=15)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">on_start</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, <span class=\"number\">14</span>):</span><br><span class=\"line\">            self.crawl(<span class=\"string\">'https://www.qiushibaike.com/8hr/page'</span> + str(i), callback=self.index_page)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @config(age=10 * 24 * 60 * 60)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index_page</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        list_article = response.doc(<span class=\"string\">'div[class^=\"article block untagged mb15\"]'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list_article.items():</span><br><span class=\"line\">            item_article_url = item(<span class=\"string\">'a[class=contentHerf]'</span>).attr.href</span><br><span class=\"line\">            print(item_article_url)</span><br><span class=\"line\">            self.crawl(item_article_url, callback=self.detail_article_page)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @config(priority=2)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">detail_article_page</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        <span class=\"comment\"># print(response.text)</span></span><br><span class=\"line\">        content = response.doc(<span class=\"string\">'div[class=content]'</span>).text()</span><br><span class=\"line\">        print(content)</span><br><span class=\"line\">        user_info = response.doc(<span class=\"string\">'div[class=\"author clearfix\"]'</span>)</span><br><span class=\"line\">        img_src = user_info(<span class=\"string\">'img[src^=\"https://pic.qiushibaike.com/system/avtnew\"]'</span>).attr(<span class=\"string\">'src'</span>)</span><br><span class=\"line\">        user_name = user_info(<span class=\"string\">'a h2'</span>).text()</span><br><span class=\"line\">        self.mkDir(self.base_dir + user_name)</span><br><span class=\"line\"></span><br><span class=\"line\">        print(img_src)</span><br><span class=\"line\">        print(user_name)</span><br><span class=\"line\">        self.crawl(img_src, callback=self.get_user_avatar, save=&#123;<span class=\"string\">'user_name'</span>: user_name&#125;)</span><br><span class=\"line\">        self.saveText(content, self.base_dir + user_name + <span class=\"string\">\"/\"</span> + user_name + <span class=\"string\">\".txt\"</span>)</span><br><span class=\"line\">        content_src = response.doc(<span class=\"string\">'div[class=thumb] img'</span>).attr(<span class=\"string\">'src'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> content_src:</span><br><span class=\"line\">            print(content_src)</span><br><span class=\"line\">            self.crawl(content_src, callback=self.get_content_img, save=&#123;<span class=\"string\">'user_name'</span>: user_name&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @config(priority=2)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_content_img</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        image_name = response.url.split(<span class=\"string\">'/'</span>)[<span class=\"number\">-1</span>]</span><br><span class=\"line\">        user_name = response.save[<span class=\"string\">'user_name'</span>]</span><br><span class=\"line\">        self.saveImg(response.content, self.base_dir + user_name + <span class=\"string\">\"/\"</span> + image_name)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @config(priority=2)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_user_avatar</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        image_name = response.url.split(<span class=\"string\">'/'</span>)[<span class=\"number\">-1</span>]</span><br><span class=\"line\">        user_name = response.save[<span class=\"string\">'user_name'</span>]</span><br><span class=\"line\">        self.saveImg(response.content, self.base_dir + user_name + <span class=\"string\">\"/\"</span> + user_name + <span class=\"string\">\".jpg\"</span>)</span><br></pre></td></tr></table></figure>\n<p>当某个方法需要使用上一个方法的数据时，往self.crawl()函数中添加参数save={‘key’:‘value’}，下一个方法通过response.save[‘key’]就能正确拿到value了。</p>\n","site":{"data":{}},"excerpt":"<h3 id=\"摘要\"><a class=\"header-anchor\" href=\"#摘要\">¶</a>摘要</h3>\n<p>爬取糗事百科的文章，有些文章含有图片，需要把图片也保存下来，同时保存用户的头像，通过用户的昵称来命名文件夹，同一个用户的段子保存在同一个目录下。</p>","more":"<p>下面是具体的爬虫代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pyspider.libs.base_handler <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Handler</span><span class=\"params\">(BaseHandler)</span>:</span></span><br><span class=\"line\">    crawl_config = &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">__init__</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        self.base_dir = <span class=\"string\">\"/Users/lieeber/Downloads/qiushibaike/\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mkDir</span><span class=\"params\">(self, dir_path)</span>:</span></span><br><span class=\"line\">        exists = os.path.exists(dir_path)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> exists:</span><br><span class=\"line\">            os.makedirs(dir_path)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> dir_path</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">saveImg</span><span class=\"params\">(self, content, path)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> open(path, <span class=\"string\">'wb'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(content)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">saveText</span><span class=\"params\">(self, content, path)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">with</span> open(path, <span class=\"string\">'w'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(content)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @every(minutes=15)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">on_start</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, <span class=\"number\">14</span>):</span><br><span class=\"line\">            self.crawl(<span class=\"string\">'https://www.qiushibaike.com/8hr/page'</span> + str(i), callback=self.index_page)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @config(age=10 * 24 * 60 * 60)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">index_page</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        list_article = response.doc(<span class=\"string\">'div[class^=\"article block untagged mb15\"]'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> list_article.items():</span><br><span class=\"line\">            item_article_url = item(<span class=\"string\">'a[class=contentHerf]'</span>).attr.href</span><br><span class=\"line\">            print(item_article_url)</span><br><span class=\"line\">            self.crawl(item_article_url, callback=self.detail_article_page)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @config(priority=2)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">detail_article_page</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        <span class=\"comment\"># print(response.text)</span></span><br><span class=\"line\">        content = response.doc(<span class=\"string\">'div[class=content]'</span>).text()</span><br><span class=\"line\">        print(content)</span><br><span class=\"line\">        user_info = response.doc(<span class=\"string\">'div[class=\"author clearfix\"]'</span>)</span><br><span class=\"line\">        img_src = user_info(<span class=\"string\">'img[src^=\"https://pic.qiushibaike.com/system/avtnew\"]'</span>).attr(<span class=\"string\">'src'</span>)</span><br><span class=\"line\">        user_name = user_info(<span class=\"string\">'a h2'</span>).text()</span><br><span class=\"line\">        self.mkDir(self.base_dir + user_name)</span><br><span class=\"line\"></span><br><span class=\"line\">        print(img_src)</span><br><span class=\"line\">        print(user_name)</span><br><span class=\"line\">        self.crawl(img_src, callback=self.get_user_avatar, save=&#123;<span class=\"string\">'user_name'</span>: user_name&#125;)</span><br><span class=\"line\">        self.saveText(content, self.base_dir + user_name + <span class=\"string\">\"/\"</span> + user_name + <span class=\"string\">\".txt\"</span>)</span><br><span class=\"line\">        content_src = response.doc(<span class=\"string\">'div[class=thumb] img'</span>).attr(<span class=\"string\">'src'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> content_src:</span><br><span class=\"line\">            print(content_src)</span><br><span class=\"line\">            self.crawl(content_src, callback=self.get_content_img, save=&#123;<span class=\"string\">'user_name'</span>: user_name&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @config(priority=2)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_content_img</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        image_name = response.url.split(<span class=\"string\">'/'</span>)[<span class=\"number\">-1</span>]</span><br><span class=\"line\">        user_name = response.save[<span class=\"string\">'user_name'</span>]</span><br><span class=\"line\">        self.saveImg(response.content, self.base_dir + user_name + <span class=\"string\">\"/\"</span> + image_name)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">    @config(priority=2)</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_user_avatar</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        image_name = response.url.split(<span class=\"string\">'/'</span>)[<span class=\"number\">-1</span>]</span><br><span class=\"line\">        user_name = response.save[<span class=\"string\">'user_name'</span>]</span><br><span class=\"line\">        self.saveImg(response.content, self.base_dir + user_name + <span class=\"string\">\"/\"</span> + user_name + <span class=\"string\">\".jpg\"</span>)</span><br></pre></td></tr></table></figure>\n<p>当某个方法需要使用上一个方法的数据时，往self.crawl()函数中添加参数save={‘key’:‘value’}，下一个方法通过response.save[‘key’]就能正确拿到value了。</p>"},{"title":"Scrapy爬取顶点小说","date":"2016-10-13T07:10:00.000Z","_content":"\nscrapy是非常常用的python爬虫框架，使用的异步模式，加快了我们的爬取速度，能大大提高我们的爬虫效率。\n\n### 安装scrapy\n```shell\npip3 install scrapy\n```\n\n<!-- more -->\n\n### 启动pyspider\n安装完成后，在命令行输入\n```shell\n    scrapy startproject XXXXX\n```\n就创建了一个scrapy爬虫工程，我们用pycharm打开这个工程。\n\n<img  align=center src=\"http://image-1252244366.costj.myqcloud.com/scrapy_scrapy_dingdian.png\"/>\n\nentrypoint.py文件是我们自己创建的，是告诉scrapy等下需要爬取哪个文件。\n\n```python\nfrom scrapy.cmdline import execute\nexecute(['scrapy', 'crawl', 'dingdian'])\n```\n在spider目录下面创建dingdian.py。\n\n```python\nimport re\nfrom urllib.parse import urljoin\n\nimport os\nimport scrapy\nfrom pyquery import PyQuery as pq\nfrom scrapy.http import Request\n\nclass Myspider(scrapy.Spider):\n    name = 'dingdian'\n    allowed_domain = ['x23us.com']\n    bash_url = 'http://www.11kt.cn/list/'\n    bashurl = '.html'\n    base_dir = '/Users/lieeber/Downloads/xiaoshuo/'\n\n    def mkDir(self, dir_path):\n        exists = os.path.exists(dir_path)\n        if not exists:\n            os.makedirs(dir_path)\n            return dir_path\n        else:\n            return dir_path\n\n    def start_requests(self):\n        for i in range(1, 11):\n            url = self.bash_url + str(i) + '_1' + self.bashurl\n            yield Request(url, self.parse, meta={'item': i})\n\n    def parse(self, response):\n        doc = pq(response.text)\n        max_num = doc('a[class=last]').text()\n        item = response.meta['item']\n        # print(item)\n\n        for num in range(2, int(max_num) + 1):\n            url = self.bash_url + str(item) + \"_\" + str(num) + \".html\"\n            # print(url)\n            yield Request(url, self.get_name)\n\n    def get_name(self, response):\n        print(response.url)\n        doc = pq(response.text)\n        tds = doc('tr[bgcolor=\"#FFFFFF\"] td:first-child')\n        # print(tds)\n        for td in tds.items():\n            a = td('a')\n            novel_url = a.attr('href')\n            novel_name = a.text()\n            yield Request(novel_url, callback=self.get_chapterurl,\n                          meta={'novelname': novel_name, 'novelurl': novel_url})\n\n    def get_chapterurl(self, response):\n        novel_name = response.meta['novelname']\n        novel_url = response.meta['novelurl']\n        # print(novel_url)\n        # print(novel_name)\n        doc = pq(response.text)\n        # item = DingdianItem()\n        # item['name'] = novel_name\n        # item['novelurl'] = novel_url\n        category = doc('table[id=at] tr:first-child a').eq(0).text()\n        author = doc('table[id=at] tr:first-child td').eq(1).text()\n        novel_index = doc('p[class=btnlinks] a[class=read]').attr('href')\n        # print(novel_index)\n        # print(category)\n        # print(author)\n        # item['category'] = category\n        # item['author'] = author\n        # item['name_id'] = name_id\n        # return item\n\n        yield Request(novel_index, callback=self.get_novel_chapter,\n                      meta={'novelname': novel_name, 'novelurl': novel_url, 'category': category, 'author': author})\n\n    def get_novel_chapter(self, response):\n        novel_url = response.meta['novelurl']\n        novel_name = response.meta['novelname']\n        category = response.meta['category']\n        author = response.meta['author']\n        # print(novel_url)\n        doc = pq(response.text)\n        a_list = doc('tr td[class=L] a')\n        count = 1\n        for a in a_list.items():\n            href = a.attr('href')\n            chapter_title = a.text()\n            # print(href)\n            # print(chapter_title)\n            chapter_url = urljoin(response.url, href)\n            # print(chapter_url)\n            yield Request(chapter_url, callback=self.get_novel_text,\n                          meta={'novelname': novel_name, 'novelurl': novel_url, 'category': category, 'author': author,\n                                'chapter_title': chapter_title, 'count': count})\n            count += 1\n\n    def get_novel_text(self, response):\n        novel_url = response.meta['novelurl']\n        novel_name = response.meta['novelname'].replace('/', '——').strip()\n        category = response.meta['category'].replace('/', '').strip()\n        author = response.meta['author'].replace('/', '').strip()\n        chapter_title = response.meta['chapter_title'].replace('/', '').strip()\n        count = response.meta['count']\n        doc = pq(response.text)\n        contents = doc('dd[id=contents]')\n        contents('span').replace_all('br')\n        # print(contents)\n        aa = contents.text().replace(' ', '')\n\n        dir_path = self.base_dir + \"/\" + category + \"/\" + novel_name + \"_\" + author + \"/\"\n\n        self.mkDir(dir_path)\n\n        with open(dir_path + str(count) + \"、\" + chapter_title + \".txt\", 'w') as f:\n            f.write(aa)\n\n```\n\n代码写完后，运行entrypoint.py文件，就能够开启爬虫了。\n\n<img  align=center src=\"http://image-1252244366.costj.myqcloud.com/scrapy_project_dingdian_result.png\"/>\n\n可以看到，我们已经成功把小说爬取下来了，由于爬取数量太多，只爬取了一小部分。。","source":"_posts/Scrapy爬取顶点小说.md","raw":"---\ntitle: Scrapy爬取顶点小说\ntags:\n  - python\n  - scrapy\n  - 爬虫\ncategories:\n  - 爬虫\ndate: 2016-10-13 15:10:00\n---\n\nscrapy是非常常用的python爬虫框架，使用的异步模式，加快了我们的爬取速度，能大大提高我们的爬虫效率。\n\n### 安装scrapy\n```shell\npip3 install scrapy\n```\n\n<!-- more -->\n\n### 启动pyspider\n安装完成后，在命令行输入\n```shell\n    scrapy startproject XXXXX\n```\n就创建了一个scrapy爬虫工程，我们用pycharm打开这个工程。\n\n<img  align=center src=\"http://image-1252244366.costj.myqcloud.com/scrapy_scrapy_dingdian.png\"/>\n\nentrypoint.py文件是我们自己创建的，是告诉scrapy等下需要爬取哪个文件。\n\n```python\nfrom scrapy.cmdline import execute\nexecute(['scrapy', 'crawl', 'dingdian'])\n```\n在spider目录下面创建dingdian.py。\n\n```python\nimport re\nfrom urllib.parse import urljoin\n\nimport os\nimport scrapy\nfrom pyquery import PyQuery as pq\nfrom scrapy.http import Request\n\nclass Myspider(scrapy.Spider):\n    name = 'dingdian'\n    allowed_domain = ['x23us.com']\n    bash_url = 'http://www.11kt.cn/list/'\n    bashurl = '.html'\n    base_dir = '/Users/lieeber/Downloads/xiaoshuo/'\n\n    def mkDir(self, dir_path):\n        exists = os.path.exists(dir_path)\n        if not exists:\n            os.makedirs(dir_path)\n            return dir_path\n        else:\n            return dir_path\n\n    def start_requests(self):\n        for i in range(1, 11):\n            url = self.bash_url + str(i) + '_1' + self.bashurl\n            yield Request(url, self.parse, meta={'item': i})\n\n    def parse(self, response):\n        doc = pq(response.text)\n        max_num = doc('a[class=last]').text()\n        item = response.meta['item']\n        # print(item)\n\n        for num in range(2, int(max_num) + 1):\n            url = self.bash_url + str(item) + \"_\" + str(num) + \".html\"\n            # print(url)\n            yield Request(url, self.get_name)\n\n    def get_name(self, response):\n        print(response.url)\n        doc = pq(response.text)\n        tds = doc('tr[bgcolor=\"#FFFFFF\"] td:first-child')\n        # print(tds)\n        for td in tds.items():\n            a = td('a')\n            novel_url = a.attr('href')\n            novel_name = a.text()\n            yield Request(novel_url, callback=self.get_chapterurl,\n                          meta={'novelname': novel_name, 'novelurl': novel_url})\n\n    def get_chapterurl(self, response):\n        novel_name = response.meta['novelname']\n        novel_url = response.meta['novelurl']\n        # print(novel_url)\n        # print(novel_name)\n        doc = pq(response.text)\n        # item = DingdianItem()\n        # item['name'] = novel_name\n        # item['novelurl'] = novel_url\n        category = doc('table[id=at] tr:first-child a').eq(0).text()\n        author = doc('table[id=at] tr:first-child td').eq(1).text()\n        novel_index = doc('p[class=btnlinks] a[class=read]').attr('href')\n        # print(novel_index)\n        # print(category)\n        # print(author)\n        # item['category'] = category\n        # item['author'] = author\n        # item['name_id'] = name_id\n        # return item\n\n        yield Request(novel_index, callback=self.get_novel_chapter,\n                      meta={'novelname': novel_name, 'novelurl': novel_url, 'category': category, 'author': author})\n\n    def get_novel_chapter(self, response):\n        novel_url = response.meta['novelurl']\n        novel_name = response.meta['novelname']\n        category = response.meta['category']\n        author = response.meta['author']\n        # print(novel_url)\n        doc = pq(response.text)\n        a_list = doc('tr td[class=L] a')\n        count = 1\n        for a in a_list.items():\n            href = a.attr('href')\n            chapter_title = a.text()\n            # print(href)\n            # print(chapter_title)\n            chapter_url = urljoin(response.url, href)\n            # print(chapter_url)\n            yield Request(chapter_url, callback=self.get_novel_text,\n                          meta={'novelname': novel_name, 'novelurl': novel_url, 'category': category, 'author': author,\n                                'chapter_title': chapter_title, 'count': count})\n            count += 1\n\n    def get_novel_text(self, response):\n        novel_url = response.meta['novelurl']\n        novel_name = response.meta['novelname'].replace('/', '——').strip()\n        category = response.meta['category'].replace('/', '').strip()\n        author = response.meta['author'].replace('/', '').strip()\n        chapter_title = response.meta['chapter_title'].replace('/', '').strip()\n        count = response.meta['count']\n        doc = pq(response.text)\n        contents = doc('dd[id=contents]')\n        contents('span').replace_all('br')\n        # print(contents)\n        aa = contents.text().replace(' ', '')\n\n        dir_path = self.base_dir + \"/\" + category + \"/\" + novel_name + \"_\" + author + \"/\"\n\n        self.mkDir(dir_path)\n\n        with open(dir_path + str(count) + \"、\" + chapter_title + \".txt\", 'w') as f:\n            f.write(aa)\n\n```\n\n代码写完后，运行entrypoint.py文件，就能够开启爬虫了。\n\n<img  align=center src=\"http://image-1252244366.costj.myqcloud.com/scrapy_project_dingdian_result.png\"/>\n\n可以看到，我们已经成功把小说爬取下来了，由于爬取数量太多，只爬取了一小部分。。","slug":"Scrapy爬取顶点小说","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv53u000n58ugxqa329ak","content":"<p>scrapy是非常常用的python爬虫框架，使用的异步模式，加快了我们的爬取速度，能大大提高我们的爬虫效率。</p>\n<h3 id=\"安装scrapy\"><a class=\"header-anchor\" href=\"#安装scrapy\">¶</a>安装scrapy</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install scrapy</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"启动pyspider\"><a class=\"header-anchor\" href=\"#启动pyspider\">¶</a>启动pyspider</h3>\n<p>安装完成后，在命令行输入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scrapy startproject XXXXX</span><br></pre></td></tr></table></figure>\n<p>就创建了一个scrapy爬虫工程，我们用pycharm打开这个工程。</p>\n<img align=\"center\" src=\"http://image-1252244366.costj.myqcloud.com/scrapy_scrapy_dingdian.png\">\n<p>entrypoint.py文件是我们自己创建的，是告诉scrapy等下需要爬取哪个文件。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> scrapy.cmdline <span class=\"keyword\">import</span> execute</span><br><span class=\"line\">execute([<span class=\"string\">'scrapy'</span>, <span class=\"string\">'crawl'</span>, <span class=\"string\">'dingdian'</span>])</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://xn--spiderdingdian-0c7vi81c2hu3f6alob898v4owg.py\" target=\"_blank\" rel=\"noopener\">在spider目录下面创建dingdian.py</a>。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.parse <span class=\"keyword\">import</span> urljoin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> scrapy</span><br><span class=\"line\"><span class=\"keyword\">from</span> pyquery <span class=\"keyword\">import</span> PyQuery <span class=\"keyword\">as</span> pq</span><br><span class=\"line\"><span class=\"keyword\">from</span> scrapy.http <span class=\"keyword\">import</span> Request</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Myspider</span><span class=\"params\">(scrapy.Spider)</span>:</span></span><br><span class=\"line\">    name = <span class=\"string\">'dingdian'</span></span><br><span class=\"line\">    allowed_domain = [<span class=\"string\">'x23us.com'</span>]</span><br><span class=\"line\">    bash_url = <span class=\"string\">'http://www.11kt.cn/list/'</span></span><br><span class=\"line\">    bashurl = <span class=\"string\">'.html'</span></span><br><span class=\"line\">    base_dir = <span class=\"string\">'/Users/lieeber/Downloads/xiaoshuo/'</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mkDir</span><span class=\"params\">(self, dir_path)</span>:</span></span><br><span class=\"line\">        exists = os.path.exists(dir_path)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> exists:</span><br><span class=\"line\">            os.makedirs(dir_path)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> dir_path</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> dir_path</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">start_requests</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, <span class=\"number\">11</span>):</span><br><span class=\"line\">            url = self.bash_url + str(i) + <span class=\"string\">'_1'</span> + self.bashurl</span><br><span class=\"line\">            <span class=\"keyword\">yield</span> Request(url, self.parse, meta=&#123;<span class=\"string\">'item'</span>: i&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">parse</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        doc = pq(response.text)</span><br><span class=\"line\">        max_num = doc(<span class=\"string\">'a[class=last]'</span>).text()</span><br><span class=\"line\">        item = response.meta[<span class=\"string\">'item'</span>]</span><br><span class=\"line\">        <span class=\"comment\"># print(item)</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> range(<span class=\"number\">2</span>, int(max_num) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            url = self.bash_url + str(item) + <span class=\"string\">\"_\"</span> + str(num) + <span class=\"string\">\".html\"</span></span><br><span class=\"line\">            <span class=\"comment\"># print(url)</span></span><br><span class=\"line\">            <span class=\"keyword\">yield</span> Request(url, self.get_name)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_name</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        print(response.url)</span><br><span class=\"line\">        doc = pq(response.text)</span><br><span class=\"line\">        tds = doc(<span class=\"string\">'tr[bgcolor=\"#FFFFFF\"] td:first-child'</span>)</span><br><span class=\"line\">        <span class=\"comment\"># print(tds)</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> td <span class=\"keyword\">in</span> tds.items():</span><br><span class=\"line\">            a = td(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">            novel_url = a.attr(<span class=\"string\">'href'</span>)</span><br><span class=\"line\">            novel_name = a.text()</span><br><span class=\"line\">            <span class=\"keyword\">yield</span> Request(novel_url, callback=self.get_chapterurl,</span><br><span class=\"line\">                          meta=&#123;<span class=\"string\">'novelname'</span>: novel_name, <span class=\"string\">'novelurl'</span>: novel_url&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_chapterurl</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        novel_name = response.meta[<span class=\"string\">'novelname'</span>]</span><br><span class=\"line\">        novel_url = response.meta[<span class=\"string\">'novelurl'</span>]</span><br><span class=\"line\">        <span class=\"comment\"># print(novel_url)</span></span><br><span class=\"line\">        <span class=\"comment\"># print(novel_name)</span></span><br><span class=\"line\">        doc = pq(response.text)</span><br><span class=\"line\">        <span class=\"comment\"># item = DingdianItem()</span></span><br><span class=\"line\">        <span class=\"comment\"># item['name'] = novel_name</span></span><br><span class=\"line\">        <span class=\"comment\"># item['novelurl'] = novel_url</span></span><br><span class=\"line\">        category = doc(<span class=\"string\">'table[id=at] tr:first-child a'</span>).eq(<span class=\"number\">0</span>).text()</span><br><span class=\"line\">        author = doc(<span class=\"string\">'table[id=at] tr:first-child td'</span>).eq(<span class=\"number\">1</span>).text()</span><br><span class=\"line\">        novel_index = doc(<span class=\"string\">'p[class=btnlinks] a[class=read]'</span>).attr(<span class=\"string\">'href'</span>)</span><br><span class=\"line\">        <span class=\"comment\"># print(novel_index)</span></span><br><span class=\"line\">        <span class=\"comment\"># print(category)</span></span><br><span class=\"line\">        <span class=\"comment\"># print(author)</span></span><br><span class=\"line\">        <span class=\"comment\"># item['category'] = category</span></span><br><span class=\"line\">        <span class=\"comment\"># item['author'] = author</span></span><br><span class=\"line\">        <span class=\"comment\"># item['name_id'] = name_id</span></span><br><span class=\"line\">        <span class=\"comment\"># return item</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">yield</span> Request(novel_index, callback=self.get_novel_chapter,</span><br><span class=\"line\">                      meta=&#123;<span class=\"string\">'novelname'</span>: novel_name, <span class=\"string\">'novelurl'</span>: novel_url, <span class=\"string\">'category'</span>: category, <span class=\"string\">'author'</span>: author&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_novel_chapter</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        novel_url = response.meta[<span class=\"string\">'novelurl'</span>]</span><br><span class=\"line\">        novel_name = response.meta[<span class=\"string\">'novelname'</span>]</span><br><span class=\"line\">        category = response.meta[<span class=\"string\">'category'</span>]</span><br><span class=\"line\">        author = response.meta[<span class=\"string\">'author'</span>]</span><br><span class=\"line\">        <span class=\"comment\"># print(novel_url)</span></span><br><span class=\"line\">        doc = pq(response.text)</span><br><span class=\"line\">        a_list = doc(<span class=\"string\">'tr td[class=L] a'</span>)</span><br><span class=\"line\">        count = <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> a <span class=\"keyword\">in</span> a_list.items():</span><br><span class=\"line\">            href = a.attr(<span class=\"string\">'href'</span>)</span><br><span class=\"line\">            chapter_title = a.text()</span><br><span class=\"line\">            <span class=\"comment\"># print(href)</span></span><br><span class=\"line\">            <span class=\"comment\"># print(chapter_title)</span></span><br><span class=\"line\">            chapter_url = urljoin(response.url, href)</span><br><span class=\"line\">            <span class=\"comment\"># print(chapter_url)</span></span><br><span class=\"line\">            <span class=\"keyword\">yield</span> Request(chapter_url, callback=self.get_novel_text,</span><br><span class=\"line\">                          meta=&#123;<span class=\"string\">'novelname'</span>: novel_name, <span class=\"string\">'novelurl'</span>: novel_url, <span class=\"string\">'category'</span>: category, <span class=\"string\">'author'</span>: author,</span><br><span class=\"line\">                                <span class=\"string\">'chapter_title'</span>: chapter_title, <span class=\"string\">'count'</span>: count&#125;)</span><br><span class=\"line\">            count += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_novel_text</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        novel_url = response.meta[<span class=\"string\">'novelurl'</span>]</span><br><span class=\"line\">        novel_name = response.meta[<span class=\"string\">'novelname'</span>].replace(<span class=\"string\">'/'</span>, <span class=\"string\">'——'</span>).strip()</span><br><span class=\"line\">        category = response.meta[<span class=\"string\">'category'</span>].replace(<span class=\"string\">'/'</span>, <span class=\"string\">''</span>).strip()</span><br><span class=\"line\">        author = response.meta[<span class=\"string\">'author'</span>].replace(<span class=\"string\">'/'</span>, <span class=\"string\">''</span>).strip()</span><br><span class=\"line\">        chapter_title = response.meta[<span class=\"string\">'chapter_title'</span>].replace(<span class=\"string\">'/'</span>, <span class=\"string\">''</span>).strip()</span><br><span class=\"line\">        count = response.meta[<span class=\"string\">'count'</span>]</span><br><span class=\"line\">        doc = pq(response.text)</span><br><span class=\"line\">        contents = doc(<span class=\"string\">'dd[id=contents]'</span>)</span><br><span class=\"line\">        contents(<span class=\"string\">'span'</span>).replace_all(<span class=\"string\">'br'</span>)</span><br><span class=\"line\">        <span class=\"comment\"># print(contents)</span></span><br><span class=\"line\">        aa = contents.text().replace(<span class=\"string\">' '</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        dir_path = self.base_dir + <span class=\"string\">\"/\"</span> + category + <span class=\"string\">\"/\"</span> + novel_name + <span class=\"string\">\"_\"</span> + author + <span class=\"string\">\"/\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.mkDir(dir_path)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">with</span> open(dir_path + str(count) + <span class=\"string\">\"、\"</span> + chapter_title + <span class=\"string\">\".txt\"</span>, <span class=\"string\">'w'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(aa)</span><br></pre></td></tr></table></figure>\n<p>代码写完后，运行entrypoint.py文件，就能够开启爬虫了。</p>\n<img align=\"center\" src=\"http://image-1252244366.costj.myqcloud.com/scrapy_project_dingdian_result.png\">\n<p>可以看到，我们已经成功把小说爬取下来了，由于爬取数量太多，只爬取了一小部分。。</p>\n","site":{"data":{}},"excerpt":"<p>scrapy是非常常用的python爬虫框架，使用的异步模式，加快了我们的爬取速度，能大大提高我们的爬虫效率。</p>\n<h3 id=\"安装scrapy\"><a class=\"header-anchor\" href=\"#安装scrapy\">¶</a>安装scrapy</h3>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip3 install scrapy</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"启动pyspider\"><a class=\"header-anchor\" href=\"#启动pyspider\">¶</a>启动pyspider</h3>\n<p>安装完成后，在命令行输入</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scrapy startproject XXXXX</span><br></pre></td></tr></table></figure>\n<p>就创建了一个scrapy爬虫工程，我们用pycharm打开这个工程。</p>\n<img align=\"center\" src=\"http://image-1252244366.costj.myqcloud.com/scrapy_scrapy_dingdian.png\">\n<p>entrypoint.py文件是我们自己创建的，是告诉scrapy等下需要爬取哪个文件。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> scrapy.cmdline <span class=\"keyword\">import</span> execute</span><br><span class=\"line\">execute([<span class=\"string\">'scrapy'</span>, <span class=\"string\">'crawl'</span>, <span class=\"string\">'dingdian'</span>])</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://xn--spiderdingdian-0c7vi81c2hu3f6alob898v4owg.py\" target=\"_blank\" rel=\"noopener\">在spider目录下面创建dingdian.py</a>。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">from</span> urllib.parse <span class=\"keyword\">import</span> urljoin</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> scrapy</span><br><span class=\"line\"><span class=\"keyword\">from</span> pyquery <span class=\"keyword\">import</span> PyQuery <span class=\"keyword\">as</span> pq</span><br><span class=\"line\"><span class=\"keyword\">from</span> scrapy.http <span class=\"keyword\">import</span> Request</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Myspider</span><span class=\"params\">(scrapy.Spider)</span>:</span></span><br><span class=\"line\">    name = <span class=\"string\">'dingdian'</span></span><br><span class=\"line\">    allowed_domain = [<span class=\"string\">'x23us.com'</span>]</span><br><span class=\"line\">    bash_url = <span class=\"string\">'http://www.11kt.cn/list/'</span></span><br><span class=\"line\">    bashurl = <span class=\"string\">'.html'</span></span><br><span class=\"line\">    base_dir = <span class=\"string\">'/Users/lieeber/Downloads/xiaoshuo/'</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">mkDir</span><span class=\"params\">(self, dir_path)</span>:</span></span><br><span class=\"line\">        exists = os.path.exists(dir_path)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> exists:</span><br><span class=\"line\">            os.makedirs(dir_path)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> dir_path</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> dir_path</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">start_requests</span><span class=\"params\">(self)</span>:</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>, <span class=\"number\">11</span>):</span><br><span class=\"line\">            url = self.bash_url + str(i) + <span class=\"string\">'_1'</span> + self.bashurl</span><br><span class=\"line\">            <span class=\"keyword\">yield</span> Request(url, self.parse, meta=&#123;<span class=\"string\">'item'</span>: i&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">parse</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        doc = pq(response.text)</span><br><span class=\"line\">        max_num = doc(<span class=\"string\">'a[class=last]'</span>).text()</span><br><span class=\"line\">        item = response.meta[<span class=\"string\">'item'</span>]</span><br><span class=\"line\">        <span class=\"comment\"># print(item)</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">for</span> num <span class=\"keyword\">in</span> range(<span class=\"number\">2</span>, int(max_num) + <span class=\"number\">1</span>):</span><br><span class=\"line\">            url = self.bash_url + str(item) + <span class=\"string\">\"_\"</span> + str(num) + <span class=\"string\">\".html\"</span></span><br><span class=\"line\">            <span class=\"comment\"># print(url)</span></span><br><span class=\"line\">            <span class=\"keyword\">yield</span> Request(url, self.get_name)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_name</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        print(response.url)</span><br><span class=\"line\">        doc = pq(response.text)</span><br><span class=\"line\">        tds = doc(<span class=\"string\">'tr[bgcolor=\"#FFFFFF\"] td:first-child'</span>)</span><br><span class=\"line\">        <span class=\"comment\"># print(tds)</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> td <span class=\"keyword\">in</span> tds.items():</span><br><span class=\"line\">            a = td(<span class=\"string\">'a'</span>)</span><br><span class=\"line\">            novel_url = a.attr(<span class=\"string\">'href'</span>)</span><br><span class=\"line\">            novel_name = a.text()</span><br><span class=\"line\">            <span class=\"keyword\">yield</span> Request(novel_url, callback=self.get_chapterurl,</span><br><span class=\"line\">                          meta=&#123;<span class=\"string\">'novelname'</span>: novel_name, <span class=\"string\">'novelurl'</span>: novel_url&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_chapterurl</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        novel_name = response.meta[<span class=\"string\">'novelname'</span>]</span><br><span class=\"line\">        novel_url = response.meta[<span class=\"string\">'novelurl'</span>]</span><br><span class=\"line\">        <span class=\"comment\"># print(novel_url)</span></span><br><span class=\"line\">        <span class=\"comment\"># print(novel_name)</span></span><br><span class=\"line\">        doc = pq(response.text)</span><br><span class=\"line\">        <span class=\"comment\"># item = DingdianItem()</span></span><br><span class=\"line\">        <span class=\"comment\"># item['name'] = novel_name</span></span><br><span class=\"line\">        <span class=\"comment\"># item['novelurl'] = novel_url</span></span><br><span class=\"line\">        category = doc(<span class=\"string\">'table[id=at] tr:first-child a'</span>).eq(<span class=\"number\">0</span>).text()</span><br><span class=\"line\">        author = doc(<span class=\"string\">'table[id=at] tr:first-child td'</span>).eq(<span class=\"number\">1</span>).text()</span><br><span class=\"line\">        novel_index = doc(<span class=\"string\">'p[class=btnlinks] a[class=read]'</span>).attr(<span class=\"string\">'href'</span>)</span><br><span class=\"line\">        <span class=\"comment\"># print(novel_index)</span></span><br><span class=\"line\">        <span class=\"comment\"># print(category)</span></span><br><span class=\"line\">        <span class=\"comment\"># print(author)</span></span><br><span class=\"line\">        <span class=\"comment\"># item['category'] = category</span></span><br><span class=\"line\">        <span class=\"comment\"># item['author'] = author</span></span><br><span class=\"line\">        <span class=\"comment\"># item['name_id'] = name_id</span></span><br><span class=\"line\">        <span class=\"comment\"># return item</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">yield</span> Request(novel_index, callback=self.get_novel_chapter,</span><br><span class=\"line\">                      meta=&#123;<span class=\"string\">'novelname'</span>: novel_name, <span class=\"string\">'novelurl'</span>: novel_url, <span class=\"string\">'category'</span>: category, <span class=\"string\">'author'</span>: author&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_novel_chapter</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        novel_url = response.meta[<span class=\"string\">'novelurl'</span>]</span><br><span class=\"line\">        novel_name = response.meta[<span class=\"string\">'novelname'</span>]</span><br><span class=\"line\">        category = response.meta[<span class=\"string\">'category'</span>]</span><br><span class=\"line\">        author = response.meta[<span class=\"string\">'author'</span>]</span><br><span class=\"line\">        <span class=\"comment\"># print(novel_url)</span></span><br><span class=\"line\">        doc = pq(response.text)</span><br><span class=\"line\">        a_list = doc(<span class=\"string\">'tr td[class=L] a'</span>)</span><br><span class=\"line\">        count = <span class=\"number\">1</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> a <span class=\"keyword\">in</span> a_list.items():</span><br><span class=\"line\">            href = a.attr(<span class=\"string\">'href'</span>)</span><br><span class=\"line\">            chapter_title = a.text()</span><br><span class=\"line\">            <span class=\"comment\"># print(href)</span></span><br><span class=\"line\">            <span class=\"comment\"># print(chapter_title)</span></span><br><span class=\"line\">            chapter_url = urljoin(response.url, href)</span><br><span class=\"line\">            <span class=\"comment\"># print(chapter_url)</span></span><br><span class=\"line\">            <span class=\"keyword\">yield</span> Request(chapter_url, callback=self.get_novel_text,</span><br><span class=\"line\">                          meta=&#123;<span class=\"string\">'novelname'</span>: novel_name, <span class=\"string\">'novelurl'</span>: novel_url, <span class=\"string\">'category'</span>: category, <span class=\"string\">'author'</span>: author,</span><br><span class=\"line\">                                <span class=\"string\">'chapter_title'</span>: chapter_title, <span class=\"string\">'count'</span>: count&#125;)</span><br><span class=\"line\">            count += <span class=\"number\">1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">get_novel_text</span><span class=\"params\">(self, response)</span>:</span></span><br><span class=\"line\">        novel_url = response.meta[<span class=\"string\">'novelurl'</span>]</span><br><span class=\"line\">        novel_name = response.meta[<span class=\"string\">'novelname'</span>].replace(<span class=\"string\">'/'</span>, <span class=\"string\">'——'</span>).strip()</span><br><span class=\"line\">        category = response.meta[<span class=\"string\">'category'</span>].replace(<span class=\"string\">'/'</span>, <span class=\"string\">''</span>).strip()</span><br><span class=\"line\">        author = response.meta[<span class=\"string\">'author'</span>].replace(<span class=\"string\">'/'</span>, <span class=\"string\">''</span>).strip()</span><br><span class=\"line\">        chapter_title = response.meta[<span class=\"string\">'chapter_title'</span>].replace(<span class=\"string\">'/'</span>, <span class=\"string\">''</span>).strip()</span><br><span class=\"line\">        count = response.meta[<span class=\"string\">'count'</span>]</span><br><span class=\"line\">        doc = pq(response.text)</span><br><span class=\"line\">        contents = doc(<span class=\"string\">'dd[id=contents]'</span>)</span><br><span class=\"line\">        contents(<span class=\"string\">'span'</span>).replace_all(<span class=\"string\">'br'</span>)</span><br><span class=\"line\">        <span class=\"comment\"># print(contents)</span></span><br><span class=\"line\">        aa = contents.text().replace(<span class=\"string\">' '</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        dir_path = self.base_dir + <span class=\"string\">\"/\"</span> + category + <span class=\"string\">\"/\"</span> + novel_name + <span class=\"string\">\"_\"</span> + author + <span class=\"string\">\"/\"</span></span><br><span class=\"line\"></span><br><span class=\"line\">        self.mkDir(dir_path)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">with</span> open(dir_path + str(count) + <span class=\"string\">\"、\"</span> + chapter_title + <span class=\"string\">\".txt\"</span>, <span class=\"string\">'w'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            f.write(aa)</span><br></pre></td></tr></table></figure>\n<p>代码写完后，运行entrypoint.py文件，就能够开启爬虫了。</p>\n<img align=\"center\" src=\"http://image-1252244366.costj.myqcloud.com/scrapy_project_dingdian_result.png\">\n<p>可以看到，我们已经成功把小说爬取下来了，由于爬取数量太多，只爬取了一小部分。。</p>"},{"title":"博客搭建完成，记录一下。","date":"2016-01-21T04:39:04.000Z","_content":"\n&emsp;&emsp;一直想搭建一个自己心仪的博客系统，把自己零散的知识系统给整理一下。可惜总是觉得网上的模板太丑而没有下手。学习过很多次自定义控件，学了又忘，忘了再学，遥遥无期。因此搭建一个博客，构建自己的知识体系，非常具有必要性。\n\n&emsp;&emsp;花了一天时间，使用hexo配上next主题，搭建了自己喜欢的博客。简单记录一下搭建的过程。\n\n<!-- more -->\n\n## 环境配置\n\n>- 安装node，直接去[<font color=#0099ff>node官网</font>](https://nodejs.org/en/)官网下载安装即可，安装后就可以在终端使用npm命令了。\n>- 安装git。\n>- 在github上创建仓库：github.youtname.io\n\n## 安装hexo\n\n在电脑上选择一个文件夹，打开终端进入到该文件夹目录下\n\n``` \nsudo npm install -g hexo \n \nhexo init \n\nhexo generate\n\nhexo server\n\n```\n通过以上步骤，在本地已经启动了一个博客服务了，在浏览器中输入[<font color=#0099ff>localhost:4000</font>](localhost:4000)即可看到\n\n## 将博客发布到github\n\n打开初始化hexo的目录，打开文件_config.yml，在文件底部加入\n```\n    deploy:\n      type: git\n      repo: https://github.com/yourname/yourname.github.io.git\n      branch: master\n```\n然后再终端输入命令：\n\n``` \nhexo generate\n\nhexo deploy\n```\n代码就会自动帮你push到你的github中的yournname.github.io工程下面，通过网址yourname.github.io就可以顺利访问了。\n\n## 主题更换\n\nhexo默认使用主题landscape，需要替换成next主题，通过[<font color=#0099ff>next官网</font>](http://theme-next.iissnan.com/)提供的操作步骤，即可进行主题替换。\n\n## 跨PC操作\n\n建议把初始化hexo博客文件夹下的代码上传到github，当需要去其他pc上操作博客的时候，拉取代码，使用hexo的命令进行编译即可。\n\n","source":"_posts/博客搭建完成，记录一下步骤.md","raw":"---\ntitle: 博客搭建完成，记录一下。\ntags:\n  - Hexo\ncategories:\n  - 博客\ndate: 2016-01-21 12:39:04\n---\n\n&emsp;&emsp;一直想搭建一个自己心仪的博客系统，把自己零散的知识系统给整理一下。可惜总是觉得网上的模板太丑而没有下手。学习过很多次自定义控件，学了又忘，忘了再学，遥遥无期。因此搭建一个博客，构建自己的知识体系，非常具有必要性。\n\n&emsp;&emsp;花了一天时间，使用hexo配上next主题，搭建了自己喜欢的博客。简单记录一下搭建的过程。\n\n<!-- more -->\n\n## 环境配置\n\n>- 安装node，直接去[<font color=#0099ff>node官网</font>](https://nodejs.org/en/)官网下载安装即可，安装后就可以在终端使用npm命令了。\n>- 安装git。\n>- 在github上创建仓库：github.youtname.io\n\n## 安装hexo\n\n在电脑上选择一个文件夹，打开终端进入到该文件夹目录下\n\n``` \nsudo npm install -g hexo \n \nhexo init \n\nhexo generate\n\nhexo server\n\n```\n通过以上步骤，在本地已经启动了一个博客服务了，在浏览器中输入[<font color=#0099ff>localhost:4000</font>](localhost:4000)即可看到\n\n## 将博客发布到github\n\n打开初始化hexo的目录，打开文件_config.yml，在文件底部加入\n```\n    deploy:\n      type: git\n      repo: https://github.com/yourname/yourname.github.io.git\n      branch: master\n```\n然后再终端输入命令：\n\n``` \nhexo generate\n\nhexo deploy\n```\n代码就会自动帮你push到你的github中的yournname.github.io工程下面，通过网址yourname.github.io就可以顺利访问了。\n\n## 主题更换\n\nhexo默认使用主题landscape，需要替换成next主题，通过[<font color=#0099ff>next官网</font>](http://theme-next.iissnan.com/)提供的操作步骤，即可进行主题替换。\n\n## 跨PC操作\n\n建议把初始化hexo博客文件夹下的代码上传到github，当需要去其他pc上操作博客的时候，拉取代码，使用hexo的命令进行编译即可。\n\n","slug":"博客搭建完成，记录一下步骤","published":1,"updated":"2018-06-26T16:09:44.520Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv53v000p58ug5ylsr3ou","content":"<p>  一直想搭建一个自己心仪的博客系统，把自己零散的知识系统给整理一下。可惜总是觉得网上的模板太丑而没有下手。学习过很多次自定义控件，学了又忘，忘了再学，遥遥无期。因此搭建一个博客，构建自己的知识体系，非常具有必要性。</p>\n<p>  花了一天时间，使用hexo配上next主题，搭建了自己喜欢的博客。简单记录一下搭建的过程。</p>\n<a id=\"more\"></a>\n<h2 id=\"环境配置\"><a class=\"header-anchor\" href=\"#环境配置\">¶</a>环境配置</h2>\n<blockquote>\n<ul>\n<li>安装node，直接去<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\"><font color=\"#0099ff\">node官网</font></a>官网下载安装即可，安装后就可以在终端使用npm命令了。</li>\n<li>安装git。</li>\n<li>在github上创建仓库：<a href=\"http://github.youtname.io\" target=\"_blank\" rel=\"noopener\">github.youtname.io</a></li>\n</ul>\n</blockquote>\n<h2 id=\"安装hexo\"><a class=\"header-anchor\" href=\"#安装hexo\">¶</a>安装hexo</h2>\n<p>在电脑上选择一个文件夹，打开终端进入到该文件夹目录下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install -g hexo </span><br><span class=\"line\"> </span><br><span class=\"line\">hexo init </span><br><span class=\"line\"></span><br><span class=\"line\">hexo generate</span><br><span class=\"line\"></span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<p>通过以上步骤，在本地已经启动了一个博客服务了，在浏览器中输入<a href=\"localhost:4000\" target=\"_blank\" rel=\"noopener\"><font color=\"#0099ff\">localhost:4000</font></a>即可看到</p>\n<h2 id=\"将博客发布到github\"><a class=\"header-anchor\" href=\"#将博客发布到github\">¶</a>将博客发布到github</h2>\n<p>打开初始化hexo的目录，打开文件_config.yml，在文件底部加入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/yourname/yourname.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>然后再终端输入命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\"></span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<p>代码就会自动帮你push到你的github中的yournname.github.io工程下面，通过网址yourname.github.io就可以顺利访问了。</p>\n<h2 id=\"主题更换\"><a class=\"header-anchor\" href=\"#主题更换\">¶</a>主题更换</h2>\n<p>hexo默认使用主题landscape，需要替换成next主题，通过<a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\"><font color=\"#0099ff\">next官网</font></a>提供的操作步骤，即可进行主题替换。</p>\n<h2 id=\"跨pc操作\"><a class=\"header-anchor\" href=\"#跨pc操作\">¶</a>跨PC操作</h2>\n<p>建议把初始化hexo博客文件夹下的代码上传到github，当需要去其他pc上操作博客的时候，拉取代码，使用hexo的命令进行编译即可。</p>\n","site":{"data":{}},"excerpt":"<p>  一直想搭建一个自己心仪的博客系统，把自己零散的知识系统给整理一下。可惜总是觉得网上的模板太丑而没有下手。学习过很多次自定义控件，学了又忘，忘了再学，遥遥无期。因此搭建一个博客，构建自己的知识体系，非常具有必要性。</p>\n<p>  花了一天时间，使用hexo配上next主题，搭建了自己喜欢的博客。简单记录一下搭建的过程。</p>","more":"<h2 id=\"环境配置\"><a class=\"header-anchor\" href=\"#环境配置\">¶</a>环境配置</h2>\n<blockquote>\n<ul>\n<li>安装node，直接去<a href=\"https://nodejs.org/en/\" target=\"_blank\" rel=\"noopener\"><font color=\"#0099ff\">node官网</font></a>官网下载安装即可，安装后就可以在终端使用npm命令了。</li>\n<li>安装git。</li>\n<li>在github上创建仓库：<a href=\"http://github.youtname.io\" target=\"_blank\" rel=\"noopener\">github.youtname.io</a></li>\n</ul>\n</blockquote>\n<h2 id=\"安装hexo\"><a class=\"header-anchor\" href=\"#安装hexo\">¶</a>安装hexo</h2>\n<p>在电脑上选择一个文件夹，打开终端进入到该文件夹目录下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo npm install -g hexo </span><br><span class=\"line\"> </span><br><span class=\"line\">hexo init </span><br><span class=\"line\"></span><br><span class=\"line\">hexo generate</span><br><span class=\"line\"></span><br><span class=\"line\">hexo server</span><br></pre></td></tr></table></figure>\n<p>通过以上步骤，在本地已经启动了一个博客服务了，在浏览器中输入<a href=\"localhost:4000\" target=\"_blank\" rel=\"noopener\"><font color=\"#0099ff\">localhost:4000</font></a>即可看到</p>\n<h2 id=\"将博客发布到github\"><a class=\"header-anchor\" href=\"#将博客发布到github\">¶</a>将博客发布到github</h2>\n<p>打开初始化hexo的目录，打开文件_config.yml，在文件底部加入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/yourname/yourname.github.io.git</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n<p>然后再终端输入命令：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo generate</span><br><span class=\"line\"></span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n<p>代码就会自动帮你push到你的github中的yournname.github.io工程下面，通过网址yourname.github.io就可以顺利访问了。</p>\n<h2 id=\"主题更换\"><a class=\"header-anchor\" href=\"#主题更换\">¶</a>主题更换</h2>\n<p>hexo默认使用主题landscape，需要替换成next主题，通过<a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"noopener\"><font color=\"#0099ff\">next官网</font></a>提供的操作步骤，即可进行主题替换。</p>\n<h2 id=\"跨pc操作\"><a class=\"header-anchor\" href=\"#跨pc操作\">¶</a>跨PC操作</h2>\n<p>建议把初始化hexo博客文件夹下的代码上传到github，当需要去其他pc上操作博客的时候，拉取代码，使用hexo的命令进行编译即可。</p>"},{"title":"串","date":"2017-06-05T14:22:15.000Z","_content":"\n* 串是有零个或多个字符组成的有限序列，又名叫字符串。\n* 零个字符的串称为空串\n* ASCII码：8位2进制数表示一个字符\n* Unicode码：由16位2进制数表示一个字符\n<!-- more -->\n* 比较两个字符串的大小\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsok4h0nyxj211u09wtej.jpg)\n* 串的存储结构\n    * 串的顺序存储结构\n        * 串的顺序存储结构是用一组地址连续的存储单元来存储串中的字符序列的，按照预定义的大小，为每个定义的串变量分配一个固定长度的存储区。一般是用定长数组来定义。\n    * 串的链式存储结构\n        * 一个结点可以存放一个字符，也可以存放多个字符，最后一个结点若未被占满时，可以用“#”或其他非串值字符来补全。\n        * 串的链式存储结构除了在连接串与串操作时有一定的方便之外，总的来说不如顺序存储灵活，性能也不如顺序存储结构好。\n* 朴素的模式匹配算法\n    *  对主串的每一个字符作为子串开头，与要匹配的字符串进行匹配。对主串做大循环，每个字符开头做要匹配字符串的长度的小循环，知道匹配成功或全部遍历完成为止。\n    * 这种模式匹配算法太低效了。\n* KMP模式匹配算法\n* 总结\n    * 串是有零个或多个字符组成的有限序列，又名字符串。本子上，它是一种线性表的扩展，但相对于线性表关注一个个元素来说，我们队串这种结构更多的是关注它子串的应用问题，如查找，替换等操作。","source":"_posts/数据结构-串.md","raw":"---\ntitle: 串\ntags:\n  - 串\n  - 数据结构\ncategories:\n  - 数据结构\ndate: 2017-06-05 22:22:15\n---\n\n* 串是有零个或多个字符组成的有限序列，又名叫字符串。\n* 零个字符的串称为空串\n* ASCII码：8位2进制数表示一个字符\n* Unicode码：由16位2进制数表示一个字符\n<!-- more -->\n* 比较两个字符串的大小\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsok4h0nyxj211u09wtej.jpg)\n* 串的存储结构\n    * 串的顺序存储结构\n        * 串的顺序存储结构是用一组地址连续的存储单元来存储串中的字符序列的，按照预定义的大小，为每个定义的串变量分配一个固定长度的存储区。一般是用定长数组来定义。\n    * 串的链式存储结构\n        * 一个结点可以存放一个字符，也可以存放多个字符，最后一个结点若未被占满时，可以用“#”或其他非串值字符来补全。\n        * 串的链式存储结构除了在连接串与串操作时有一定的方便之外，总的来说不如顺序存储灵活，性能也不如顺序存储结构好。\n* 朴素的模式匹配算法\n    *  对主串的每一个字符作为子串开头，与要匹配的字符串进行匹配。对主串做大循环，每个字符开头做要匹配字符串的长度的小循环，知道匹配成功或全部遍历完成为止。\n    * 这种模式匹配算法太低效了。\n* KMP模式匹配算法\n* 总结\n    * 串是有零个或多个字符组成的有限序列，又名字符串。本子上，它是一种线性表的扩展，但相对于线性表关注一个个元素来说，我们队串这种结构更多的是关注它子串的应用问题，如查找，替换等操作。","slug":"数据结构-串","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv53w000t58ugtlxvo5ui","content":"<ul>\n<li>串是有零个或多个字符组成的有限序列，又名叫字符串。</li>\n<li>零个字符的串称为空串</li>\n<li>ASCII码：8位2进制数表示一个字符</li>\n<li>Unicode码：由16位2进制数表示一个字符</li>\n</ul>\n<a id=\"more\"></a>\n<ul>\n<li>比较两个字符串的大小\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsok4h0nyxj211u09wtej.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>串的存储结构\n<ul>\n<li>串的顺序存储结构\n<ul>\n<li>串的顺序存储结构是用一组地址连续的存储单元来存储串中的字符序列的，按照预定义的大小，为每个定义的串变量分配一个固定长度的存储区。一般是用定长数组来定义。</li>\n</ul>\n</li>\n<li>串的链式存储结构\n<ul>\n<li>一个结点可以存放一个字符，也可以存放多个字符，最后一个结点若未被占满时，可以用“#”或其他非串值字符来补全。</li>\n<li>串的链式存储结构除了在连接串与串操作时有一定的方便之外，总的来说不如顺序存储灵活，性能也不如顺序存储结构好。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>朴素的模式匹配算法\n<ul>\n<li>对主串的每一个字符作为子串开头，与要匹配的字符串进行匹配。对主串做大循环，每个字符开头做要匹配字符串的长度的小循环，知道匹配成功或全部遍历完成为止。</li>\n<li>这种模式匹配算法太低效了。</li>\n</ul>\n</li>\n<li>KMP模式匹配算法</li>\n<li>总结\n<ul>\n<li>串是有零个或多个字符组成的有限序列，又名字符串。本子上，它是一种线性表的扩展，但相对于线性表关注一个个元素来说，我们队串这种结构更多的是关注它子串的应用问题，如查找，替换等操作。</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<ul>\n<li>串是有零个或多个字符组成的有限序列，又名叫字符串。</li>\n<li>零个字符的串称为空串</li>\n<li>ASCII码：8位2进制数表示一个字符</li>\n<li>Unicode码：由16位2进制数表示一个字符</li>\n</ul>","more":"<ul>\n<li>比较两个字符串的大小\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsok4h0nyxj211u09wtej.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>串的存储结构\n<ul>\n<li>串的顺序存储结构\n<ul>\n<li>串的顺序存储结构是用一组地址连续的存储单元来存储串中的字符序列的，按照预定义的大小，为每个定义的串变量分配一个固定长度的存储区。一般是用定长数组来定义。</li>\n</ul>\n</li>\n<li>串的链式存储结构\n<ul>\n<li>一个结点可以存放一个字符，也可以存放多个字符，最后一个结点若未被占满时，可以用“#”或其他非串值字符来补全。</li>\n<li>串的链式存储结构除了在连接串与串操作时有一定的方便之外，总的来说不如顺序存储灵活，性能也不如顺序存储结构好。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>朴素的模式匹配算法\n<ul>\n<li>对主串的每一个字符作为子串开头，与要匹配的字符串进行匹配。对主串做大循环，每个字符开头做要匹配字符串的长度的小循环，知道匹配成功或全部遍历完成为止。</li>\n<li>这种模式匹配算法太低效了。</li>\n</ul>\n</li>\n<li>KMP模式匹配算法</li>\n<li>总结\n<ul>\n<li>串是有零个或多个字符组成的有限序列，又名字符串。本子上，它是一种线性表的扩展，但相对于线性表关注一个个元素来说，我们队串这种结构更多的是关注它子串的应用问题，如查找，替换等操作。</li>\n</ul>\n</li>\n</ul>"},{"title":"后缀表达式实现四则运算","date":"2017-06-08T07:20:00.000Z","_content":"\n### 摘要\n\n使用后缀表达式来实现四则运算\n<!-- more -->\n\n代码：\n\n```python\nimport re\n\ndef method(arithmetic):\n    try:\n        dict = {'+': 0, \"-\": 0, '*': 1, '/': 1, '(': 2, ')': 3}\n        my_list = []\n        arithmetic = arithmetic.replace(' ', '')\n        stack = []\n        all_list = []\n        for i in arithmetic:\n            if re.match('\\d+\\.\\d*|\\.|\\d*', i).group() and len(all_list) > 0 and re.match('\\d+\\.\\d*|\\.|\\d*', all_list[\n                        len(all_list) - 1]).group():\n                a = all_list.pop()\n                all_list.append(a + i)\n            else:\n                all_list.append(i)\n        # print(all_list)\n        for i in all_list:\n            if re.match(r'\\d', i):\n                my_list.append(i)\n            else:\n                if len(stack) == 0:\n                    stack.append(i)\n                else:\n                    top = stack.pop()\n                    priority_top = dict[top]\n                    priority_i = dict[i]\n                    if priority_i == 2 or priority_top == 2:\n                        stack.append(top)\n                        stack.append(i)\n                    elif priority_i == 3:\n                        my_list.append(top)\n                        while len(stack) != 0:\n                            aa = stack.pop()\n                            if dict[aa] != 2:\n                                my_list.append(aa)\n                            else:\n                                break\n                    elif priority_i >= priority_top:\n                        stack.append(top)\n                        stack.append(i)\n                    elif priority_i < priority_top:\n                        my_list.append(top)\n                        while len(stack) != 0:\n                            aa = stack.pop()\n                            priority_aa = dict[aa]\n                            if priority_i > priority_aa:\n                                my_list.append(aa)\n                            else:\n                                stack.append(aa)\n                                break\n                        stack.append(i)\n\n        while len(stack) != 0:\n            my_list.append(stack.pop())\n        stack2 = []\n        while len(my_list) != 0:\n            item = my_list.pop(0)\n            if re.match('\\d+\\.\\d*|\\.|\\d*', item).group():\n                stack2.append(item)\n            elif item == '+':\n                a = float(stack2.pop()) + float(stack2.pop())\n                stack2.append(a)\n            elif item == '-':\n                a = float(stack2.pop())\n                b = float(stack2.pop())\n                stack2.append(b - a)\n            elif item == '*':\n                a = float(stack2.pop()) * float(stack2.pop())\n                stack2.append(a)\n            elif item == '/':\n                a = float(stack2.pop())\n                b = float(stack2.pop())\n                stack2.append(b / a)\n        if len(stack2) != 1:\n            raise ValueError\n        print(str(round(stack2[0], 4)).strip('0').strip('.'))\n    except :\n        print(\"您输入的表达式有误，请重新输入\")\n\n\nmethod('(1+20)+8-5*(1+5)')\n\n```","source":"_posts/后缀表达式算术表达式.md","raw":"---\ntitle: 后缀表达式实现四则运算\ntags:\n  - python\n  - 数据结构\ncategories:\n  - 数据结构\ndate: 2017-06-08 15:20:00\n---\n\n### 摘要\n\n使用后缀表达式来实现四则运算\n<!-- more -->\n\n代码：\n\n```python\nimport re\n\ndef method(arithmetic):\n    try:\n        dict = {'+': 0, \"-\": 0, '*': 1, '/': 1, '(': 2, ')': 3}\n        my_list = []\n        arithmetic = arithmetic.replace(' ', '')\n        stack = []\n        all_list = []\n        for i in arithmetic:\n            if re.match('\\d+\\.\\d*|\\.|\\d*', i).group() and len(all_list) > 0 and re.match('\\d+\\.\\d*|\\.|\\d*', all_list[\n                        len(all_list) - 1]).group():\n                a = all_list.pop()\n                all_list.append(a + i)\n            else:\n                all_list.append(i)\n        # print(all_list)\n        for i in all_list:\n            if re.match(r'\\d', i):\n                my_list.append(i)\n            else:\n                if len(stack) == 0:\n                    stack.append(i)\n                else:\n                    top = stack.pop()\n                    priority_top = dict[top]\n                    priority_i = dict[i]\n                    if priority_i == 2 or priority_top == 2:\n                        stack.append(top)\n                        stack.append(i)\n                    elif priority_i == 3:\n                        my_list.append(top)\n                        while len(stack) != 0:\n                            aa = stack.pop()\n                            if dict[aa] != 2:\n                                my_list.append(aa)\n                            else:\n                                break\n                    elif priority_i >= priority_top:\n                        stack.append(top)\n                        stack.append(i)\n                    elif priority_i < priority_top:\n                        my_list.append(top)\n                        while len(stack) != 0:\n                            aa = stack.pop()\n                            priority_aa = dict[aa]\n                            if priority_i > priority_aa:\n                                my_list.append(aa)\n                            else:\n                                stack.append(aa)\n                                break\n                        stack.append(i)\n\n        while len(stack) != 0:\n            my_list.append(stack.pop())\n        stack2 = []\n        while len(my_list) != 0:\n            item = my_list.pop(0)\n            if re.match('\\d+\\.\\d*|\\.|\\d*', item).group():\n                stack2.append(item)\n            elif item == '+':\n                a = float(stack2.pop()) + float(stack2.pop())\n                stack2.append(a)\n            elif item == '-':\n                a = float(stack2.pop())\n                b = float(stack2.pop())\n                stack2.append(b - a)\n            elif item == '*':\n                a = float(stack2.pop()) * float(stack2.pop())\n                stack2.append(a)\n            elif item == '/':\n                a = float(stack2.pop())\n                b = float(stack2.pop())\n                stack2.append(b / a)\n        if len(stack2) != 1:\n            raise ValueError\n        print(str(round(stack2[0], 4)).strip('0').strip('.'))\n    except :\n        print(\"您输入的表达式有误，请重新输入\")\n\n\nmethod('(1+20)+8-5*(1+5)')\n\n```","slug":"后缀表达式算术表达式","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv53x000v58ug61mnzwai","content":"<h3 id=\"摘要\"><a class=\"header-anchor\" href=\"#摘要\">¶</a>摘要</h3>\n<p>使用后缀表达式来实现四则运算</p>\n<a id=\"more\"></a>\n<p>代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">method</span><span class=\"params\">(arithmetic)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        dict = &#123;<span class=\"string\">'+'</span>: <span class=\"number\">0</span>, <span class=\"string\">\"-\"</span>: <span class=\"number\">0</span>, <span class=\"string\">'*'</span>: <span class=\"number\">1</span>, <span class=\"string\">'/'</span>: <span class=\"number\">1</span>, <span class=\"string\">'('</span>: <span class=\"number\">2</span>, <span class=\"string\">')'</span>: <span class=\"number\">3</span>&#125;</span><br><span class=\"line\">        my_list = []</span><br><span class=\"line\">        arithmetic = arithmetic.replace(<span class=\"string\">' '</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\">        stack = []</span><br><span class=\"line\">        all_list = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> arithmetic:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> re.match(<span class=\"string\">'\\d+\\.\\d*|\\.|\\d*'</span>, i).group() <span class=\"keyword\">and</span> len(all_list) &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> re.match(<span class=\"string\">'\\d+\\.\\d*|\\.|\\d*'</span>, all_list[</span><br><span class=\"line\">                        len(all_list) - <span class=\"number\">1</span>]).group():</span><br><span class=\"line\">                a = all_list.pop()</span><br><span class=\"line\">                all_list.append(a + i)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                all_list.append(i)</span><br><span class=\"line\">        <span class=\"comment\"># print(all_list)</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> all_list:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> re.match(<span class=\"string\">r'\\d'</span>, i):</span><br><span class=\"line\">                my_list.append(i)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> len(stack) == <span class=\"number\">0</span>:</span><br><span class=\"line\">                    stack.append(i)</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    top = stack.pop()</span><br><span class=\"line\">                    priority_top = dict[top]</span><br><span class=\"line\">                    priority_i = dict[i]</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> priority_i == <span class=\"number\">2</span> <span class=\"keyword\">or</span> priority_top == <span class=\"number\">2</span>:</span><br><span class=\"line\">                        stack.append(top)</span><br><span class=\"line\">                        stack.append(i)</span><br><span class=\"line\">                    <span class=\"keyword\">elif</span> priority_i == <span class=\"number\">3</span>:</span><br><span class=\"line\">                        my_list.append(top)</span><br><span class=\"line\">                        <span class=\"keyword\">while</span> len(stack) != <span class=\"number\">0</span>:</span><br><span class=\"line\">                            aa = stack.pop()</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> dict[aa] != <span class=\"number\">2</span>:</span><br><span class=\"line\">                                my_list.append(aa)</span><br><span class=\"line\">                            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                                <span class=\"keyword\">break</span></span><br><span class=\"line\">                    <span class=\"keyword\">elif</span> priority_i &gt;= priority_top:</span><br><span class=\"line\">                        stack.append(top)</span><br><span class=\"line\">                        stack.append(i)</span><br><span class=\"line\">                    <span class=\"keyword\">elif</span> priority_i &lt; priority_top:</span><br><span class=\"line\">                        my_list.append(top)</span><br><span class=\"line\">                        <span class=\"keyword\">while</span> len(stack) != <span class=\"number\">0</span>:</span><br><span class=\"line\">                            aa = stack.pop()</span><br><span class=\"line\">                            priority_aa = dict[aa]</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> priority_i &gt; priority_aa:</span><br><span class=\"line\">                                my_list.append(aa)</span><br><span class=\"line\">                            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                                stack.append(aa)</span><br><span class=\"line\">                                <span class=\"keyword\">break</span></span><br><span class=\"line\">                        stack.append(i)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> len(stack) != <span class=\"number\">0</span>:</span><br><span class=\"line\">            my_list.append(stack.pop())</span><br><span class=\"line\">        stack2 = []</span><br><span class=\"line\">        <span class=\"keyword\">while</span> len(my_list) != <span class=\"number\">0</span>:</span><br><span class=\"line\">            item = my_list.pop(<span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> re.match(<span class=\"string\">'\\d+\\.\\d*|\\.|\\d*'</span>, item).group():</span><br><span class=\"line\">                stack2.append(item)</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> item == <span class=\"string\">'+'</span>:</span><br><span class=\"line\">                a = float(stack2.pop()) + float(stack2.pop())</span><br><span class=\"line\">                stack2.append(a)</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> item == <span class=\"string\">'-'</span>:</span><br><span class=\"line\">                a = float(stack2.pop())</span><br><span class=\"line\">                b = float(stack2.pop())</span><br><span class=\"line\">                stack2.append(b - a)</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> item == <span class=\"string\">'*'</span>:</span><br><span class=\"line\">                a = float(stack2.pop()) * float(stack2.pop())</span><br><span class=\"line\">                stack2.append(a)</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> item == <span class=\"string\">'/'</span>:</span><br><span class=\"line\">                a = float(stack2.pop())</span><br><span class=\"line\">                b = float(stack2.pop())</span><br><span class=\"line\">                stack2.append(b / a)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> len(stack2) != <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> ValueError</span><br><span class=\"line\">        print(str(round(stack2[<span class=\"number\">0</span>], <span class=\"number\">4</span>)).strip(<span class=\"string\">'0'</span>).strip(<span class=\"string\">'.'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">except</span> :</span><br><span class=\"line\">        print(<span class=\"string\">\"您输入的表达式有误，请重新输入\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">method(<span class=\"string\">'(1+20)+8-5*(1+5)'</span>)</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<h3 id=\"摘要\"><a class=\"header-anchor\" href=\"#摘要\">¶</a>摘要</h3>\n<p>使用后缀表达式来实现四则运算</p>","more":"<p>代码：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">method</span><span class=\"params\">(arithmetic)</span>:</span></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        dict = &#123;<span class=\"string\">'+'</span>: <span class=\"number\">0</span>, <span class=\"string\">\"-\"</span>: <span class=\"number\">0</span>, <span class=\"string\">'*'</span>: <span class=\"number\">1</span>, <span class=\"string\">'/'</span>: <span class=\"number\">1</span>, <span class=\"string\">'('</span>: <span class=\"number\">2</span>, <span class=\"string\">')'</span>: <span class=\"number\">3</span>&#125;</span><br><span class=\"line\">        my_list = []</span><br><span class=\"line\">        arithmetic = arithmetic.replace(<span class=\"string\">' '</span>, <span class=\"string\">''</span>)</span><br><span class=\"line\">        stack = []</span><br><span class=\"line\">        all_list = []</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> arithmetic:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> re.match(<span class=\"string\">'\\d+\\.\\d*|\\.|\\d*'</span>, i).group() <span class=\"keyword\">and</span> len(all_list) &gt; <span class=\"number\">0</span> <span class=\"keyword\">and</span> re.match(<span class=\"string\">'\\d+\\.\\d*|\\.|\\d*'</span>, all_list[</span><br><span class=\"line\">                        len(all_list) - <span class=\"number\">1</span>]).group():</span><br><span class=\"line\">                a = all_list.pop()</span><br><span class=\"line\">                all_list.append(a + i)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                all_list.append(i)</span><br><span class=\"line\">        <span class=\"comment\"># print(all_list)</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> all_list:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> re.match(<span class=\"string\">r'\\d'</span>, i):</span><br><span class=\"line\">                my_list.append(i)</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">if</span> len(stack) == <span class=\"number\">0</span>:</span><br><span class=\"line\">                    stack.append(i)</span><br><span class=\"line\">                <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                    top = stack.pop()</span><br><span class=\"line\">                    priority_top = dict[top]</span><br><span class=\"line\">                    priority_i = dict[i]</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> priority_i == <span class=\"number\">2</span> <span class=\"keyword\">or</span> priority_top == <span class=\"number\">2</span>:</span><br><span class=\"line\">                        stack.append(top)</span><br><span class=\"line\">                        stack.append(i)</span><br><span class=\"line\">                    <span class=\"keyword\">elif</span> priority_i == <span class=\"number\">3</span>:</span><br><span class=\"line\">                        my_list.append(top)</span><br><span class=\"line\">                        <span class=\"keyword\">while</span> len(stack) != <span class=\"number\">0</span>:</span><br><span class=\"line\">                            aa = stack.pop()</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> dict[aa] != <span class=\"number\">2</span>:</span><br><span class=\"line\">                                my_list.append(aa)</span><br><span class=\"line\">                            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                                <span class=\"keyword\">break</span></span><br><span class=\"line\">                    <span class=\"keyword\">elif</span> priority_i &gt;= priority_top:</span><br><span class=\"line\">                        stack.append(top)</span><br><span class=\"line\">                        stack.append(i)</span><br><span class=\"line\">                    <span class=\"keyword\">elif</span> priority_i &lt; priority_top:</span><br><span class=\"line\">                        my_list.append(top)</span><br><span class=\"line\">                        <span class=\"keyword\">while</span> len(stack) != <span class=\"number\">0</span>:</span><br><span class=\"line\">                            aa = stack.pop()</span><br><span class=\"line\">                            priority_aa = dict[aa]</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> priority_i &gt; priority_aa:</span><br><span class=\"line\">                                my_list.append(aa)</span><br><span class=\"line\">                            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                                stack.append(aa)</span><br><span class=\"line\">                                <span class=\"keyword\">break</span></span><br><span class=\"line\">                        stack.append(i)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> len(stack) != <span class=\"number\">0</span>:</span><br><span class=\"line\">            my_list.append(stack.pop())</span><br><span class=\"line\">        stack2 = []</span><br><span class=\"line\">        <span class=\"keyword\">while</span> len(my_list) != <span class=\"number\">0</span>:</span><br><span class=\"line\">            item = my_list.pop(<span class=\"number\">0</span>)</span><br><span class=\"line\">            <span class=\"keyword\">if</span> re.match(<span class=\"string\">'\\d+\\.\\d*|\\.|\\d*'</span>, item).group():</span><br><span class=\"line\">                stack2.append(item)</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> item == <span class=\"string\">'+'</span>:</span><br><span class=\"line\">                a = float(stack2.pop()) + float(stack2.pop())</span><br><span class=\"line\">                stack2.append(a)</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> item == <span class=\"string\">'-'</span>:</span><br><span class=\"line\">                a = float(stack2.pop())</span><br><span class=\"line\">                b = float(stack2.pop())</span><br><span class=\"line\">                stack2.append(b - a)</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> item == <span class=\"string\">'*'</span>:</span><br><span class=\"line\">                a = float(stack2.pop()) * float(stack2.pop())</span><br><span class=\"line\">                stack2.append(a)</span><br><span class=\"line\">            <span class=\"keyword\">elif</span> item == <span class=\"string\">'/'</span>:</span><br><span class=\"line\">                a = float(stack2.pop())</span><br><span class=\"line\">                b = float(stack2.pop())</span><br><span class=\"line\">                stack2.append(b / a)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> len(stack2) != <span class=\"number\">1</span>:</span><br><span class=\"line\">            <span class=\"keyword\">raise</span> ValueError</span><br><span class=\"line\">        print(str(round(stack2[<span class=\"number\">0</span>], <span class=\"number\">4</span>)).strip(<span class=\"string\">'0'</span>).strip(<span class=\"string\">'.'</span>))</span><br><span class=\"line\">    <span class=\"keyword\">except</span> :</span><br><span class=\"line\">        print(<span class=\"string\">\"您输入的表达式有误，请重新输入\"</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">method(<span class=\"string\">'(1+20)+8-5*(1+5)'</span>)</span><br></pre></td></tr></table></figure>"},{"title":"排序","date":"2017-06-18T13:22:15.000Z","_content":"\n* 定义\n    * 将杂乱无章的数据元素，通过一定的方法按关键字顺序排列的过程叫做排序。（来自百度百科）\n* 排序的稳定性\n    * 假定在待排序的记录序列中，存在多个具有相同的关键字的记录，若经过排序，这些记录的相对次序保持不变，即在原序列中，ri=rj，且ri在rj之前，而在排序后的序列中，ri仍在rj之前，则称这种排序算法是稳定的；否则称为不稳定的。\n<!-- more -->\n* 内排序与外排序\n    * 内排序是在排序整个过程中，待排序的所有记录全部被放置在内存中。\n    * 外排序是由于排序的记录个数太多，不能同时放置在内存，整个排序的过程需要在内外存之间多次交换数据才行。\n* 内排序排序算法的性能\n    * 时间性能\n        * 尽量减少关键字比较次数和记录移动次数。\n    * 辅助空间\n        * 除了存放待排序所占用的存储空间外，还包括执行算法所需要的其他存储空间。\n    * 算法的复杂性\n* 七种排序算法\n    * 简单算法：冒泡排序，简单选择排序，直接插入排序。\n    * 改进算法：希尔排序，堆排序，归并排序，快速排序。\n* 冒泡排序\n    * 两两比较相邻记录的关键字，如果反序则交换，直到没有反序的记录为止。\n    * 最简单的排序时间是两个for循环正向遍历，不符合两两比较的原则；冒泡排序是大循环正向，内循环从后往前遍历，在不断遍历过程中，除了将目标关键字排好序之外，其他关键字也会同时前移，效率会提高不少。\n    * 冒泡排序算法的优化：排序过程中添加标记flag，如果一次循环中，没有交换元素，证明已经排序好了，避免不必要的遍历。\n    * 时间复杂度分析：\n        * 最优情况：遍历n-1次\n        * 最坏情况：遍历1 + 2 + 3 + (n - 1 ) = n(n - 1)/2次\n        * 时间复杂度为O(n2)\n* 简单选择排序\n    * 通过 n - i 次关键字间的比较，从n - i + 1个记录中选出关键字最小的记录，并与第 i 个记录交换之。\n    *  时间复杂度分析：无论最好还是最差的情况，比较的次数都是一样多。比较的次数为 n(n - 1)/2，但是交换的次数只有 n - 1 次，最终的排序时间是基于比较和交换次数总和，时间复杂度为O(n2)；性能优于冒泡排序。\n* 直接插入排序\n    * 将一个记录插入到已经排好序的列表中，从而得到一个新的、记录数增1的有序表。\n    * 时间复杂度分析：空间上，只需要一个记录的辅助空间。时间复杂度，最好情况为O(n)，最坏的情况，需要比较2 + 3 + ... + n = (n + 2)(n - 1)/2 次，记录的移动次数为3 + ... + n + 1 = (n + 4)(n - 1)/2次。 平均移动和比较的次数为n2/4次。时间复杂度为O(n2)，但是性能要优于冒泡排序和简单选择排序。\n* 希尔排序\n    * 把记录按下标的一定增量分组，对每组使用直接插入排序算法排序；随着增量逐渐减少，每组包含的关键词越来越多，当增量减至1时，整个文件恰被分成一组，算法便终止。\n    * 复杂度分析：时间复杂度为O(n3/2)。\n    * 增量序列的最后一个增量值必须等于1才行；另外由于记录是跳跃式的移动，希尔排序并不是稳定的排序算法。\n* 堆排序\n    * 堆是具有下列性质的完全二叉树：每个结点的值都大于或等于其左右孩子结点的值，称为大顶堆；或者每个结点的值都小于或等于其左右孩子结点的值，称为小顶堆。\n    * 堆排序就是利用堆进行排序的方法。基本思想是，将待排序的序列构造成一个大顶堆，此时，整个序列的最大值就是堆顶的根结点，将其与堆数组的末尾元素交换，然后将剩余的n-1个序列重新构造成一个堆，用同样的方法取得n个元素的次小值，重复执行以上步骤，便可以得到一个有序序列。\n    * 复杂度分析：整个构建堆的时间复杂度是O(n)，第i次重建堆时间复杂度为O(logi)，所有重建堆的时间复杂度为O(nlogn)，总体来说，时间复杂度为O(nlogn)。最好，最坏和评价的时间复杂度都是一样；初始构建堆所需要比较的次数多，不适合排序序列个数较少的情况。\n* 归并排序\n    * 时间复杂度为O(nlogn)。是稳定的排序算法。\n* 快速排序\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokuz8dm1j20ws0yidk9.jpg)\n* 几种排序算法的比较\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokv96z52j20my06s0tr.jpg)","source":"_posts/数据结构-排序.md","raw":"---\ntitle: 排序\ntags:\n  - 排序\n  - 数据结构\ncategories:\n  - 数据结构\ndate: 2017-06-18 21:22:15\n---\n\n* 定义\n    * 将杂乱无章的数据元素，通过一定的方法按关键字顺序排列的过程叫做排序。（来自百度百科）\n* 排序的稳定性\n    * 假定在待排序的记录序列中，存在多个具有相同的关键字的记录，若经过排序，这些记录的相对次序保持不变，即在原序列中，ri=rj，且ri在rj之前，而在排序后的序列中，ri仍在rj之前，则称这种排序算法是稳定的；否则称为不稳定的。\n<!-- more -->\n* 内排序与外排序\n    * 内排序是在排序整个过程中，待排序的所有记录全部被放置在内存中。\n    * 外排序是由于排序的记录个数太多，不能同时放置在内存，整个排序的过程需要在内外存之间多次交换数据才行。\n* 内排序排序算法的性能\n    * 时间性能\n        * 尽量减少关键字比较次数和记录移动次数。\n    * 辅助空间\n        * 除了存放待排序所占用的存储空间外，还包括执行算法所需要的其他存储空间。\n    * 算法的复杂性\n* 七种排序算法\n    * 简单算法：冒泡排序，简单选择排序，直接插入排序。\n    * 改进算法：希尔排序，堆排序，归并排序，快速排序。\n* 冒泡排序\n    * 两两比较相邻记录的关键字，如果反序则交换，直到没有反序的记录为止。\n    * 最简单的排序时间是两个for循环正向遍历，不符合两两比较的原则；冒泡排序是大循环正向，内循环从后往前遍历，在不断遍历过程中，除了将目标关键字排好序之外，其他关键字也会同时前移，效率会提高不少。\n    * 冒泡排序算法的优化：排序过程中添加标记flag，如果一次循环中，没有交换元素，证明已经排序好了，避免不必要的遍历。\n    * 时间复杂度分析：\n        * 最优情况：遍历n-1次\n        * 最坏情况：遍历1 + 2 + 3 + (n - 1 ) = n(n - 1)/2次\n        * 时间复杂度为O(n2)\n* 简单选择排序\n    * 通过 n - i 次关键字间的比较，从n - i + 1个记录中选出关键字最小的记录，并与第 i 个记录交换之。\n    *  时间复杂度分析：无论最好还是最差的情况，比较的次数都是一样多。比较的次数为 n(n - 1)/2，但是交换的次数只有 n - 1 次，最终的排序时间是基于比较和交换次数总和，时间复杂度为O(n2)；性能优于冒泡排序。\n* 直接插入排序\n    * 将一个记录插入到已经排好序的列表中，从而得到一个新的、记录数增1的有序表。\n    * 时间复杂度分析：空间上，只需要一个记录的辅助空间。时间复杂度，最好情况为O(n)，最坏的情况，需要比较2 + 3 + ... + n = (n + 2)(n - 1)/2 次，记录的移动次数为3 + ... + n + 1 = (n + 4)(n - 1)/2次。 平均移动和比较的次数为n2/4次。时间复杂度为O(n2)，但是性能要优于冒泡排序和简单选择排序。\n* 希尔排序\n    * 把记录按下标的一定增量分组，对每组使用直接插入排序算法排序；随着增量逐渐减少，每组包含的关键词越来越多，当增量减至1时，整个文件恰被分成一组，算法便终止。\n    * 复杂度分析：时间复杂度为O(n3/2)。\n    * 增量序列的最后一个增量值必须等于1才行；另外由于记录是跳跃式的移动，希尔排序并不是稳定的排序算法。\n* 堆排序\n    * 堆是具有下列性质的完全二叉树：每个结点的值都大于或等于其左右孩子结点的值，称为大顶堆；或者每个结点的值都小于或等于其左右孩子结点的值，称为小顶堆。\n    * 堆排序就是利用堆进行排序的方法。基本思想是，将待排序的序列构造成一个大顶堆，此时，整个序列的最大值就是堆顶的根结点，将其与堆数组的末尾元素交换，然后将剩余的n-1个序列重新构造成一个堆，用同样的方法取得n个元素的次小值，重复执行以上步骤，便可以得到一个有序序列。\n    * 复杂度分析：整个构建堆的时间复杂度是O(n)，第i次重建堆时间复杂度为O(logi)，所有重建堆的时间复杂度为O(nlogn)，总体来说，时间复杂度为O(nlogn)。最好，最坏和评价的时间复杂度都是一样；初始构建堆所需要比较的次数多，不适合排序序列个数较少的情况。\n* 归并排序\n    * 时间复杂度为O(nlogn)。是稳定的排序算法。\n* 快速排序\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokuz8dm1j20ws0yidk9.jpg)\n* 几种排序算法的比较\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokv96z52j20my06s0tr.jpg)","slug":"数据结构-排序","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv53z001058ugpxgzdrgm","content":"<ul>\n<li>定义\n<ul>\n<li>将杂乱无章的数据元素，通过一定的方法按关键字顺序排列的过程叫做排序。（来自百度百科）</li>\n</ul>\n</li>\n<li>排序的稳定性\n<ul>\n<li>假定在待排序的记录序列中，存在多个具有相同的关键字的记录，若经过排序，这些记录的相对次序保持不变，即在原序列中，ri=rj，且ri在rj之前，而在排序后的序列中，ri仍在rj之前，则称这种排序算法是稳定的；否则称为不稳定的。</li>\n</ul>\n</li>\n</ul>\n<a id=\"more\"></a>\n<ul>\n<li>内排序与外排序\n<ul>\n<li>内排序是在排序整个过程中，待排序的所有记录全部被放置在内存中。</li>\n<li>外排序是由于排序的记录个数太多，不能同时放置在内存，整个排序的过程需要在内外存之间多次交换数据才行。</li>\n</ul>\n</li>\n<li>内排序排序算法的性能\n<ul>\n<li>时间性能\n<ul>\n<li>尽量减少关键字比较次数和记录移动次数。</li>\n</ul>\n</li>\n<li>辅助空间\n<ul>\n<li>除了存放待排序所占用的存储空间外，还包括执行算法所需要的其他存储空间。</li>\n</ul>\n</li>\n<li>算法的复杂性</li>\n</ul>\n</li>\n<li>七种排序算法\n<ul>\n<li>简单算法：冒泡排序，简单选择排序，直接插入排序。</li>\n<li>改进算法：希尔排序，堆排序，归并排序，快速排序。</li>\n</ul>\n</li>\n<li>冒泡排序\n<ul>\n<li>两两比较相邻记录的关键字，如果反序则交换，直到没有反序的记录为止。</li>\n<li>最简单的排序时间是两个for循环正向遍历，不符合两两比较的原则；冒泡排序是大循环正向，内循环从后往前遍历，在不断遍历过程中，除了将目标关键字排好序之外，其他关键字也会同时前移，效率会提高不少。</li>\n<li>冒泡排序算法的优化：排序过程中添加标记flag，如果一次循环中，没有交换元素，证明已经排序好了，避免不必要的遍历。</li>\n<li>时间复杂度分析：\n<ul>\n<li>最优情况：遍历n-1次</li>\n<li>最坏情况：遍历1 + 2 + 3 + (n - 1 ) = n(n - 1)/2次</li>\n<li>时间复杂度为O(n2)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>简单选择排序\n<ul>\n<li>通过 n - i 次关键字间的比较，从n - i + 1个记录中选出关键字最小的记录，并与第 i 个记录交换之。</li>\n<li>时间复杂度分析：无论最好还是最差的情况，比较的次数都是一样多。比较的次数为 n(n - 1)/2，但是交换的次数只有 n - 1 次，最终的排序时间是基于比较和交换次数总和，时间复杂度为O(n2)；性能优于冒泡排序。</li>\n</ul>\n</li>\n<li>直接插入排序\n<ul>\n<li>将一个记录插入到已经排好序的列表中，从而得到一个新的、记录数增1的有序表。</li>\n<li>时间复杂度分析：空间上，只需要一个记录的辅助空间。时间复杂度，最好情况为O(n)，最坏的情况，需要比较2 + 3 + … + n = (n + 2)(n - 1)/2 次，记录的移动次数为3 + … + n + 1 = (n + 4)(n - 1)/2次。 平均移动和比较的次数为n2/4次。时间复杂度为O(n2)，但是性能要优于冒泡排序和简单选择排序。</li>\n</ul>\n</li>\n<li>希尔排序\n<ul>\n<li>把记录按下标的一定增量分组，对每组使用直接插入排序算法排序；随着增量逐渐减少，每组包含的关键词越来越多，当增量减至1时，整个文件恰被分成一组，算法便终止。</li>\n<li>复杂度分析：时间复杂度为O(n3/2)。</li>\n<li>增量序列的最后一个增量值必须等于1才行；另外由于记录是跳跃式的移动，希尔排序并不是稳定的排序算法。</li>\n</ul>\n</li>\n<li>堆排序\n<ul>\n<li>堆是具有下列性质的完全二叉树：每个结点的值都大于或等于其左右孩子结点的值，称为大顶堆；或者每个结点的值都小于或等于其左右孩子结点的值，称为小顶堆。</li>\n<li>堆排序就是利用堆进行排序的方法。基本思想是，将待排序的序列构造成一个大顶堆，此时，整个序列的最大值就是堆顶的根结点，将其与堆数组的末尾元素交换，然后将剩余的n-1个序列重新构造成一个堆，用同样的方法取得n个元素的次小值，重复执行以上步骤，便可以得到一个有序序列。</li>\n<li>复杂度分析：整个构建堆的时间复杂度是O(n)，第i次重建堆时间复杂度为O(logi)，所有重建堆的时间复杂度为O(nlogn)，总体来说，时间复杂度为O(nlogn)。最好，最坏和评价的时间复杂度都是一样；初始构建堆所需要比较的次数多，不适合排序序列个数较少的情况。</li>\n</ul>\n</li>\n<li>归并排序\n<ul>\n<li>时间复杂度为O(nlogn)。是稳定的排序算法。</li>\n</ul>\n</li>\n<li>快速排序\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokuz8dm1j20ws0yidk9.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>几种排序算法的比较\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokv96z52j20my06s0tr.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<ul>\n<li>定义\n<ul>\n<li>将杂乱无章的数据元素，通过一定的方法按关键字顺序排列的过程叫做排序。（来自百度百科）</li>\n</ul>\n</li>\n<li>排序的稳定性\n<ul>\n<li>假定在待排序的记录序列中，存在多个具有相同的关键字的记录，若经过排序，这些记录的相对次序保持不变，即在原序列中，ri=rj，且ri在rj之前，而在排序后的序列中，ri仍在rj之前，则称这种排序算法是稳定的；否则称为不稳定的。</li>\n</ul>\n</li>\n</ul>","more":"<ul>\n<li>内排序与外排序\n<ul>\n<li>内排序是在排序整个过程中，待排序的所有记录全部被放置在内存中。</li>\n<li>外排序是由于排序的记录个数太多，不能同时放置在内存，整个排序的过程需要在内外存之间多次交换数据才行。</li>\n</ul>\n</li>\n<li>内排序排序算法的性能\n<ul>\n<li>时间性能\n<ul>\n<li>尽量减少关键字比较次数和记录移动次数。</li>\n</ul>\n</li>\n<li>辅助空间\n<ul>\n<li>除了存放待排序所占用的存储空间外，还包括执行算法所需要的其他存储空间。</li>\n</ul>\n</li>\n<li>算法的复杂性</li>\n</ul>\n</li>\n<li>七种排序算法\n<ul>\n<li>简单算法：冒泡排序，简单选择排序，直接插入排序。</li>\n<li>改进算法：希尔排序，堆排序，归并排序，快速排序。</li>\n</ul>\n</li>\n<li>冒泡排序\n<ul>\n<li>两两比较相邻记录的关键字，如果反序则交换，直到没有反序的记录为止。</li>\n<li>最简单的排序时间是两个for循环正向遍历，不符合两两比较的原则；冒泡排序是大循环正向，内循环从后往前遍历，在不断遍历过程中，除了将目标关键字排好序之外，其他关键字也会同时前移，效率会提高不少。</li>\n<li>冒泡排序算法的优化：排序过程中添加标记flag，如果一次循环中，没有交换元素，证明已经排序好了，避免不必要的遍历。</li>\n<li>时间复杂度分析：\n<ul>\n<li>最优情况：遍历n-1次</li>\n<li>最坏情况：遍历1 + 2 + 3 + (n - 1 ) = n(n - 1)/2次</li>\n<li>时间复杂度为O(n2)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>简单选择排序\n<ul>\n<li>通过 n - i 次关键字间的比较，从n - i + 1个记录中选出关键字最小的记录，并与第 i 个记录交换之。</li>\n<li>时间复杂度分析：无论最好还是最差的情况，比较的次数都是一样多。比较的次数为 n(n - 1)/2，但是交换的次数只有 n - 1 次，最终的排序时间是基于比较和交换次数总和，时间复杂度为O(n2)；性能优于冒泡排序。</li>\n</ul>\n</li>\n<li>直接插入排序\n<ul>\n<li>将一个记录插入到已经排好序的列表中，从而得到一个新的、记录数增1的有序表。</li>\n<li>时间复杂度分析：空间上，只需要一个记录的辅助空间。时间复杂度，最好情况为O(n)，最坏的情况，需要比较2 + 3 + … + n = (n + 2)(n - 1)/2 次，记录的移动次数为3 + … + n + 1 = (n + 4)(n - 1)/2次。 平均移动和比较的次数为n2/4次。时间复杂度为O(n2)，但是性能要优于冒泡排序和简单选择排序。</li>\n</ul>\n</li>\n<li>希尔排序\n<ul>\n<li>把记录按下标的一定增量分组，对每组使用直接插入排序算法排序；随着增量逐渐减少，每组包含的关键词越来越多，当增量减至1时，整个文件恰被分成一组，算法便终止。</li>\n<li>复杂度分析：时间复杂度为O(n3/2)。</li>\n<li>增量序列的最后一个增量值必须等于1才行；另外由于记录是跳跃式的移动，希尔排序并不是稳定的排序算法。</li>\n</ul>\n</li>\n<li>堆排序\n<ul>\n<li>堆是具有下列性质的完全二叉树：每个结点的值都大于或等于其左右孩子结点的值，称为大顶堆；或者每个结点的值都小于或等于其左右孩子结点的值，称为小顶堆。</li>\n<li>堆排序就是利用堆进行排序的方法。基本思想是，将待排序的序列构造成一个大顶堆，此时，整个序列的最大值就是堆顶的根结点，将其与堆数组的末尾元素交换，然后将剩余的n-1个序列重新构造成一个堆，用同样的方法取得n个元素的次小值，重复执行以上步骤，便可以得到一个有序序列。</li>\n<li>复杂度分析：整个构建堆的时间复杂度是O(n)，第i次重建堆时间复杂度为O(logi)，所有重建堆的时间复杂度为O(nlogn)，总体来说，时间复杂度为O(nlogn)。最好，最坏和评价的时间复杂度都是一样；初始构建堆所需要比较的次数多，不适合排序序列个数较少的情况。</li>\n</ul>\n</li>\n<li>归并排序\n<ul>\n<li>时间复杂度为O(nlogn)。是稳定的排序算法。</li>\n</ul>\n</li>\n<li>快速排序\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokuz8dm1j20ws0yidk9.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>几种排序算法的比较\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokv96z52j20my06s0tr.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>"},{"title":"数据结构绪论","date":"2017-05-25T03:22:15.000Z","_content":"### 基本概念和术语\n1. 数据：是描述客观事物的符号，是计算机中可以操作的对象，是能被计算机识别，并输入给计算机处理的符号集合。数据不仅仅包括整型、实型等数值类型，还包括字符及声音、图像、视频等非数值类型。\n2. 数据元素：是组成数据的、有一定意义的基本单位，在计算机中通常作为整体处理。也被称为记录。\n3. 数据项：一个数据元素可以由若千个数据项组成。\n4. 数据对象：是性质相同的数据元素的集合，是数据的子集。\n5. 数据结构：是相互之间存在一种或多种特定关系的数据元素的集合。\n\n<!-- more -->\n\n### 逻辑结构和物理结构\n1. 逻辑结构：数据对象中数据元素之间的相互关系。\n    1. 集合结构：数据元素同属于一个集合，没有其他的关系。\n    2. 线性结构：数据元素之间是一对一的关系\n    3. 树形结构：数据元素之间存在一种一对多的关系。\n    4. 图形结构：数据元素之间是多对多的关系。\n2. 物理结构：数据的逻辑结构在计算机上面的存储形式。\n    1. 顺序存储结构：数据元素存放在地址连续的存储单元里。其数据间的逻辑关系和物理关系是一致的。\n    2. 链式存储结构：数据元素存放在任意的存储单元里，这组存储单元可以是连续的，也可以是不连续的。\n\n### 抽象数据类型\n1. 数据类型：是指一组性质相同的值的集合及定义在此集合上的一些操作的总称。\n    1. 原子类型：是不可以再分解的基本类型，包括整型、实型、字符型等。\n    2. 结构类型：由若千个类型组合而成，是可以再分解的。例如，整型数组是由若干整型数据组成的。\n2. 抽象数据类型（Abstract Data Type, ADT）：是指一个数学模型及定义在该模型上的一组操作。抽象数据类型的定义仅取决于它的一组逻辑特性，而与其在计算机内部如何表示和实现无关。\n\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojc5cremj20j3070afd.jpg)\n\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojce6x4ij20cx06x777.jpg)\n\n### 什么是算法\n1. 算法：算法是解决特定问题求解步骤的描述，在计算机中表现为指令的有限序列，并且每条指令表示一个或多个操作。\n2. 算法的特性\n    1. 输入输出：具有零个或者多个输入，一个或者多个输出。\n    2. 有穷性：执行有限的步骤之后，自动结束而不会出现无线循环，并且每一个步骤都在可接受的时间内完成。\n    3. 确定性：算法的每一步骤都具有确定的含义，不会出现二义性。\n    4. 可行性：算法的每一步都必须是可行的，也就是说，每一步都能够通过执行有限次数完成。\n3. 算法设计的要求\n    1. 正确性：算法至少应该具有输入、输出和加工处理无歧义性、能正确反映问题的需求、能够得到问题的正确答案。\n    2. 可读性：便于阅读、理解和交流。\n    3. 健壮性：当输入数据不合法时，算法也能做出相关的处理，而不是产生异常或莫名其妙的结果。\n    4. 时间效率高和存储量低\n4. 算法效率的度量方法\n    1. 事后统计方法：这种方法主要是通过设计好的测试程序和数据，利用计算机计时器对不同算法编制的程序的运行时间进行比较，从而确定算法效率的高低。\n    2. 事前分析估算方法：在计算机程序编制前，依据统计方法对算法进行估算。\n5. 算法时间复杂度\n    1. 常数阶\n    2. 线性阶\n    3. 平方阶\n    4. 对数阶\n    5. nlogn阶\n    6. 立方阶\n    7. 指数阶\n6. 最坏情况与平均情况：最坏情况运行时间是一种保证，那就是运行时间将不会再坏了。在应用中，这是一种最重要的需求，通常，除非特别指定，我们提到的运行时间都是最坏情况的运行时间。\n\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojfsujtsj20j802a3zg.jpg)\n","source":"_posts/数据结构-数据结构绪论.md","raw":"---\ntitle: 数据结构绪论\ntags:\n  - 数据结构\ncategories:\n  - 数据结构\ndate: 2017-05-25 11:22:15\n---\n### 基本概念和术语\n1. 数据：是描述客观事物的符号，是计算机中可以操作的对象，是能被计算机识别，并输入给计算机处理的符号集合。数据不仅仅包括整型、实型等数值类型，还包括字符及声音、图像、视频等非数值类型。\n2. 数据元素：是组成数据的、有一定意义的基本单位，在计算机中通常作为整体处理。也被称为记录。\n3. 数据项：一个数据元素可以由若千个数据项组成。\n4. 数据对象：是性质相同的数据元素的集合，是数据的子集。\n5. 数据结构：是相互之间存在一种或多种特定关系的数据元素的集合。\n\n<!-- more -->\n\n### 逻辑结构和物理结构\n1. 逻辑结构：数据对象中数据元素之间的相互关系。\n    1. 集合结构：数据元素同属于一个集合，没有其他的关系。\n    2. 线性结构：数据元素之间是一对一的关系\n    3. 树形结构：数据元素之间存在一种一对多的关系。\n    4. 图形结构：数据元素之间是多对多的关系。\n2. 物理结构：数据的逻辑结构在计算机上面的存储形式。\n    1. 顺序存储结构：数据元素存放在地址连续的存储单元里。其数据间的逻辑关系和物理关系是一致的。\n    2. 链式存储结构：数据元素存放在任意的存储单元里，这组存储单元可以是连续的，也可以是不连续的。\n\n### 抽象数据类型\n1. 数据类型：是指一组性质相同的值的集合及定义在此集合上的一些操作的总称。\n    1. 原子类型：是不可以再分解的基本类型，包括整型、实型、字符型等。\n    2. 结构类型：由若千个类型组合而成，是可以再分解的。例如，整型数组是由若干整型数据组成的。\n2. 抽象数据类型（Abstract Data Type, ADT）：是指一个数学模型及定义在该模型上的一组操作。抽象数据类型的定义仅取决于它的一组逻辑特性，而与其在计算机内部如何表示和实现无关。\n\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojc5cremj20j3070afd.jpg)\n\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojce6x4ij20cx06x777.jpg)\n\n### 什么是算法\n1. 算法：算法是解决特定问题求解步骤的描述，在计算机中表现为指令的有限序列，并且每条指令表示一个或多个操作。\n2. 算法的特性\n    1. 输入输出：具有零个或者多个输入，一个或者多个输出。\n    2. 有穷性：执行有限的步骤之后，自动结束而不会出现无线循环，并且每一个步骤都在可接受的时间内完成。\n    3. 确定性：算法的每一步骤都具有确定的含义，不会出现二义性。\n    4. 可行性：算法的每一步都必须是可行的，也就是说，每一步都能够通过执行有限次数完成。\n3. 算法设计的要求\n    1. 正确性：算法至少应该具有输入、输出和加工处理无歧义性、能正确反映问题的需求、能够得到问题的正确答案。\n    2. 可读性：便于阅读、理解和交流。\n    3. 健壮性：当输入数据不合法时，算法也能做出相关的处理，而不是产生异常或莫名其妙的结果。\n    4. 时间效率高和存储量低\n4. 算法效率的度量方法\n    1. 事后统计方法：这种方法主要是通过设计好的测试程序和数据，利用计算机计时器对不同算法编制的程序的运行时间进行比较，从而确定算法效率的高低。\n    2. 事前分析估算方法：在计算机程序编制前，依据统计方法对算法进行估算。\n5. 算法时间复杂度\n    1. 常数阶\n    2. 线性阶\n    3. 平方阶\n    4. 对数阶\n    5. nlogn阶\n    6. 立方阶\n    7. 指数阶\n6. 最坏情况与平均情况：最坏情况运行时间是一种保证，那就是运行时间将不会再坏了。在应用中，这是一种最重要的需求，通常，除非特别指定，我们提到的运行时间都是最坏情况的运行时间。\n\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojfsujtsj20j802a3zg.jpg)\n","slug":"数据结构-数据结构绪论","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv540001358ugt2idb3m4","content":"<h3 id=\"基本概念和术语\"><a class=\"header-anchor\" href=\"#基本概念和术语\">¶</a>基本概念和术语</h3>\n<ol>\n<li>数据：是描述客观事物的符号，是计算机中可以操作的对象，是能被计算机识别，并输入给计算机处理的符号集合。数据不仅仅包括整型、实型等数值类型，还包括字符及声音、图像、视频等非数值类型。</li>\n<li>数据元素：是组成数据的、有一定意义的基本单位，在计算机中通常作为整体处理。也被称为记录。</li>\n<li>数据项：一个数据元素可以由若千个数据项组成。</li>\n<li>数据对象：是性质相同的数据元素的集合，是数据的子集。</li>\n<li>数据结构：是相互之间存在一种或多种特定关系的数据元素的集合。</li>\n</ol>\n<a id=\"more\"></a>\n<h3 id=\"逻辑结构和物理结构\"><a class=\"header-anchor\" href=\"#逻辑结构和物理结构\">¶</a>逻辑结构和物理结构</h3>\n<ol>\n<li>逻辑结构：数据对象中数据元素之间的相互关系。\n<ol>\n<li>集合结构：数据元素同属于一个集合，没有其他的关系。</li>\n<li>线性结构：数据元素之间是一对一的关系</li>\n<li>树形结构：数据元素之间存在一种一对多的关系。</li>\n<li>图形结构：数据元素之间是多对多的关系。</li>\n</ol>\n</li>\n<li>物理结构：数据的逻辑结构在计算机上面的存储形式。\n<ol>\n<li>顺序存储结构：数据元素存放在地址连续的存储单元里。其数据间的逻辑关系和物理关系是一致的。</li>\n<li>链式存储结构：数据元素存放在任意的存储单元里，这组存储单元可以是连续的，也可以是不连续的。</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"抽象数据类型\"><a class=\"header-anchor\" href=\"#抽象数据类型\">¶</a>抽象数据类型</h3>\n<ol>\n<li>数据类型：是指一组性质相同的值的集合及定义在此集合上的一些操作的总称。\n<ol>\n<li>原子类型：是不可以再分解的基本类型，包括整型、实型、字符型等。</li>\n<li>结构类型：由若千个类型组合而成，是可以再分解的。例如，整型数组是由若干整型数据组成的。</li>\n</ol>\n</li>\n<li>抽象数据类型（Abstract Data Type, ADT）：是指一个数学模型及定义在该模型上的一组操作。抽象数据类型的定义仅取决于它的一组逻辑特性，而与其在计算机内部如何表示和实现无关。</li>\n</ol>\n<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojc5cremj20j3070afd.jpg\" alt=\"\"></p>\n<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojce6x4ij20cx06x777.jpg\" alt=\"\"></p>\n<h3 id=\"什么是算法\"><a class=\"header-anchor\" href=\"#什么是算法\">¶</a>什么是算法</h3>\n<ol>\n<li>算法：算法是解决特定问题求解步骤的描述，在计算机中表现为指令的有限序列，并且每条指令表示一个或多个操作。</li>\n<li>算法的特性\n<ol>\n<li>输入输出：具有零个或者多个输入，一个或者多个输出。</li>\n<li>有穷性：执行有限的步骤之后，自动结束而不会出现无线循环，并且每一个步骤都在可接受的时间内完成。</li>\n<li>确定性：算法的每一步骤都具有确定的含义，不会出现二义性。</li>\n<li>可行性：算法的每一步都必须是可行的，也就是说，每一步都能够通过执行有限次数完成。</li>\n</ol>\n</li>\n<li>算法设计的要求\n<ol>\n<li>正确性：算法至少应该具有输入、输出和加工处理无歧义性、能正确反映问题的需求、能够得到问题的正确答案。</li>\n<li>可读性：便于阅读、理解和交流。</li>\n<li>健壮性：当输入数据不合法时，算法也能做出相关的处理，而不是产生异常或莫名其妙的结果。</li>\n<li>时间效率高和存储量低</li>\n</ol>\n</li>\n<li>算法效率的度量方法\n<ol>\n<li>事后统计方法：这种方法主要是通过设计好的测试程序和数据，利用计算机计时器对不同算法编制的程序的运行时间进行比较，从而确定算法效率的高低。</li>\n<li>事前分析估算方法：在计算机程序编制前，依据统计方法对算法进行估算。</li>\n</ol>\n</li>\n<li>算法时间复杂度\n<ol>\n<li>常数阶</li>\n<li>线性阶</li>\n<li>平方阶</li>\n<li>对数阶</li>\n<li>nlogn阶</li>\n<li>立方阶</li>\n<li>指数阶</li>\n</ol>\n</li>\n<li>最坏情况与平均情况：最坏情况运行时间是一种保证，那就是运行时间将不会再坏了。在应用中，这是一种最重要的需求，通常，除非特别指定，我们提到的运行时间都是最坏情况的运行时间。</li>\n</ol>\n<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojfsujtsj20j802a3zg.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<h3 id=\"基本概念和术语\"><a class=\"header-anchor\" href=\"#基本概念和术语\">¶</a>基本概念和术语</h3>\n<ol>\n<li>数据：是描述客观事物的符号，是计算机中可以操作的对象，是能被计算机识别，并输入给计算机处理的符号集合。数据不仅仅包括整型、实型等数值类型，还包括字符及声音、图像、视频等非数值类型。</li>\n<li>数据元素：是组成数据的、有一定意义的基本单位，在计算机中通常作为整体处理。也被称为记录。</li>\n<li>数据项：一个数据元素可以由若千个数据项组成。</li>\n<li>数据对象：是性质相同的数据元素的集合，是数据的子集。</li>\n<li>数据结构：是相互之间存在一种或多种特定关系的数据元素的集合。</li>\n</ol>","more":"<h3 id=\"逻辑结构和物理结构\"><a class=\"header-anchor\" href=\"#逻辑结构和物理结构\">¶</a>逻辑结构和物理结构</h3>\n<ol>\n<li>逻辑结构：数据对象中数据元素之间的相互关系。\n<ol>\n<li>集合结构：数据元素同属于一个集合，没有其他的关系。</li>\n<li>线性结构：数据元素之间是一对一的关系</li>\n<li>树形结构：数据元素之间存在一种一对多的关系。</li>\n<li>图形结构：数据元素之间是多对多的关系。</li>\n</ol>\n</li>\n<li>物理结构：数据的逻辑结构在计算机上面的存储形式。\n<ol>\n<li>顺序存储结构：数据元素存放在地址连续的存储单元里。其数据间的逻辑关系和物理关系是一致的。</li>\n<li>链式存储结构：数据元素存放在任意的存储单元里，这组存储单元可以是连续的，也可以是不连续的。</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"抽象数据类型\"><a class=\"header-anchor\" href=\"#抽象数据类型\">¶</a>抽象数据类型</h3>\n<ol>\n<li>数据类型：是指一组性质相同的值的集合及定义在此集合上的一些操作的总称。\n<ol>\n<li>原子类型：是不可以再分解的基本类型，包括整型、实型、字符型等。</li>\n<li>结构类型：由若千个类型组合而成，是可以再分解的。例如，整型数组是由若干整型数据组成的。</li>\n</ol>\n</li>\n<li>抽象数据类型（Abstract Data Type, ADT）：是指一个数学模型及定义在该模型上的一组操作。抽象数据类型的定义仅取决于它的一组逻辑特性，而与其在计算机内部如何表示和实现无关。</li>\n</ol>\n<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojc5cremj20j3070afd.jpg\" alt=\"\"></p>\n<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojce6x4ij20cx06x777.jpg\" alt=\"\"></p>\n<h3 id=\"什么是算法\"><a class=\"header-anchor\" href=\"#什么是算法\">¶</a>什么是算法</h3>\n<ol>\n<li>算法：算法是解决特定问题求解步骤的描述，在计算机中表现为指令的有限序列，并且每条指令表示一个或多个操作。</li>\n<li>算法的特性\n<ol>\n<li>输入输出：具有零个或者多个输入，一个或者多个输出。</li>\n<li>有穷性：执行有限的步骤之后，自动结束而不会出现无线循环，并且每一个步骤都在可接受的时间内完成。</li>\n<li>确定性：算法的每一步骤都具有确定的含义，不会出现二义性。</li>\n<li>可行性：算法的每一步都必须是可行的，也就是说，每一步都能够通过执行有限次数完成。</li>\n</ol>\n</li>\n<li>算法设计的要求\n<ol>\n<li>正确性：算法至少应该具有输入、输出和加工处理无歧义性、能正确反映问题的需求、能够得到问题的正确答案。</li>\n<li>可读性：便于阅读、理解和交流。</li>\n<li>健壮性：当输入数据不合法时，算法也能做出相关的处理，而不是产生异常或莫名其妙的结果。</li>\n<li>时间效率高和存储量低</li>\n</ol>\n</li>\n<li>算法效率的度量方法\n<ol>\n<li>事后统计方法：这种方法主要是通过设计好的测试程序和数据，利用计算机计时器对不同算法编制的程序的运行时间进行比较，从而确定算法效率的高低。</li>\n<li>事前分析估算方法：在计算机程序编制前，依据统计方法对算法进行估算。</li>\n</ol>\n</li>\n<li>算法时间复杂度\n<ol>\n<li>常数阶</li>\n<li>线性阶</li>\n<li>平方阶</li>\n<li>对数阶</li>\n<li>nlogn阶</li>\n<li>立方阶</li>\n<li>指数阶</li>\n</ol>\n</li>\n<li>最坏情况与平均情况：最坏情况运行时间是一种保证，那就是运行时间将不会再坏了。在应用中，这是一种最重要的需求，通常，除非特别指定，我们提到的运行时间都是最坏情况的运行时间。</li>\n</ol>\n<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojfsujtsj20j802a3zg.jpg\" alt=\"\"></p>"},{"title":"查找","date":"2017-06-12T14:22:15.000Z","_content":"\n* 查找表：由同一类型的数据元素（或记录）构成的集合。\n* 关键字：数据元素中某个数据项的值，又称为键值。若此关键字可以唯一地标识一个记录，则称此关键字为主关键字。主关键字所在的数据项称为主关键码。对于可以识别多个数据元素（或记录）的关键字，称为次关键字；对应的数据项就是次关键码。\n<!-- more -->\n* 定义\n    * 根据给定的某个值，在查找表中确定一个其关键字等于给定值的数据元素（或记录）。\n* 静态查找表：只作查找操作的查找表。\n    * 查询某个“特定的”数据元素是否在查找表中。\n    * 检索某个“特定的”数据元素和各种属性。\n* 动态查找表：在查找过程中同时插入查找表中不存在的元素或删除已经存在的某个元素。\n    * 查找时插入数据元素。\n    * 查找时删除数据元素。\n* 顺序表查找\n    * 顺序查找（SequentialSearch）又叫线性查找，是最基本的査找技术，它的查找过程是：从表中第一个（或最后一个）记录开始，逐个进行记录的关键字和给定值比较，若某个记录的关键字和给定值相等，则查找成功，找到所査的记录；如果直到最后一个（或第一个）记录，其关键字和给定值比较都不等时，则表中没有所查的记录查找不成功。时间复杂度是O(n)。\n* 有序表查找\n    * 折半查找（二分查找）：线性表中的记录必须是关键码有序（通常是从小到大有序），线性表必须采用顺序存储。时间复杂度是O(logn)。\n    * 插值查找：根据要查找的关键字key与查找表中最大最小记录的关键字比较后的查找办法。其核心就在于插值的计算公式：![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokofudf1j203701ewee.jpg)mid = low + (high -low) * (key - a[low])/(a[high] - a[low])；对于表长较大，而关键字分布又比较均匀的查找表来说，插值查找算法的平均性能比折半查找要好得多；反之，对于极端不均匀的数据，用插值查找未必是合适的选择。\n    * 斐波拉契查找：利用黄金分割原理来实现。\n* 线性索引查找（线性索引：将索引项集合组织为线性结构，也称为索引表。）\n    * 索引：把一个关键字与它对应的记录相关联的过程。\n    * 三种线性索引：\n        * 稠密索引：在线性索引中，将数据集中的每个记录对应一个索引项。索引项一定是按照关键码有序的排列。\n            * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokpurwboj20bz07zjt2.jpg)\n        * 分块索引：\n            * 块内无序，块间有序\n            * 每块对应一个索引\n            * 索引项的结构分三个数据项\n                * 最大关键码，是的在它之后的下一块中的最小关键字也能比这一块最大的关键字要大。\n                * 块中的记录个数，便于循环时使用\n                * 指向块首元素的指针，便于开始对这一块中记录进行遍历。\n            * 分块索引查找分两步进行\n                * 在分块索引表中查找要查关键字所在的块。\n                * 根据块首指针找到相应的块，并在块中顺序查找关键码。\n            * 分块索引在兼顾了对细分块不需要有序的情况下，大大增加了整体查找的速度，所以普遍被用于数据库表查找等技术应用当中。\n            * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokq5cnlbj20c30d940m.jpg)\n        * 倒排索引\n            * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokqgc2h0j2067062js2.jpg)\n            * 索引项的的通用结构是：\n                * 次关键码：例如上面的“英文单词”。\n                * 记录号表：例如上面的“文章编号”。\n            * 其中记录号表存储具有相同次关键字的所有记录的记录号（可以是指向记录的指针或者是该记录的主关键字）。\n            * 这种索引表中的每一项都包括一个属性值和具有该属性值的各记录的地址。由于不是由记录来确定属性值，而是有属性值来确定记录的位置，因而称为倒排索引。\n            * 优点：查找记录非常快，基本等于生成索引表后，查找时都不用去读取记录，就可以得到结果。\n* 二叉排序树\n    * 又称为二叉查找树。它或者是一棵孔数，或者具有下列性质\n        * 若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值。\n        * 若它的右子树不空，则右子树上所有结点的值军大于它的根结点的值。\n        * 它的左、右子树也分别为二叉排序树。\n        * 对它进行中序遍历时，可以得到一个有序的序列。\n* 平衡二叉树（AVL树）\n    * 高度平衡的二叉排序树，要么他是一棵空树，要么它的左子树和右子树都是平衡二叉树，且左子树和右子树的深度只差的绝对值不超过1。\n    * 左子树深度减去右子树深度的值称为平衡因子BF。所有结点的平衡因子只能是-1，0，1。\n* 多路查找树（B树）\n* 散列表查找（哈希表）概述\n* 散列函数的构造方法\n* 处理散列冲突的方法\n* 散列表查找实现","source":"_posts/数据结构-查找.md","raw":"---\ntitle: 查找\ntags:\n  - 查找\n  - 数据结构\ncategories:\n  - 数据结构\ndate: 2017-06-12 22:22:15\n---\n\n* 查找表：由同一类型的数据元素（或记录）构成的集合。\n* 关键字：数据元素中某个数据项的值，又称为键值。若此关键字可以唯一地标识一个记录，则称此关键字为主关键字。主关键字所在的数据项称为主关键码。对于可以识别多个数据元素（或记录）的关键字，称为次关键字；对应的数据项就是次关键码。\n<!-- more -->\n* 定义\n    * 根据给定的某个值，在查找表中确定一个其关键字等于给定值的数据元素（或记录）。\n* 静态查找表：只作查找操作的查找表。\n    * 查询某个“特定的”数据元素是否在查找表中。\n    * 检索某个“特定的”数据元素和各种属性。\n* 动态查找表：在查找过程中同时插入查找表中不存在的元素或删除已经存在的某个元素。\n    * 查找时插入数据元素。\n    * 查找时删除数据元素。\n* 顺序表查找\n    * 顺序查找（SequentialSearch）又叫线性查找，是最基本的査找技术，它的查找过程是：从表中第一个（或最后一个）记录开始，逐个进行记录的关键字和给定值比较，若某个记录的关键字和给定值相等，则查找成功，找到所査的记录；如果直到最后一个（或第一个）记录，其关键字和给定值比较都不等时，则表中没有所查的记录查找不成功。时间复杂度是O(n)。\n* 有序表查找\n    * 折半查找（二分查找）：线性表中的记录必须是关键码有序（通常是从小到大有序），线性表必须采用顺序存储。时间复杂度是O(logn)。\n    * 插值查找：根据要查找的关键字key与查找表中最大最小记录的关键字比较后的查找办法。其核心就在于插值的计算公式：![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokofudf1j203701ewee.jpg)mid = low + (high -low) * (key - a[low])/(a[high] - a[low])；对于表长较大，而关键字分布又比较均匀的查找表来说，插值查找算法的平均性能比折半查找要好得多；反之，对于极端不均匀的数据，用插值查找未必是合适的选择。\n    * 斐波拉契查找：利用黄金分割原理来实现。\n* 线性索引查找（线性索引：将索引项集合组织为线性结构，也称为索引表。）\n    * 索引：把一个关键字与它对应的记录相关联的过程。\n    * 三种线性索引：\n        * 稠密索引：在线性索引中，将数据集中的每个记录对应一个索引项。索引项一定是按照关键码有序的排列。\n            * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokpurwboj20bz07zjt2.jpg)\n        * 分块索引：\n            * 块内无序，块间有序\n            * 每块对应一个索引\n            * 索引项的结构分三个数据项\n                * 最大关键码，是的在它之后的下一块中的最小关键字也能比这一块最大的关键字要大。\n                * 块中的记录个数，便于循环时使用\n                * 指向块首元素的指针，便于开始对这一块中记录进行遍历。\n            * 分块索引查找分两步进行\n                * 在分块索引表中查找要查关键字所在的块。\n                * 根据块首指针找到相应的块，并在块中顺序查找关键码。\n            * 分块索引在兼顾了对细分块不需要有序的情况下，大大增加了整体查找的速度，所以普遍被用于数据库表查找等技术应用当中。\n            * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokq5cnlbj20c30d940m.jpg)\n        * 倒排索引\n            * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokqgc2h0j2067062js2.jpg)\n            * 索引项的的通用结构是：\n                * 次关键码：例如上面的“英文单词”。\n                * 记录号表：例如上面的“文章编号”。\n            * 其中记录号表存储具有相同次关键字的所有记录的记录号（可以是指向记录的指针或者是该记录的主关键字）。\n            * 这种索引表中的每一项都包括一个属性值和具有该属性值的各记录的地址。由于不是由记录来确定属性值，而是有属性值来确定记录的位置，因而称为倒排索引。\n            * 优点：查找记录非常快，基本等于生成索引表后，查找时都不用去读取记录，就可以得到结果。\n* 二叉排序树\n    * 又称为二叉查找树。它或者是一棵孔数，或者具有下列性质\n        * 若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值。\n        * 若它的右子树不空，则右子树上所有结点的值军大于它的根结点的值。\n        * 它的左、右子树也分别为二叉排序树。\n        * 对它进行中序遍历时，可以得到一个有序的序列。\n* 平衡二叉树（AVL树）\n    * 高度平衡的二叉排序树，要么他是一棵空树，要么它的左子树和右子树都是平衡二叉树，且左子树和右子树的深度只差的绝对值不超过1。\n    * 左子树深度减去右子树深度的值称为平衡因子BF。所有结点的平衡因子只能是-1，0，1。\n* 多路查找树（B树）\n* 散列表查找（哈希表）概述\n* 散列函数的构造方法\n* 处理散列冲突的方法\n* 散列表查找实现","slug":"数据结构-查找","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv541001658ugvj210tr9","content":"<ul>\n<li>查找表：由同一类型的数据元素（或记录）构成的集合。</li>\n<li>关键字：数据元素中某个数据项的值，又称为键值。若此关键字可以唯一地标识一个记录，则称此关键字为主关键字。主关键字所在的数据项称为主关键码。对于可以识别多个数据元素（或记录）的关键字，称为次关键字；对应的数据项就是次关键码。</li>\n</ul>\n<a id=\"more\"></a>\n<ul>\n<li>定义\n<ul>\n<li>根据给定的某个值，在查找表中确定一个其关键字等于给定值的数据元素（或记录）。</li>\n</ul>\n</li>\n<li>静态查找表：只作查找操作的查找表。\n<ul>\n<li>查询某个“特定的”数据元素是否在查找表中。</li>\n<li>检索某个“特定的”数据元素和各种属性。</li>\n</ul>\n</li>\n<li>动态查找表：在查找过程中同时插入查找表中不存在的元素或删除已经存在的某个元素。\n<ul>\n<li>查找时插入数据元素。</li>\n<li>查找时删除数据元素。</li>\n</ul>\n</li>\n<li>顺序表查找\n<ul>\n<li>顺序查找（SequentialSearch）又叫线性查找，是最基本的査找技术，它的查找过程是：从表中第一个（或最后一个）记录开始，逐个进行记录的关键字和给定值比较，若某个记录的关键字和给定值相等，则查找成功，找到所査的记录；如果直到最后一个（或第一个）记录，其关键字和给定值比较都不等时，则表中没有所查的记录查找不成功。时间复杂度是O(n)。</li>\n</ul>\n</li>\n<li>有序表查找\n<ul>\n<li>折半查找（二分查找）：线性表中的记录必须是关键码有序（通常是从小到大有序），线性表必须采用顺序存储。时间复杂度是O(logn)。</li>\n<li>插值查找：根据要查找的关键字key与查找表中最大最小记录的关键字比较后的查找办法。其核心就在于插值的计算公式：<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokofudf1j203701ewee.jpg\" alt=\"\">mid = low + (high -low) * (key - a[low])/(a[high] - a[low])；对于表长较大，而关键字分布又比较均匀的查找表来说，插值查找算法的平均性能比折半查找要好得多；反之，对于极端不均匀的数据，用插值查找未必是合适的选择。</li>\n<li>斐波拉契查找：利用黄金分割原理来实现。</li>\n</ul>\n</li>\n<li>线性索引查找（线性索引：将索引项集合组织为线性结构，也称为索引表。）\n<ul>\n<li>索引：把一个关键字与它对应的记录相关联的过程。</li>\n<li>三种线性索引：\n<ul>\n<li>稠密索引：在线性索引中，将数据集中的每个记录对应一个索引项。索引项一定是按照关键码有序的排列。\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokpurwboj20bz07zjt2.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>分块索引：\n<ul>\n<li>块内无序，块间有序</li>\n<li>每块对应一个索引</li>\n<li>索引项的结构分三个数据项\n<ul>\n<li>最大关键码，是的在它之后的下一块中的最小关键字也能比这一块最大的关键字要大。</li>\n<li>块中的记录个数，便于循环时使用</li>\n<li>指向块首元素的指针，便于开始对这一块中记录进行遍历。</li>\n</ul>\n</li>\n<li>分块索引查找分两步进行\n<ul>\n<li>在分块索引表中查找要查关键字所在的块。</li>\n<li>根据块首指针找到相应的块，并在块中顺序查找关键码。</li>\n</ul>\n</li>\n<li>分块索引在兼顾了对细分块不需要有序的情况下，大大增加了整体查找的速度，所以普遍被用于数据库表查找等技术应用当中。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokq5cnlbj20c30d940m.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>倒排索引\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokqgc2h0j2067062js2.jpg\" alt=\"\"></li>\n<li>索引项的的通用结构是：\n<ul>\n<li>次关键码：例如上面的“英文单词”。</li>\n<li>记录号表：例如上面的“文章编号”。</li>\n</ul>\n</li>\n<li>其中记录号表存储具有相同次关键字的所有记录的记录号（可以是指向记录的指针或者是该记录的主关键字）。</li>\n<li>这种索引表中的每一项都包括一个属性值和具有该属性值的各记录的地址。由于不是由记录来确定属性值，而是有属性值来确定记录的位置，因而称为倒排索引。</li>\n<li>优点：查找记录非常快，基本等于生成索引表后，查找时都不用去读取记录，就可以得到结果。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>二叉排序树\n<ul>\n<li>又称为二叉查找树。它或者是一棵孔数，或者具有下列性质\n<ul>\n<li>若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值。</li>\n<li>若它的右子树不空，则右子树上所有结点的值军大于它的根结点的值。</li>\n<li>它的左、右子树也分别为二叉排序树。</li>\n<li>对它进行中序遍历时，可以得到一个有序的序列。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>平衡二叉树（AVL树）\n<ul>\n<li>高度平衡的二叉排序树，要么他是一棵空树，要么它的左子树和右子树都是平衡二叉树，且左子树和右子树的深度只差的绝对值不超过1。</li>\n<li>左子树深度减去右子树深度的值称为平衡因子BF。所有结点的平衡因子只能是-1，0，1。</li>\n</ul>\n</li>\n<li>多路查找树（B树）</li>\n<li>散列表查找（哈希表）概述</li>\n<li>散列函数的构造方法</li>\n<li>处理散列冲突的方法</li>\n<li>散列表查找实现</li>\n</ul>\n","site":{"data":{}},"excerpt":"<ul>\n<li>查找表：由同一类型的数据元素（或记录）构成的集合。</li>\n<li>关键字：数据元素中某个数据项的值，又称为键值。若此关键字可以唯一地标识一个记录，则称此关键字为主关键字。主关键字所在的数据项称为主关键码。对于可以识别多个数据元素（或记录）的关键字，称为次关键字；对应的数据项就是次关键码。</li>\n</ul>","more":"<ul>\n<li>定义\n<ul>\n<li>根据给定的某个值，在查找表中确定一个其关键字等于给定值的数据元素（或记录）。</li>\n</ul>\n</li>\n<li>静态查找表：只作查找操作的查找表。\n<ul>\n<li>查询某个“特定的”数据元素是否在查找表中。</li>\n<li>检索某个“特定的”数据元素和各种属性。</li>\n</ul>\n</li>\n<li>动态查找表：在查找过程中同时插入查找表中不存在的元素或删除已经存在的某个元素。\n<ul>\n<li>查找时插入数据元素。</li>\n<li>查找时删除数据元素。</li>\n</ul>\n</li>\n<li>顺序表查找\n<ul>\n<li>顺序查找（SequentialSearch）又叫线性查找，是最基本的査找技术，它的查找过程是：从表中第一个（或最后一个）记录开始，逐个进行记录的关键字和给定值比较，若某个记录的关键字和给定值相等，则查找成功，找到所査的记录；如果直到最后一个（或第一个）记录，其关键字和给定值比较都不等时，则表中没有所查的记录查找不成功。时间复杂度是O(n)。</li>\n</ul>\n</li>\n<li>有序表查找\n<ul>\n<li>折半查找（二分查找）：线性表中的记录必须是关键码有序（通常是从小到大有序），线性表必须采用顺序存储。时间复杂度是O(logn)。</li>\n<li>插值查找：根据要查找的关键字key与查找表中最大最小记录的关键字比较后的查找办法。其核心就在于插值的计算公式：<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokofudf1j203701ewee.jpg\" alt=\"\">mid = low + (high -low) * (key - a[low])/(a[high] - a[low])；对于表长较大，而关键字分布又比较均匀的查找表来说，插值查找算法的平均性能比折半查找要好得多；反之，对于极端不均匀的数据，用插值查找未必是合适的选择。</li>\n<li>斐波拉契查找：利用黄金分割原理来实现。</li>\n</ul>\n</li>\n<li>线性索引查找（线性索引：将索引项集合组织为线性结构，也称为索引表。）\n<ul>\n<li>索引：把一个关键字与它对应的记录相关联的过程。</li>\n<li>三种线性索引：\n<ul>\n<li>稠密索引：在线性索引中，将数据集中的每个记录对应一个索引项。索引项一定是按照关键码有序的排列。\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokpurwboj20bz07zjt2.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>分块索引：\n<ul>\n<li>块内无序，块间有序</li>\n<li>每块对应一个索引</li>\n<li>索引项的结构分三个数据项\n<ul>\n<li>最大关键码，是的在它之后的下一块中的最小关键字也能比这一块最大的关键字要大。</li>\n<li>块中的记录个数，便于循环时使用</li>\n<li>指向块首元素的指针，便于开始对这一块中记录进行遍历。</li>\n</ul>\n</li>\n<li>分块索引查找分两步进行\n<ul>\n<li>在分块索引表中查找要查关键字所在的块。</li>\n<li>根据块首指针找到相应的块，并在块中顺序查找关键码。</li>\n</ul>\n</li>\n<li>分块索引在兼顾了对细分块不需要有序的情况下，大大增加了整体查找的速度，所以普遍被用于数据库表查找等技术应用当中。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokq5cnlbj20c30d940m.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>倒排索引\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokqgc2h0j2067062js2.jpg\" alt=\"\"></li>\n<li>索引项的的通用结构是：\n<ul>\n<li>次关键码：例如上面的“英文单词”。</li>\n<li>记录号表：例如上面的“文章编号”。</li>\n</ul>\n</li>\n<li>其中记录号表存储具有相同次关键字的所有记录的记录号（可以是指向记录的指针或者是该记录的主关键字）。</li>\n<li>这种索引表中的每一项都包括一个属性值和具有该属性值的各记录的地址。由于不是由记录来确定属性值，而是有属性值来确定记录的位置，因而称为倒排索引。</li>\n<li>优点：查找记录非常快，基本等于生成索引表后，查找时都不用去读取记录，就可以得到结果。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>二叉排序树\n<ul>\n<li>又称为二叉查找树。它或者是一棵孔数，或者具有下列性质\n<ul>\n<li>若它的左子树不空，则左子树上所有结点的值均小于它的根结点的值。</li>\n<li>若它的右子树不空，则右子树上所有结点的值军大于它的根结点的值。</li>\n<li>它的左、右子树也分别为二叉排序树。</li>\n<li>对它进行中序遍历时，可以得到一个有序的序列。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>平衡二叉树（AVL树）\n<ul>\n<li>高度平衡的二叉排序树，要么他是一棵空树，要么它的左子树和右子树都是平衡二叉树，且左子树和右子树的深度只差的绝对值不超过1。</li>\n<li>左子树深度减去右子树深度的值称为平衡因子BF。所有结点的平衡因子只能是-1，0，1。</li>\n</ul>\n</li>\n<li>多路查找树（B树）</li>\n<li>散列表查找（哈希表）概述</li>\n<li>散列函数的构造方法</li>\n<li>处理散列冲突的方法</li>\n<li>散列表查找实现</li>\n</ul>"},{"title":"栈与队列","date":"2017-06-01T14:22:15.000Z","_content":"\n* 栈是限定仅在表尾进行插入和删除操作的线性表。\n    * 我们把允许插入和删除的一端称为栈顶（top），另一端称为栈底（bottom），不含任何数据元素的栈称为空栈。栈又称为后进先出（LastInFirstOut）的线性表，筒称 LIFO 结构。\n    * 栈的插入操作，叫作进栈，也称压栈、入栈。\n    * 栈的删除操作，叫作出栈，也有的叫作弹栈。\n<!-- more -->\n* 栈的抽象数据类型\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojvhrtxlj20h009k10k.jpg)\n* 栈的顺序存储结构及实现\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojvrby1rj20g6086wkm.jpg)\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojvzssn2j20hh06ltdf.jpg)\n    * 两栈共享空间\n        * 如果两个栈的空间需求有相反关系，可以采用这种数据结构。\n* 栈的链式存储结构及实现\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojw7oco7j206j08y74y.jpg)\n    * 栈顶放在单链表的头部\n    * 不需要头结点\n    * 不存在栈满的情况\n    * 空栈：top = NULL\n    * 进栈操作\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojwietm7j206p0953z8.jpg)\n    * 出栈操作\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojwouoxxj206d08tjrz.jpg)\n* 栈的作用\n    * 栈的引入简化了程序设计的问题，划分了不同关注层次，使得思考范围缩小，更加聚焦于我们要解决的问题核心。反之，像数组等，因为要分散精力去考虑数组的下标增减等细节问题，反而掩盖了问题的本质。\n* 队列的定义\n    * 队列是只允许在一端进行插入操作，在另一端进行删除操作的线性表。\n* 队列的抽象数据类型\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojwxpm4qj20yi0jangu.jpg)\n* 循环队列\n    * 队列顺序存储的不足\n        * 在对尾追加一个元素，不需要移动任何元素，时间复杂度为O(1)，但是从对头出列一个元素时，所有的元素都要向前移动，时间复杂度为O(n)。\n    * 循环队列的出现就是为了解决队列顺序存储的不足的。\n    * 我们把队列的这种头尾相接的顺序存储结构称为循环队列。\n    * 当队列空时，条件就是 front=rear，当队列满时，我们修改其条件，保留一个元素空间。也就是说，队列满时，数组中还有一个空闲单元。例如图 4-12-8 所示，我们就认为此队列已经满了。\n    * 通用的计算队列长度的计算公式：(rear - front + QueueSize) % QueueSize\n* 队列的链式存储及实现\n    * 入队操作：直接在链表尾部插入结点\n    * 将头结点的后继改为它后面的结点\n* 循环队列和链队列的比较\n    * 时间复杂度都是O(1)\n    * 循环队列需要事先申请好空间，使用期间不释放\n* 总结\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojx5rq0pj20ms09ggp7.jpg)","source":"_posts/数据结构-栈与队列.md","raw":"---\ntitle: 栈与队列\ntags:\n  - 栈\n  - 队列\n  - 数据结构\ncategories:\n  - 数据结构\ndate: 2017-06-01 22:22:15\n---\n\n* 栈是限定仅在表尾进行插入和删除操作的线性表。\n    * 我们把允许插入和删除的一端称为栈顶（top），另一端称为栈底（bottom），不含任何数据元素的栈称为空栈。栈又称为后进先出（LastInFirstOut）的线性表，筒称 LIFO 结构。\n    * 栈的插入操作，叫作进栈，也称压栈、入栈。\n    * 栈的删除操作，叫作出栈，也有的叫作弹栈。\n<!-- more -->\n* 栈的抽象数据类型\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojvhrtxlj20h009k10k.jpg)\n* 栈的顺序存储结构及实现\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojvrby1rj20g6086wkm.jpg)\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojvzssn2j20hh06ltdf.jpg)\n    * 两栈共享空间\n        * 如果两个栈的空间需求有相反关系，可以采用这种数据结构。\n* 栈的链式存储结构及实现\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojw7oco7j206j08y74y.jpg)\n    * 栈顶放在单链表的头部\n    * 不需要头结点\n    * 不存在栈满的情况\n    * 空栈：top = NULL\n    * 进栈操作\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojwietm7j206p0953z8.jpg)\n    * 出栈操作\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojwouoxxj206d08tjrz.jpg)\n* 栈的作用\n    * 栈的引入简化了程序设计的问题，划分了不同关注层次，使得思考范围缩小，更加聚焦于我们要解决的问题核心。反之，像数组等，因为要分散精力去考虑数组的下标增减等细节问题，反而掩盖了问题的本质。\n* 队列的定义\n    * 队列是只允许在一端进行插入操作，在另一端进行删除操作的线性表。\n* 队列的抽象数据类型\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojwxpm4qj20yi0jangu.jpg)\n* 循环队列\n    * 队列顺序存储的不足\n        * 在对尾追加一个元素，不需要移动任何元素，时间复杂度为O(1)，但是从对头出列一个元素时，所有的元素都要向前移动，时间复杂度为O(n)。\n    * 循环队列的出现就是为了解决队列顺序存储的不足的。\n    * 我们把队列的这种头尾相接的顺序存储结构称为循环队列。\n    * 当队列空时，条件就是 front=rear，当队列满时，我们修改其条件，保留一个元素空间。也就是说，队列满时，数组中还有一个空闲单元。例如图 4-12-8 所示，我们就认为此队列已经满了。\n    * 通用的计算队列长度的计算公式：(rear - front + QueueSize) % QueueSize\n* 队列的链式存储及实现\n    * 入队操作：直接在链表尾部插入结点\n    * 将头结点的后继改为它后面的结点\n* 循环队列和链队列的比较\n    * 时间复杂度都是O(1)\n    * 循环队列需要事先申请好空间，使用期间不释放\n* 总结\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojx5rq0pj20ms09ggp7.jpg)","slug":"数据结构-栈与队列","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv543001958ug8d5vjfs5","content":"<ul>\n<li>栈是限定仅在表尾进行插入和删除操作的线性表。\n<ul>\n<li>我们把允许插入和删除的一端称为栈顶（top），另一端称为栈底（bottom），不含任何数据元素的栈称为空栈。栈又称为后进先出（LastInFirstOut）的线性表，筒称 LIFO 结构。</li>\n<li>栈的插入操作，叫作进栈，也称压栈、入栈。</li>\n<li>栈的删除操作，叫作出栈，也有的叫作弹栈。</li>\n</ul>\n</li>\n</ul>\n<a id=\"more\"></a>\n<ul>\n<li>栈的抽象数据类型\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojvhrtxlj20h009k10k.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>栈的顺序存储结构及实现\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojvrby1rj20g6086wkm.jpg\" alt=\"\"></li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojvzssn2j20hh06ltdf.jpg\" alt=\"\"></li>\n<li>两栈共享空间\n<ul>\n<li>如果两个栈的空间需求有相反关系，可以采用这种数据结构。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>栈的链式存储结构及实现\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojw7oco7j206j08y74y.jpg\" alt=\"\"></li>\n<li>栈顶放在单链表的头部</li>\n<li>不需要头结点</li>\n<li>不存在栈满的情况</li>\n<li>空栈：top = NULL</li>\n<li>进栈操作\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojwietm7j206p0953z8.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>出栈操作\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojwouoxxj206d08tjrz.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>栈的作用\n<ul>\n<li>栈的引入简化了程序设计的问题，划分了不同关注层次，使得思考范围缩小，更加聚焦于我们要解决的问题核心。反之，像数组等，因为要分散精力去考虑数组的下标增减等细节问题，反而掩盖了问题的本质。</li>\n</ul>\n</li>\n<li>队列的定义\n<ul>\n<li>队列是只允许在一端进行插入操作，在另一端进行删除操作的线性表。</li>\n</ul>\n</li>\n<li>队列的抽象数据类型\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojwxpm4qj20yi0jangu.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>循环队列\n<ul>\n<li>队列顺序存储的不足\n<ul>\n<li>在对尾追加一个元素，不需要移动任何元素，时间复杂度为O(1)，但是从对头出列一个元素时，所有的元素都要向前移动，时间复杂度为O(n)。</li>\n</ul>\n</li>\n<li>循环队列的出现就是为了解决队列顺序存储的不足的。</li>\n<li>我们把队列的这种头尾相接的顺序存储结构称为循环队列。</li>\n<li>当队列空时，条件就是 front=rear，当队列满时，我们修改其条件，保留一个元素空间。也就是说，队列满时，数组中还有一个空闲单元。例如图 4-12-8 所示，我们就认为此队列已经满了。</li>\n<li>通用的计算队列长度的计算公式：(rear - front + QueueSize) % QueueSize</li>\n</ul>\n</li>\n<li>队列的链式存储及实现\n<ul>\n<li>入队操作：直接在链表尾部插入结点</li>\n<li>将头结点的后继改为它后面的结点</li>\n</ul>\n</li>\n<li>循环队列和链队列的比较\n<ul>\n<li>时间复杂度都是O(1)</li>\n<li>循环队列需要事先申请好空间，使用期间不释放</li>\n</ul>\n</li>\n<li>总结\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojx5rq0pj20ms09ggp7.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<ul>\n<li>栈是限定仅在表尾进行插入和删除操作的线性表。\n<ul>\n<li>我们把允许插入和删除的一端称为栈顶（top），另一端称为栈底（bottom），不含任何数据元素的栈称为空栈。栈又称为后进先出（LastInFirstOut）的线性表，筒称 LIFO 结构。</li>\n<li>栈的插入操作，叫作进栈，也称压栈、入栈。</li>\n<li>栈的删除操作，叫作出栈，也有的叫作弹栈。</li>\n</ul>\n</li>\n</ul>","more":"<ul>\n<li>栈的抽象数据类型\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojvhrtxlj20h009k10k.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>栈的顺序存储结构及实现\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojvrby1rj20g6086wkm.jpg\" alt=\"\"></li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojvzssn2j20hh06ltdf.jpg\" alt=\"\"></li>\n<li>两栈共享空间\n<ul>\n<li>如果两个栈的空间需求有相反关系，可以采用这种数据结构。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>栈的链式存储结构及实现\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojw7oco7j206j08y74y.jpg\" alt=\"\"></li>\n<li>栈顶放在单链表的头部</li>\n<li>不需要头结点</li>\n<li>不存在栈满的情况</li>\n<li>空栈：top = NULL</li>\n<li>进栈操作\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojwietm7j206p0953z8.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>出栈操作\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojwouoxxj206d08tjrz.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>栈的作用\n<ul>\n<li>栈的引入简化了程序设计的问题，划分了不同关注层次，使得思考范围缩小，更加聚焦于我们要解决的问题核心。反之，像数组等，因为要分散精力去考虑数组的下标增减等细节问题，反而掩盖了问题的本质。</li>\n</ul>\n</li>\n<li>队列的定义\n<ul>\n<li>队列是只允许在一端进行插入操作，在另一端进行删除操作的线性表。</li>\n</ul>\n</li>\n<li>队列的抽象数据类型\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojwxpm4qj20yi0jangu.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>循环队列\n<ul>\n<li>队列顺序存储的不足\n<ul>\n<li>在对尾追加一个元素，不需要移动任何元素，时间复杂度为O(1)，但是从对头出列一个元素时，所有的元素都要向前移动，时间复杂度为O(n)。</li>\n</ul>\n</li>\n<li>循环队列的出现就是为了解决队列顺序存储的不足的。</li>\n<li>我们把队列的这种头尾相接的顺序存储结构称为循环队列。</li>\n<li>当队列空时，条件就是 front=rear，当队列满时，我们修改其条件，保留一个元素空间。也就是说，队列满时，数组中还有一个空闲单元。例如图 4-12-8 所示，我们就认为此队列已经满了。</li>\n<li>通用的计算队列长度的计算公式：(rear - front + QueueSize) % QueueSize</li>\n</ul>\n</li>\n<li>队列的链式存储及实现\n<ul>\n<li>入队操作：直接在链表尾部插入结点</li>\n<li>将头结点的后继改为它后面的结点</li>\n</ul>\n</li>\n<li>循环队列和链队列的比较\n<ul>\n<li>时间复杂度都是O(1)</li>\n<li>循环队列需要事先申请好空间，使用期间不释放</li>\n</ul>\n</li>\n<li>总结\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojx5rq0pj20ms09ggp7.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>"},{"title":"用Java实现各种排序","date":"2017-06-18T13:22:15.000Z","_content":"用Java实现各种排序。\n<!-- more -->\n```java\npublic class Sort {\n    private void swap(int[] arrs, int i, int j) {\n        int temp = arrs[i];\n        arrs[i] = arrs[j];\n        arrs[j] = temp;\n    }\n    /**\n     * 冒泡排序基本版\n     */\n    private void bubbleSort(int[] arrs) {\n        for (int i = 0; i < arrs.length; i++) {\n            for (int j = arrs.length - 2; j >= i; j--) {\n                System.out.println(\"--------------------\");\n                if (arrs[j] > arrs[j + 1]) {\n                    swap(arrs, j, j + 1);\n                }\n            }\n        }\n    }\n\n    /**\n     * 冒泡排序改进版\n     * 改进版的效率要高很多，遍历的次数明显减少了。\n     */\n    private void bubbleSort2(int[] arrs) {\n        boolean flag = true;\n        for (int i = 0; i < arrs.length && flag; i++) {\n            flag = false;\n            for (int j = arrs.length - 2; j >= i; j--) {\n                System.out.println(\"--------------------\");\n                if (arrs[j] > arrs[j + 1]) {\n                    swap(arrs, j, j + 1);\n                    flag = true;\n                }\n            }\n        }\n    }\n\n    @Test\n    public void testBubbleSort() {\n        int[] arrs = {12, 3, 44, 55, 11, 13, 9, 66, 78, 0, 54, 88};\n        bubbleSort(arrs);\n        System.out.println(Arrays.toString(arrs));\n\n        bubbleSort2(arrs);\n        System.out.println(Arrays.toString(arrs));\n    }\n\n\n    /**\n     * 简单选择排序算法\n     */\n    private void selectSort(int[] arrs) {\n        for (int i = 0; i < arrs.length; i++) {\n            int min = i;//默认定义第一个元素的下标是最小元素的下标\n            for (int j = i + 1; j < arrs.length; j++) {\n                System.out.println(\"++++++++++++++++++\");\n                if (arrs[min] > arrs[j]) {  //让第一个元素与剩下的所有元素比较，取出最小元素的下标赋值给min\n                    min = j;\n                }\n            }\n            if (i != min) {//如果最小元素的下标不是第一个了，证明中间有比第一个元素要小的元素，让第一个元素与该元素进行交换\n                swap(arrs, i, min);\n                System.out.println(\"--------------------\");\n            }\n        }\n    }\n\n    @Test\n    public void testSelectSort() {\n        int[] arrs = {12, 3, 44, 55, 11, 13, 9, 66, 78, 0, 54, 88};\n        selectSort(arrs);\n        System.out.println(Arrays.toString(arrs));\n\n    }\n\n\n    /**\n     * 直接插入排序算法\n     */\n    private void insertSort(int[] arrs) {\n        for (int i = 1; i < arrs.length; i++) {\n            int temp = arrs[i]; //取出一个待插入的记录\n            int j;\n            for (j = i - 1; j >= 0; j--) {\n                System.out.println(\"--------------------\");\n                if (temp < arrs[j]) {   //从后往前遍历已经排好序的有序表，判断带插入记录与其中每个记录的大小，如果待插入记录要小于有序表中的某个记录，就将有序表中该记录往后移动，空出一个位置，如果不小于，则终止循环。\n                    arrs[j + 1] = arrs[j];\n                } else {\n                    break;\n                }\n            }\n            arrs[j + 1] = temp;    //将空出的这个位置赋值为待插入的元素。\n        }\n    }\n\n    @Test\n    public void testInsertSort() {\n        int[] arrs = {12, 3, 44, 55, 11, 13, 9, 66, 78, 0, 54, 88};\n        insertSort(arrs);\n        System.out.println(Arrays.toString(arrs));\n    }\n\n\n    /**\n     * 希尔排序\n     * 和直接插入排序的算法形式是一样的，只不过加入了一个步长。\n     */\n    private void shellSort(int[] arrs) {\n        int temp;\n        int j;\n        for (int increment = arrs.length / 2; increment > 0; increment /= 2) {\n            for (int i = increment; i < arrs.length; i++) {\n                temp = arrs[i];\n                for (j = i - increment; j >= 0; j -= increment) {\n                    System.out.println(\"--------------------\");\n                    if (temp < arrs[j]) {\n                        arrs[j + increment] = arrs[j];\n                    } else {\n                        break;\n                    }\n                }\n                arrs[j + increment] = temp;\n            }\n        }\n    }\n\n    @Test\n    public void testShellSort() {\n        int[] arrs = {12, 3, 44, 55, 11, 13, 9, 66, 78, 0, 54, 88};\n        shellSort(arrs);\n        System.out.println(Arrays.toString(arrs));\n    }\n\n\n    /**\n     * 堆排序\n     */\n    private void heapSort(int[] arrs) {\n        int i;\n        for (i = arrs.length / 2 - 1; i >= 0; i--) {// 构建一个大顶堆\n            adjustHeap(arrs, i, arrs.length - 1);\n        }\n        for (i = arrs.length - 1; i >= 0; i--) {// 将堆顶记录和当前未经排序子序列的最后一个记录交换\n            int temp = arrs[0];\n            arrs[0] = arrs[i];\n            arrs[i] = temp;\n            adjustHeap(arrs, 0, i - 1);// 将a中前i-1个记录重新调整为大顶堆\n        }\n    }\n\n    private void adjustHeap(int[] arrs, int i, int len) {\n        int temp, j;\n        temp = arrs[i];\n        for (j = 2 * i; j < len; j *= 2) {// 沿关键字较大的孩子结点向下筛选\n            if (j < len && arrs[j] < arrs[j + 1])\n                ++j; // j为关键字中较大记录的下标\n            if (temp >= arrs[j])\n                break;\n            arrs[i] = arrs[j];\n            i = j;\n        }\n        arrs[i] = temp;\n    }\n\n    @Test\n    public void testHeapSort() {\n        int[] arrs = {12, 3, 44, 55, 11, 13, 9, 66, 78, 0, 54, 88};\n        heapSort(arrs);\n        System.out.println(Arrays.toString(arrs));\n    }\n\n\n    /**\n     * 归并排序\n     */\n    private void mergeSort(int[] arrs) {\n        mSort(arrs, 0, arrs.length - 1);\n    }\n\n    private void mSort(int[] arrs, int low, int high) {\n//      int mid = (low + high) / 2;\n        int mid = low + (high - low) / 2;\n        if (low < high) {\n            //左边\n            mSort(arrs, low, mid);\n            //右边\n            mSort(arrs, mid + 1, high);\n            //左右合并\n            merge(arrs, low, mid, high);\n        }\n    }\n\n    private  void merge(int[] arrs, int low, int mid, int high) {\n        int[] temp = new int[high - low + 1];\n        int i = low;// 左指针\n        int j = mid + 1;// 右指针\n        int k = 0;\n        // 把较小的数先移到新数组中\n        while (i <= mid && j <= high) {\n            if (arrs[i] < arrs[j]) {\n                temp[k++] = arrs[i++];\n            } else {\n                temp[k++] = arrs[j++];\n            }\n        }\n        // 把左边剩余的数移入数组\n        while (i <= mid) {\n            temp[k++] = arrs[i++];\n        }\n        // 把右边边剩余的数移入数组\n        while (j <= high) {\n            temp[k++] = arrs[j++];\n        }\n        // 把新数组中的数覆盖nums数组\n        for (int k2 = 0; k2 < temp.length; k2++) {\n            arrs[k2 + low] = temp[k2];\n        }\n    }\n\n    @Test\n    public void testMergeSort() {\n        int[] arrs = {12, 3, 44, 55, 11, 13, 9, 66, 78, 0, 54, 88};\n        mergeSort(arrs);\n        System.out.println(Arrays.toString(arrs));\n    }\n\n\n    /**\n     * 快速排序\n     */\n    private void quickSort(int[] arrs) {\n        qSort(arrs, 0, arrs.length - 1);\n    }\n\n    private void qSort(int[] arrs, int low, int high) {\n        int mid;\n        if (low < high) {\n            mid = partition(arrs, low, high);\n            qSort(arrs, low, mid);\n            qSort(arrs, mid + 1, high);\n        }\n    }\n\n    private int partition(int[] arrs, int low, int high) {\n        int midKey = arrs[low]; //用子表的第一个记录作为枢轴记录\n        while (low < high) {    //从表的两端交替向中间扫描\n            while (low < high && arrs[high] >= midKey) {\n                high--;\n            }\n            swap(arrs, low, high);  //将比枢轴记录小的记录交换到左边\n            while (low < high && arrs[low] <= midKey) {\n                low++;\n            }\n            swap(arrs, low, high);  //将比枢轴记录大的记录交换到右边\n        }\n        return low;\n    }\n\n    @Test\n    public void testQuickSort() {\n        int[] arrs = {1000,2,3,418,5,100,7,8,9,10,101,242,33,44,55};\n        quickSort(arrs);\n        System.out.println(Arrays.toString(arrs));\n    }\n}\n```","source":"_posts/数据结构-用Java实现各种排序.md","raw":"---\ntitle: 用Java实现各种排序\ntags:\n  - 排序\n  - 数据结构\ncategories:\n  - 数据结构\ndate: 2017-06-18 21:22:15\n---\n用Java实现各种排序。\n<!-- more -->\n```java\npublic class Sort {\n    private void swap(int[] arrs, int i, int j) {\n        int temp = arrs[i];\n        arrs[i] = arrs[j];\n        arrs[j] = temp;\n    }\n    /**\n     * 冒泡排序基本版\n     */\n    private void bubbleSort(int[] arrs) {\n        for (int i = 0; i < arrs.length; i++) {\n            for (int j = arrs.length - 2; j >= i; j--) {\n                System.out.println(\"--------------------\");\n                if (arrs[j] > arrs[j + 1]) {\n                    swap(arrs, j, j + 1);\n                }\n            }\n        }\n    }\n\n    /**\n     * 冒泡排序改进版\n     * 改进版的效率要高很多，遍历的次数明显减少了。\n     */\n    private void bubbleSort2(int[] arrs) {\n        boolean flag = true;\n        for (int i = 0; i < arrs.length && flag; i++) {\n            flag = false;\n            for (int j = arrs.length - 2; j >= i; j--) {\n                System.out.println(\"--------------------\");\n                if (arrs[j] > arrs[j + 1]) {\n                    swap(arrs, j, j + 1);\n                    flag = true;\n                }\n            }\n        }\n    }\n\n    @Test\n    public void testBubbleSort() {\n        int[] arrs = {12, 3, 44, 55, 11, 13, 9, 66, 78, 0, 54, 88};\n        bubbleSort(arrs);\n        System.out.println(Arrays.toString(arrs));\n\n        bubbleSort2(arrs);\n        System.out.println(Arrays.toString(arrs));\n    }\n\n\n    /**\n     * 简单选择排序算法\n     */\n    private void selectSort(int[] arrs) {\n        for (int i = 0; i < arrs.length; i++) {\n            int min = i;//默认定义第一个元素的下标是最小元素的下标\n            for (int j = i + 1; j < arrs.length; j++) {\n                System.out.println(\"++++++++++++++++++\");\n                if (arrs[min] > arrs[j]) {  //让第一个元素与剩下的所有元素比较，取出最小元素的下标赋值给min\n                    min = j;\n                }\n            }\n            if (i != min) {//如果最小元素的下标不是第一个了，证明中间有比第一个元素要小的元素，让第一个元素与该元素进行交换\n                swap(arrs, i, min);\n                System.out.println(\"--------------------\");\n            }\n        }\n    }\n\n    @Test\n    public void testSelectSort() {\n        int[] arrs = {12, 3, 44, 55, 11, 13, 9, 66, 78, 0, 54, 88};\n        selectSort(arrs);\n        System.out.println(Arrays.toString(arrs));\n\n    }\n\n\n    /**\n     * 直接插入排序算法\n     */\n    private void insertSort(int[] arrs) {\n        for (int i = 1; i < arrs.length; i++) {\n            int temp = arrs[i]; //取出一个待插入的记录\n            int j;\n            for (j = i - 1; j >= 0; j--) {\n                System.out.println(\"--------------------\");\n                if (temp < arrs[j]) {   //从后往前遍历已经排好序的有序表，判断带插入记录与其中每个记录的大小，如果待插入记录要小于有序表中的某个记录，就将有序表中该记录往后移动，空出一个位置，如果不小于，则终止循环。\n                    arrs[j + 1] = arrs[j];\n                } else {\n                    break;\n                }\n            }\n            arrs[j + 1] = temp;    //将空出的这个位置赋值为待插入的元素。\n        }\n    }\n\n    @Test\n    public void testInsertSort() {\n        int[] arrs = {12, 3, 44, 55, 11, 13, 9, 66, 78, 0, 54, 88};\n        insertSort(arrs);\n        System.out.println(Arrays.toString(arrs));\n    }\n\n\n    /**\n     * 希尔排序\n     * 和直接插入排序的算法形式是一样的，只不过加入了一个步长。\n     */\n    private void shellSort(int[] arrs) {\n        int temp;\n        int j;\n        for (int increment = arrs.length / 2; increment > 0; increment /= 2) {\n            for (int i = increment; i < arrs.length; i++) {\n                temp = arrs[i];\n                for (j = i - increment; j >= 0; j -= increment) {\n                    System.out.println(\"--------------------\");\n                    if (temp < arrs[j]) {\n                        arrs[j + increment] = arrs[j];\n                    } else {\n                        break;\n                    }\n                }\n                arrs[j + increment] = temp;\n            }\n        }\n    }\n\n    @Test\n    public void testShellSort() {\n        int[] arrs = {12, 3, 44, 55, 11, 13, 9, 66, 78, 0, 54, 88};\n        shellSort(arrs);\n        System.out.println(Arrays.toString(arrs));\n    }\n\n\n    /**\n     * 堆排序\n     */\n    private void heapSort(int[] arrs) {\n        int i;\n        for (i = arrs.length / 2 - 1; i >= 0; i--) {// 构建一个大顶堆\n            adjustHeap(arrs, i, arrs.length - 1);\n        }\n        for (i = arrs.length - 1; i >= 0; i--) {// 将堆顶记录和当前未经排序子序列的最后一个记录交换\n            int temp = arrs[0];\n            arrs[0] = arrs[i];\n            arrs[i] = temp;\n            adjustHeap(arrs, 0, i - 1);// 将a中前i-1个记录重新调整为大顶堆\n        }\n    }\n\n    private void adjustHeap(int[] arrs, int i, int len) {\n        int temp, j;\n        temp = arrs[i];\n        for (j = 2 * i; j < len; j *= 2) {// 沿关键字较大的孩子结点向下筛选\n            if (j < len && arrs[j] < arrs[j + 1])\n                ++j; // j为关键字中较大记录的下标\n            if (temp >= arrs[j])\n                break;\n            arrs[i] = arrs[j];\n            i = j;\n        }\n        arrs[i] = temp;\n    }\n\n    @Test\n    public void testHeapSort() {\n        int[] arrs = {12, 3, 44, 55, 11, 13, 9, 66, 78, 0, 54, 88};\n        heapSort(arrs);\n        System.out.println(Arrays.toString(arrs));\n    }\n\n\n    /**\n     * 归并排序\n     */\n    private void mergeSort(int[] arrs) {\n        mSort(arrs, 0, arrs.length - 1);\n    }\n\n    private void mSort(int[] arrs, int low, int high) {\n//      int mid = (low + high) / 2;\n        int mid = low + (high - low) / 2;\n        if (low < high) {\n            //左边\n            mSort(arrs, low, mid);\n            //右边\n            mSort(arrs, mid + 1, high);\n            //左右合并\n            merge(arrs, low, mid, high);\n        }\n    }\n\n    private  void merge(int[] arrs, int low, int mid, int high) {\n        int[] temp = new int[high - low + 1];\n        int i = low;// 左指针\n        int j = mid + 1;// 右指针\n        int k = 0;\n        // 把较小的数先移到新数组中\n        while (i <= mid && j <= high) {\n            if (arrs[i] < arrs[j]) {\n                temp[k++] = arrs[i++];\n            } else {\n                temp[k++] = arrs[j++];\n            }\n        }\n        // 把左边剩余的数移入数组\n        while (i <= mid) {\n            temp[k++] = arrs[i++];\n        }\n        // 把右边边剩余的数移入数组\n        while (j <= high) {\n            temp[k++] = arrs[j++];\n        }\n        // 把新数组中的数覆盖nums数组\n        for (int k2 = 0; k2 < temp.length; k2++) {\n            arrs[k2 + low] = temp[k2];\n        }\n    }\n\n    @Test\n    public void testMergeSort() {\n        int[] arrs = {12, 3, 44, 55, 11, 13, 9, 66, 78, 0, 54, 88};\n        mergeSort(arrs);\n        System.out.println(Arrays.toString(arrs));\n    }\n\n\n    /**\n     * 快速排序\n     */\n    private void quickSort(int[] arrs) {\n        qSort(arrs, 0, arrs.length - 1);\n    }\n\n    private void qSort(int[] arrs, int low, int high) {\n        int mid;\n        if (low < high) {\n            mid = partition(arrs, low, high);\n            qSort(arrs, low, mid);\n            qSort(arrs, mid + 1, high);\n        }\n    }\n\n    private int partition(int[] arrs, int low, int high) {\n        int midKey = arrs[low]; //用子表的第一个记录作为枢轴记录\n        while (low < high) {    //从表的两端交替向中间扫描\n            while (low < high && arrs[high] >= midKey) {\n                high--;\n            }\n            swap(arrs, low, high);  //将比枢轴记录小的记录交换到左边\n            while (low < high && arrs[low] <= midKey) {\n                low++;\n            }\n            swap(arrs, low, high);  //将比枢轴记录大的记录交换到右边\n        }\n        return low;\n    }\n\n    @Test\n    public void testQuickSort() {\n        int[] arrs = {1000,2,3,418,5,100,7,8,9,10,101,242,33,44,55};\n        quickSort(arrs);\n        System.out.println(Arrays.toString(arrs));\n    }\n}\n```","slug":"数据结构-用Java实现各种排序","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv544001d58ugkzr1td8f","content":"<p>用Java实现各种排序。</p>\n<a id=\"more\"></a>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Sort</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs, <span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> j)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp = arrs[i];</span><br><span class=\"line\">        arrs[i] = arrs[j];</span><br><span class=\"line\">        arrs[j] = temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 冒泡排序基本版</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">bubbleSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arrs.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = arrs.length - <span class=\"number\">2</span>; j &gt;= i; j--) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"--------------------\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arrs[j] &gt; arrs[j + <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                    swap(arrs, j, j + <span class=\"number\">1</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 冒泡排序改进版</span></span><br><span class=\"line\"><span class=\"comment\">     * 改进版的效率要高很多，遍历的次数明显减少了。</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">bubbleSort2</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> flag = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arrs.length &amp;&amp; flag; i++) &#123;</span><br><span class=\"line\">            flag = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = arrs.length - <span class=\"number\">2</span>; j &gt;= i; j--) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"--------------------\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arrs[j] &gt; arrs[j + <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                    swap(arrs, j, j + <span class=\"number\">1</span>);</span><br><span class=\"line\">                    flag = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testBubbleSort</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] arrs = &#123;<span class=\"number\">12</span>, <span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">55</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">9</span>, <span class=\"number\">66</span>, <span class=\"number\">78</span>, <span class=\"number\">0</span>, <span class=\"number\">54</span>, <span class=\"number\">88</span>&#125;;</span><br><span class=\"line\">        bubbleSort(arrs);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arrs));</span><br><span class=\"line\"></span><br><span class=\"line\">        bubbleSort2(arrs);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arrs));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 简单选择排序算法</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">selectSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arrs.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> min = i;<span class=\"comment\">//默认定义第一个元素的下标是最小元素的下标</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i + <span class=\"number\">1</span>; j &lt; arrs.length; j++) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"++++++++++++++++++\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arrs[min] &gt; arrs[j]) &#123;  <span class=\"comment\">//让第一个元素与剩下的所有元素比较，取出最小元素的下标赋值给min</span></span><br><span class=\"line\">                    min = j;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i != min) &#123;<span class=\"comment\">//如果最小元素的下标不是第一个了，证明中间有比第一个元素要小的元素，让第一个元素与该元素进行交换</span></span><br><span class=\"line\">                swap(arrs, i, min);</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"--------------------\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testSelectSort</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] arrs = &#123;<span class=\"number\">12</span>, <span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">55</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">9</span>, <span class=\"number\">66</span>, <span class=\"number\">78</span>, <span class=\"number\">0</span>, <span class=\"number\">54</span>, <span class=\"number\">88</span>&#125;;</span><br><span class=\"line\">        selectSort(arrs);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arrs));</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 直接插入排序算法</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">insertSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; arrs.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = arrs[i]; <span class=\"comment\">//取出一个待插入的记录</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> j;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (j = i - <span class=\"number\">1</span>; j &gt;= <span class=\"number\">0</span>; j--) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"--------------------\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (temp &lt; arrs[j]) &#123;   <span class=\"comment\">//从后往前遍历已经排好序的有序表，判断带插入记录与其中每个记录的大小，如果待插入记录要小于有序表中的某个记录，就将有序表中该记录往后移动，空出一个位置，如果不小于，则终止循环。</span></span><br><span class=\"line\">                    arrs[j + <span class=\"number\">1</span>] = arrs[j];</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            arrs[j + <span class=\"number\">1</span>] = temp;    <span class=\"comment\">//将空出的这个位置赋值为待插入的元素。</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testInsertSort</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] arrs = &#123;<span class=\"number\">12</span>, <span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">55</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">9</span>, <span class=\"number\">66</span>, <span class=\"number\">78</span>, <span class=\"number\">0</span>, <span class=\"number\">54</span>, <span class=\"number\">88</span>&#125;;</span><br><span class=\"line\">        insertSort(arrs);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arrs));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 希尔排序</span></span><br><span class=\"line\"><span class=\"comment\">     * 和直接插入排序的算法形式是一样的，只不过加入了一个步长。</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">shellSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> j;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> increment = arrs.length / <span class=\"number\">2</span>; increment &gt; <span class=\"number\">0</span>; increment /= <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = increment; i &lt; arrs.length; i++) &#123;</span><br><span class=\"line\">                temp = arrs[i];</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (j = i - increment; j &gt;= <span class=\"number\">0</span>; j -= increment) &#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">\"--------------------\"</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (temp &lt; arrs[j]) &#123;</span><br><span class=\"line\">                        arrs[j + increment] = arrs[j];</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                arrs[j + increment] = temp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testShellSort</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] arrs = &#123;<span class=\"number\">12</span>, <span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">55</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">9</span>, <span class=\"number\">66</span>, <span class=\"number\">78</span>, <span class=\"number\">0</span>, <span class=\"number\">54</span>, <span class=\"number\">88</span>&#125;;</span><br><span class=\"line\">        shellSort(arrs);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arrs));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 堆排序</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">heapSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = arrs.length / <span class=\"number\">2</span> - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;<span class=\"comment\">// 构建一个大顶堆</span></span><br><span class=\"line\">            adjustHeap(arrs, i, arrs.length - <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = arrs.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;<span class=\"comment\">// 将堆顶记录和当前未经排序子序列的最后一个记录交换</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = arrs[<span class=\"number\">0</span>];</span><br><span class=\"line\">            arrs[<span class=\"number\">0</span>] = arrs[i];</span><br><span class=\"line\">            arrs[i] = temp;</span><br><span class=\"line\">            adjustHeap(arrs, <span class=\"number\">0</span>, i - <span class=\"number\">1</span>);<span class=\"comment\">// 将a中前i-1个记录重新调整为大顶堆</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">adjustHeap</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs, <span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> len)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp, j;</span><br><span class=\"line\">        temp = arrs[i];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">2</span> * i; j &lt; len; j *= <span class=\"number\">2</span>) &#123;<span class=\"comment\">// 沿关键字较大的孩子结点向下筛选</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (j &lt; len &amp;&amp; arrs[j] &lt; arrs[j + <span class=\"number\">1</span>])</span><br><span class=\"line\">                ++j; <span class=\"comment\">// j为关键字中较大记录的下标</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (temp &gt;= arrs[j])</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            arrs[i] = arrs[j];</span><br><span class=\"line\">            i = j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        arrs[i] = temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testHeapSort</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] arrs = &#123;<span class=\"number\">12</span>, <span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">55</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">9</span>, <span class=\"number\">66</span>, <span class=\"number\">78</span>, <span class=\"number\">0</span>, <span class=\"number\">54</span>, <span class=\"number\">88</span>&#125;;</span><br><span class=\"line\">        heapSort(arrs);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arrs));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 归并排序</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">mergeSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs)</span> </span>&#123;</span><br><span class=\"line\">        mSort(arrs, <span class=\"number\">0</span>, arrs.length - <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">mSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs, <span class=\"keyword\">int</span> low, <span class=\"keyword\">int</span> high)</span> </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//      int mid = (low + high) / 2;</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> mid = low + (high - low) / <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (low &lt; high) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//左边</span></span><br><span class=\"line\">            mSort(arrs, low, mid);</span><br><span class=\"line\">            <span class=\"comment\">//右边</span></span><br><span class=\"line\">            mSort(arrs, mid + <span class=\"number\">1</span>, high);</span><br><span class=\"line\">            <span class=\"comment\">//左右合并</span></span><br><span class=\"line\">            merge(arrs, low, mid, high);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span>  <span class=\"keyword\">void</span> <span class=\"title\">merge</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs, <span class=\"keyword\">int</span> low, <span class=\"keyword\">int</span> mid, <span class=\"keyword\">int</span> high)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] temp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[high - low + <span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i = low;<span class=\"comment\">// 左指针</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> j = mid + <span class=\"number\">1</span>;<span class=\"comment\">// 右指针</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> k = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 把较小的数先移到新数组中</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i &lt;= mid &amp;&amp; j &lt;= high) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arrs[i] &lt; arrs[j]) &#123;</span><br><span class=\"line\">                temp[k++] = arrs[i++];</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                temp[k++] = arrs[j++];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 把左边剩余的数移入数组</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i &lt;= mid) &#123;</span><br><span class=\"line\">            temp[k++] = arrs[i++];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 把右边边剩余的数移入数组</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (j &lt;= high) &#123;</span><br><span class=\"line\">            temp[k++] = arrs[j++];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 把新数组中的数覆盖nums数组</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k2 = <span class=\"number\">0</span>; k2 &lt; temp.length; k2++) &#123;</span><br><span class=\"line\">            arrs[k2 + low] = temp[k2];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testMergeSort</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] arrs = &#123;<span class=\"number\">12</span>, <span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">55</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">9</span>, <span class=\"number\">66</span>, <span class=\"number\">78</span>, <span class=\"number\">0</span>, <span class=\"number\">54</span>, <span class=\"number\">88</span>&#125;;</span><br><span class=\"line\">        mergeSort(arrs);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arrs));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 快速排序</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">quickSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs)</span> </span>&#123;</span><br><span class=\"line\">        qSort(arrs, <span class=\"number\">0</span>, arrs.length - <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">qSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs, <span class=\"keyword\">int</span> low, <span class=\"keyword\">int</span> high)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mid;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (low &lt; high) &#123;</span><br><span class=\"line\">            mid = partition(arrs, low, high);</span><br><span class=\"line\">            qSort(arrs, low, mid);</span><br><span class=\"line\">            qSort(arrs, mid + <span class=\"number\">1</span>, high);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">partition</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs, <span class=\"keyword\">int</span> low, <span class=\"keyword\">int</span> high)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> midKey = arrs[low]; <span class=\"comment\">//用子表的第一个记录作为枢轴记录</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (low &lt; high) &#123;    <span class=\"comment\">//从表的两端交替向中间扫描</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (low &lt; high &amp;&amp; arrs[high] &gt;= midKey) &#123;</span><br><span class=\"line\">                high--;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            swap(arrs, low, high);  <span class=\"comment\">//将比枢轴记录小的记录交换到左边</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (low &lt; high &amp;&amp; arrs[low] &lt;= midKey) &#123;</span><br><span class=\"line\">                low++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            swap(arrs, low, high);  <span class=\"comment\">//将比枢轴记录大的记录交换到右边</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> low;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testQuickSort</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] arrs = &#123;<span class=\"number\">1000</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">418</span>,<span class=\"number\">5</span>,<span class=\"number\">100</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">101</span>,<span class=\"number\">242</span>,<span class=\"number\">33</span>,<span class=\"number\">44</span>,<span class=\"number\">55</span>&#125;;</span><br><span class=\"line\">        quickSort(arrs);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arrs));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>用Java实现各种排序。</p>","more":"<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Sort</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">swap</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs, <span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> j)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp = arrs[i];</span><br><span class=\"line\">        arrs[i] = arrs[j];</span><br><span class=\"line\">        arrs[j] = temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 冒泡排序基本版</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">bubbleSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arrs.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = arrs.length - <span class=\"number\">2</span>; j &gt;= i; j--) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"--------------------\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arrs[j] &gt; arrs[j + <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                    swap(arrs, j, j + <span class=\"number\">1</span>);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 冒泡排序改进版</span></span><br><span class=\"line\"><span class=\"comment\">     * 改进版的效率要高很多，遍历的次数明显减少了。</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">bubbleSort2</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> flag = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arrs.length &amp;&amp; flag; i++) &#123;</span><br><span class=\"line\">            flag = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = arrs.length - <span class=\"number\">2</span>; j &gt;= i; j--) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"--------------------\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arrs[j] &gt; arrs[j + <span class=\"number\">1</span>]) &#123;</span><br><span class=\"line\">                    swap(arrs, j, j + <span class=\"number\">1</span>);</span><br><span class=\"line\">                    flag = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testBubbleSort</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] arrs = &#123;<span class=\"number\">12</span>, <span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">55</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">9</span>, <span class=\"number\">66</span>, <span class=\"number\">78</span>, <span class=\"number\">0</span>, <span class=\"number\">54</span>, <span class=\"number\">88</span>&#125;;</span><br><span class=\"line\">        bubbleSort(arrs);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arrs));</span><br><span class=\"line\"></span><br><span class=\"line\">        bubbleSort2(arrs);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arrs));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 简单选择排序算法</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">selectSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; arrs.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> min = i;<span class=\"comment\">//默认定义第一个元素的下标是最小元素的下标</span></span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> j = i + <span class=\"number\">1</span>; j &lt; arrs.length; j++) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"++++++++++++++++++\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arrs[min] &gt; arrs[j]) &#123;  <span class=\"comment\">//让第一个元素与剩下的所有元素比较，取出最小元素的下标赋值给min</span></span><br><span class=\"line\">                    min = j;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i != min) &#123;<span class=\"comment\">//如果最小元素的下标不是第一个了，证明中间有比第一个元素要小的元素，让第一个元素与该元素进行交换</span></span><br><span class=\"line\">                swap(arrs, i, min);</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"--------------------\"</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testSelectSort</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] arrs = &#123;<span class=\"number\">12</span>, <span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">55</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">9</span>, <span class=\"number\">66</span>, <span class=\"number\">78</span>, <span class=\"number\">0</span>, <span class=\"number\">54</span>, <span class=\"number\">88</span>&#125;;</span><br><span class=\"line\">        selectSort(arrs);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arrs));</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 直接插入排序算法</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">insertSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; arrs.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = arrs[i]; <span class=\"comment\">//取出一个待插入的记录</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> j;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (j = i - <span class=\"number\">1</span>; j &gt;= <span class=\"number\">0</span>; j--) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">\"--------------------\"</span>);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (temp &lt; arrs[j]) &#123;   <span class=\"comment\">//从后往前遍历已经排好序的有序表，判断带插入记录与其中每个记录的大小，如果待插入记录要小于有序表中的某个记录，就将有序表中该记录往后移动，空出一个位置，如果不小于，则终止循环。</span></span><br><span class=\"line\">                    arrs[j + <span class=\"number\">1</span>] = arrs[j];</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            arrs[j + <span class=\"number\">1</span>] = temp;    <span class=\"comment\">//将空出的这个位置赋值为待插入的元素。</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testInsertSort</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] arrs = &#123;<span class=\"number\">12</span>, <span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">55</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">9</span>, <span class=\"number\">66</span>, <span class=\"number\">78</span>, <span class=\"number\">0</span>, <span class=\"number\">54</span>, <span class=\"number\">88</span>&#125;;</span><br><span class=\"line\">        insertSort(arrs);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arrs));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 希尔排序</span></span><br><span class=\"line\"><span class=\"comment\">     * 和直接插入排序的算法形式是一样的，只不过加入了一个步长。</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">shellSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> j;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> increment = arrs.length / <span class=\"number\">2</span>; increment &gt; <span class=\"number\">0</span>; increment /= <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = increment; i &lt; arrs.length; i++) &#123;</span><br><span class=\"line\">                temp = arrs[i];</span><br><span class=\"line\">                <span class=\"keyword\">for</span> (j = i - increment; j &gt;= <span class=\"number\">0</span>; j -= increment) &#123;</span><br><span class=\"line\">                    System.out.println(<span class=\"string\">\"--------------------\"</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (temp &lt; arrs[j]) &#123;</span><br><span class=\"line\">                        arrs[j + increment] = arrs[j];</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                arrs[j + increment] = temp;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testShellSort</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] arrs = &#123;<span class=\"number\">12</span>, <span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">55</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">9</span>, <span class=\"number\">66</span>, <span class=\"number\">78</span>, <span class=\"number\">0</span>, <span class=\"number\">54</span>, <span class=\"number\">88</span>&#125;;</span><br><span class=\"line\">        shellSort(arrs);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arrs));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 堆排序</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">heapSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = arrs.length / <span class=\"number\">2</span> - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;<span class=\"comment\">// 构建一个大顶堆</span></span><br><span class=\"line\">            adjustHeap(arrs, i, arrs.length - <span class=\"number\">1</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (i = arrs.length - <span class=\"number\">1</span>; i &gt;= <span class=\"number\">0</span>; i--) &#123;<span class=\"comment\">// 将堆顶记录和当前未经排序子序列的最后一个记录交换</span></span><br><span class=\"line\">            <span class=\"keyword\">int</span> temp = arrs[<span class=\"number\">0</span>];</span><br><span class=\"line\">            arrs[<span class=\"number\">0</span>] = arrs[i];</span><br><span class=\"line\">            arrs[i] = temp;</span><br><span class=\"line\">            adjustHeap(arrs, <span class=\"number\">0</span>, i - <span class=\"number\">1</span>);<span class=\"comment\">// 将a中前i-1个记录重新调整为大顶堆</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">adjustHeap</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs, <span class=\"keyword\">int</span> i, <span class=\"keyword\">int</span> len)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp, j;</span><br><span class=\"line\">        temp = arrs[i];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (j = <span class=\"number\">2</span> * i; j &lt; len; j *= <span class=\"number\">2</span>) &#123;<span class=\"comment\">// 沿关键字较大的孩子结点向下筛选</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (j &lt; len &amp;&amp; arrs[j] &lt; arrs[j + <span class=\"number\">1</span>])</span><br><span class=\"line\">                ++j; <span class=\"comment\">// j为关键字中较大记录的下标</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (temp &gt;= arrs[j])</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            arrs[i] = arrs[j];</span><br><span class=\"line\">            i = j;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        arrs[i] = temp;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testHeapSort</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] arrs = &#123;<span class=\"number\">12</span>, <span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">55</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">9</span>, <span class=\"number\">66</span>, <span class=\"number\">78</span>, <span class=\"number\">0</span>, <span class=\"number\">54</span>, <span class=\"number\">88</span>&#125;;</span><br><span class=\"line\">        heapSort(arrs);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arrs));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 归并排序</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">mergeSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs)</span> </span>&#123;</span><br><span class=\"line\">        mSort(arrs, <span class=\"number\">0</span>, arrs.length - <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">mSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs, <span class=\"keyword\">int</span> low, <span class=\"keyword\">int</span> high)</span> </span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//      int mid = (low + high) / 2;</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> mid = low + (high - low) / <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (low &lt; high) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//左边</span></span><br><span class=\"line\">            mSort(arrs, low, mid);</span><br><span class=\"line\">            <span class=\"comment\">//右边</span></span><br><span class=\"line\">            mSort(arrs, mid + <span class=\"number\">1</span>, high);</span><br><span class=\"line\">            <span class=\"comment\">//左右合并</span></span><br><span class=\"line\">            merge(arrs, low, mid, high);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span>  <span class=\"keyword\">void</span> <span class=\"title\">merge</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs, <span class=\"keyword\">int</span> low, <span class=\"keyword\">int</span> mid, <span class=\"keyword\">int</span> high)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] temp = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[high - low + <span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span> i = low;<span class=\"comment\">// 左指针</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> j = mid + <span class=\"number\">1</span>;<span class=\"comment\">// 右指针</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> k = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 把较小的数先移到新数组中</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i &lt;= mid &amp;&amp; j &lt;= high) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (arrs[i] &lt; arrs[j]) &#123;</span><br><span class=\"line\">                temp[k++] = arrs[i++];</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                temp[k++] = arrs[j++];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 把左边剩余的数移入数组</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i &lt;= mid) &#123;</span><br><span class=\"line\">            temp[k++] = arrs[i++];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 把右边边剩余的数移入数组</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (j &lt;= high) &#123;</span><br><span class=\"line\">            temp[k++] = arrs[j++];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 把新数组中的数覆盖nums数组</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> k2 = <span class=\"number\">0</span>; k2 &lt; temp.length; k2++) &#123;</span><br><span class=\"line\">            arrs[k2 + low] = temp[k2];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testMergeSort</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] arrs = &#123;<span class=\"number\">12</span>, <span class=\"number\">3</span>, <span class=\"number\">44</span>, <span class=\"number\">55</span>, <span class=\"number\">11</span>, <span class=\"number\">13</span>, <span class=\"number\">9</span>, <span class=\"number\">66</span>, <span class=\"number\">78</span>, <span class=\"number\">0</span>, <span class=\"number\">54</span>, <span class=\"number\">88</span>&#125;;</span><br><span class=\"line\">        mergeSort(arrs);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arrs));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 快速排序</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">quickSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs)</span> </span>&#123;</span><br><span class=\"line\">        qSort(arrs, <span class=\"number\">0</span>, arrs.length - <span class=\"number\">1</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">qSort</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs, <span class=\"keyword\">int</span> low, <span class=\"keyword\">int</span> high)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> mid;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (low &lt; high) &#123;</span><br><span class=\"line\">            mid = partition(arrs, low, high);</span><br><span class=\"line\">            qSort(arrs, low, mid);</span><br><span class=\"line\">            qSort(arrs, mid + <span class=\"number\">1</span>, high);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">int</span> <span class=\"title\">partition</span><span class=\"params\">(<span class=\"keyword\">int</span>[] arrs, <span class=\"keyword\">int</span> low, <span class=\"keyword\">int</span> high)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> midKey = arrs[low]; <span class=\"comment\">//用子表的第一个记录作为枢轴记录</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (low &lt; high) &#123;    <span class=\"comment\">//从表的两端交替向中间扫描</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (low &lt; high &amp;&amp; arrs[high] &gt;= midKey) &#123;</span><br><span class=\"line\">                high--;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            swap(arrs, low, high);  <span class=\"comment\">//将比枢轴记录小的记录交换到左边</span></span><br><span class=\"line\">            <span class=\"keyword\">while</span> (low &lt; high &amp;&amp; arrs[low] &lt;= midKey) &#123;</span><br><span class=\"line\">                low++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            swap(arrs, low, high);  <span class=\"comment\">//将比枢轴记录大的记录交换到右边</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> low;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Test</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">testQuickSort</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] arrs = &#123;<span class=\"number\">1000</span>,<span class=\"number\">2</span>,<span class=\"number\">3</span>,<span class=\"number\">418</span>,<span class=\"number\">5</span>,<span class=\"number\">100</span>,<span class=\"number\">7</span>,<span class=\"number\">8</span>,<span class=\"number\">9</span>,<span class=\"number\">10</span>,<span class=\"number\">101</span>,<span class=\"number\">242</span>,<span class=\"number\">33</span>,<span class=\"number\">44</span>,<span class=\"number\">55</span>&#125;;</span><br><span class=\"line\">        quickSort(arrs);</span><br><span class=\"line\">        System.out.println(Arrays.toString(arrs));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"树","date":"2017-06-10T14:22:15.000Z","_content":"\n* 树的定义\n    * 树（Tree）是 n (n>0) 个结点的有限集。n=0 时称为空树。在任意一棵非空树中：(1) 有且仅有一个特定的称为根（Root）的结点；(2) 当 n>1 时，其余结点可分为 m (m>0) 个互不相交的有限集 T1、T2、、Tm，其中每一个集合本身又是一棵树并,且称为根的子树（SubTree），如图 6-2-1 所示。\n    * n>0 时根结点是唯一的，不可能存在多个根结点。\n    * m>0 时，子树的个数没有限制，但它们一定是互不相交的。\n* 结点的分类\n    * 结点拥有的子树数称为结点的度。度为0的结点称为叶节点或终端节点；度不为0的结点称为非终端结点或分支结点。除根结点外，分支结点也称为内部结点。树的度是树内各结点度的最大值。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsok7dma0ej20dp08jtaf.jpg)\n<!-- more -->\n* 结点间的关系\n    * 结点的子树的根称为该结点的孩子，相应地，该结点称为孩子的双亲。\n    * 同一个双亲的孩子之间互称为兄弟。\n    * 结点的祖先是从根到该结点所经分支上的所有结点。反之，以某结点为根的子树中的任一结点都称为改结点的子孙。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsok7ocyrmj20a106fq42.jpg)\n* 树的其他相关概念\n    * 结点的层次从根开始定义起，根为第一层，根的孩子为第二层。其双亲在同一层的结点互为堂兄弟。\n    * 树中结点的最大层次称为树的深度或高度。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsok8be8i3j20ct0710ub.jpg)\n    * 如果将树中结点的各子树看成从左至右是有次序的，不能互换的，则称该树为有序树，否则称为无序树。\n    * 森林（Forest）是 m (m>0) 棵互不相交的树的集合。\n* 双亲表示法\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsok8q93z4j207206i0tw.jpg)\n    * 这样的存储结构，我们可以根据结点的 parent 指针很容易找到它的双亲结点，所用的时间复杂度为 0 (1），直到 parent 为-1 时，表示找到了树结点的根。可如果我们要知道结点的孩子是什么，对不起，请遍历整个结构才行。\n    * 添加长子域之后的表示效果\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsok9iqbwcj209p06pta8.jpg)\n    * 添加右兄弟域之后的表示效果\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsok9w1gs4j208k05ydgu.jpg)\n    * 存储结构的设计师一个非常灵活的过程，一个存储结构设计得是否合理，取决于基于该存储结构的运算是否适合、是否方便，时间复杂度好不好等。\n* 孩子表示法\n    * 把每个结点的孩子结点排列起来，用单链表存储结构，则n个结点有n个孩子链表，如果是叶子结点则此单链表为空。然后n个头指针又组成一个线性表，采用顺序存储结构，存放进一个一维数组中。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsoka4lkd4j20e4097wfy.jpg)\n    * 这样的结构对于我们要查找某个结点的某个孩子，或者找某个结点的兄弟，只需要查找这个结点的孩子单链表即可，对于遍历整棵树也是很方便的，对头结点的数组循环即可。\n    * 但是对于如何知道某个结点的双亲是谁比较麻烦，需要遍历整棵树才行。\n* 双亲孩子表示法\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokaauf6rj20dv09f76r.jpg)\n* 孩子兄弟表示法\n    * 任意一颗树，它的结点的第一个孩子如果存在就是唯一的，他的右兄弟如果存在也是唯一的。因此，我们设置两个指针，分别指向该结点的第一个孩子和此结点的右兄弟。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokak2srmj208e013q2x.jpg)\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokaroxlhj20ew08o0ul.jpg)\n* 二叉树的定义\n    * 二叉树（BinaryTree）是 n (n>=0) 个结点的有限集合，该集合或者为空集（称为空二叉树），或者由一个根结点和两棵互不相交的、分别称为根结点的左子树和右子树的二叉树组成。\n* 二叉树的特点\n    * 每个结点最多有两棵子树，所以二叉树中不存在度大于 2 的结点。注意不是只有两棵子树，而是最多有。没有子树或者有一棵子树都是可以的。\n    * 左子树和右子树是有顺序的，次序不能任意颠倒。就像人是双手、双脚，但显然左手、左脚和右手、右脚是不一样的，右手戴左手套、右脚穿左鞋都会极其别扭和难受\n    * 即使树中某结点只有一棵子树，也要区分它是左子树还是右子树。图 6-5-3 中，树 1 和树 2 是同一棵树，但它们却是不同的二叉树。就好像你一不小心，摔伤了手，伤的是左手还是右手，对你的生活影响度是完全不同的。\n* 二叉树的五种基本形态\n    * 空二叉树。\n    * 只有一个根结点。\n    * 根结点只有左子树。\n    * 根结点只有右子树。\n    * 根结点既有左子树，又有右子树。\n* 特殊的二叉树\n    * 斜树\n        * 左斜树和右斜树：所有的结点都只有左子树的二叉树叫左斜树，所有结点都是只有右子树的二叉树叫右斜树。\n    * 满二叉树\n        * 在一棵二叉树中，如果所有分支结点都存在左子树和右子树，并且所有叶子都在同一层上，这样的二叉树称为满二叉树。\n    * 满二叉树的特点\n        * 叶子只能出现在最下一层，出现在其他层就不可能达成平衡。\n        * 非叶子结点的度一定是2。\n        * 在同样深度的二叉树中，满二叉树的结点个数最多，叶子数最多。\n    * 完全二叉树\n        * 对一棵具有 n 个结点的二叉树按层序编号，如果编号为 i (1 <i <n）的结点与同样深度的满二叉树中编号为 i 的结点在二叉树中位置完全相同，则这棵二叉树称为完全二叉树。\n        * 首先从字面上要区分，完全和满的差异，满二叉树一定是一棵完全二叉“满的差异，满二叉树一定是一棵完全二叉”“”树，但完全二叉树不一定是满的。\n        * 其次，完全二叉树的所有结点与同样深度的满二叉树，它们按层序编号相同的结点，是一一对应的。\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokb6ghb9j20cy059dgp.jpg)\n    * 完全二叉树的特点\n        * 叶子结点只能出现在最下两层。\n        * 最下层的叶子一定集中在左部连续位置。\n        * 倒数二层，若有叶子结点，一定都在右部连续位置。\n        * 如果结点度为 1, 则该结点只有左孩子，即不存在只有右子树的情况。（5) 同样结点数的二叉树，完全二叉树的深度最小。\n* 二叉树的性质\n    * 在二叉树的第 i 层上至多有 2i-1个结点（i>1)。\n    * 深度为 k 的二叉树至多有 2k -1个结点（k>1)。\n    * 对任何一棵二叉树 T ，如果其终端结点数为n0,度为2的结点数为n2，则n0 = n2 + 1\n    * 具有 n 个结点的完全二叉树的深度为 [log2n]+1 ([x]表示不大于x的最大整数）。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokbfm1gvj20ja074whj.jpg)\n* 二叉树顺序存储结构\n    * 为了防止空间浪费，顺序存储结构一般用于完全二叉树，对于一般的二叉树，尽管层序编号不能反映逻辑关系，但是可以将其按完全二叉树编号，把不存在的结点设置为“^”而已。不过如果二叉树的右子树比左子树多太多，就会造成很大的空间浪费。\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokccjfxzj20c005lmy1.jpg)\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokcmosf9j20ec02d0t9.jpg)\n* 二叉链表\n    * 二叉树每个结点最多有两个孩子，所以为它设计一个数据域和两个指针域是比较自然的想法，我们称这样的链表叫做二叉链表。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokctvlvdj2088019q2x.jpg)\n* 遍历二叉树\n    * 二叉树的遍历是指从根结点出发，按照某种次序依次访问二叉树中的所有结点，使得每个结点被访问一次，且仅仅被访问一次。\n* 二叉树的遍历方法：遍历二叉树的时候可以尝试填充为完全二叉树。\n    * 前序遍历\n        * 若二叉树为空，则空操作返回，否则访问根结点，然后前序遍历左子树，再前序遍历右子树。\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokd1ev7wj206t06tq3r.jpg)\n    * 中序遍历\n        * 若二叉树为空，则空操作返回，否则从根结点开始，终须遍历根结点的左子树，然后访问根结点，最后中序遍历右子树。\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokdahur2j206n06xgmc.jpg)\n    * 后序遍历\n        * 规则是若树为空，则空操作返回，否则从左到右先叶子后结点的方式遍历访问左右子树，最后是访问根结点。\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokdi0s7zj20710730tj.jpg)\n    * 层序遍历\n        * 规则是若树为空则空操作返回，否则从树的第一层，也就是根结点开始访问，从上而下逐层遍历，在同一层中，按从左到右的顺序对结点逐个访问。\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokdsx3wgj206t077gme.jpg)\n* 二叉树的建立\n* 线索二叉树\n    * 指向前驱和后继的指针称为线索，加上线索的二叉链表称为线索链表，相应的二叉树就称为线索二叉树。\n    * 对二叉树以某种次序遍历使其变为线索二叉树的过程称为线索化。\n* 树转换为二叉树\n    * 加线。在所有兄弟叫结点之间加一条线。\n    * 去线。对树种每个结点，值保留它与第一个孩子结点连线，删除它与其他孩子结点之间的连线。\n    * 层次调整。以树的根结点为轴心，将整棵树顺时针旋转一定的角度，使之结构层次分明。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsoke4lykvj20bw09qabz.jpg)\n* 森林转换为二叉树\n    * 森林是由若干棵树组成的，所以完全可以理解为，森林中的每一棵树都是兄弟可以按照兄弟的处理办法来操作。步骤如下：\n    * 把每个树转换为二叉树。\n    * 第一棵二叉树不动，从第二棵二叉树开始，依次把后一棵二叉树的根结点作为前一棵二叉树的根结点的右孩子用线连接起来。当所有的二叉树连接起来后，就得到了由森林转换来的二叉树。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokec0nzkj20hp0by0v6.jpg)\n* 二叉树转换为树\n    * 加线。若某结点的左孩子结点存在，则将这个左孩子的右孩子结点、右孩子的右孩子结点、右孩子的右孩子的右孩子结点……哈，反正就是左孩子的n个右孩子结点都作为此结点的孩子。将改结点与这些右孩子结点用线连接起来。\n    * 去线。删除原二叉树中所有结点与其右孩子结点的连线。\n    * 层次调整。使之结构层次分明。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokeqeksaj20ef0bldi0.jpg)\n* 二叉树转换为森林\n    * 判断一颗二叉树能够转换成一棵树还是森林，看这棵二叉树的根结点有没有右孩子，有就是森林，没有就是一棵树。\n* 树的遍历\n    * 先根遍历。先访问树的根结点，然后依次先根遍历根的每棵子树。\n    * 后根遍历。先依次后根遍历每棵子树，然后再访问根结点。\n* 森林的遍历\n    * 前序遍历：先访问森林中第一棵树的根结点，然后再依次先根遍历根的每棵子树，再依次用同样方式遍历除去第一棵树的剩余树构成的森林。\n    * 后序遍历：是先访问森林中第一棵树，后根遍历的方式遍历每棵子树，然后再访问根结点，再依次同样方式遍历除去第一棵树的剩余树构成的森林。\n* 赫夫曼树及其应用\n    * 从树中一个结点到另一个结点之间的分支构成两个结点之间的路径，路径上的分支数目称作路径长度。树的路径长度就是从树根到每一个结点的路径长度之和。\n    * 结点的带权路径长度为从该结点到树根之间的路径长度与结点上权的乘积。\n    * 带权路径长度WPL最小的二叉树称作赫夫曼树，或叫做最优二叉树。","source":"_posts/数据结构-树.md","raw":"---\ntitle: 树\ntags:\n  - 树\n  - 数据结构\ncategories:\n  - 数据结构\ndate: 2017-06-10 22:22:15\n---\n\n* 树的定义\n    * 树（Tree）是 n (n>0) 个结点的有限集。n=0 时称为空树。在任意一棵非空树中：(1) 有且仅有一个特定的称为根（Root）的结点；(2) 当 n>1 时，其余结点可分为 m (m>0) 个互不相交的有限集 T1、T2、、Tm，其中每一个集合本身又是一棵树并,且称为根的子树（SubTree），如图 6-2-1 所示。\n    * n>0 时根结点是唯一的，不可能存在多个根结点。\n    * m>0 时，子树的个数没有限制，但它们一定是互不相交的。\n* 结点的分类\n    * 结点拥有的子树数称为结点的度。度为0的结点称为叶节点或终端节点；度不为0的结点称为非终端结点或分支结点。除根结点外，分支结点也称为内部结点。树的度是树内各结点度的最大值。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsok7dma0ej20dp08jtaf.jpg)\n<!-- more -->\n* 结点间的关系\n    * 结点的子树的根称为该结点的孩子，相应地，该结点称为孩子的双亲。\n    * 同一个双亲的孩子之间互称为兄弟。\n    * 结点的祖先是从根到该结点所经分支上的所有结点。反之，以某结点为根的子树中的任一结点都称为改结点的子孙。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsok7ocyrmj20a106fq42.jpg)\n* 树的其他相关概念\n    * 结点的层次从根开始定义起，根为第一层，根的孩子为第二层。其双亲在同一层的结点互为堂兄弟。\n    * 树中结点的最大层次称为树的深度或高度。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsok8be8i3j20ct0710ub.jpg)\n    * 如果将树中结点的各子树看成从左至右是有次序的，不能互换的，则称该树为有序树，否则称为无序树。\n    * 森林（Forest）是 m (m>0) 棵互不相交的树的集合。\n* 双亲表示法\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsok8q93z4j207206i0tw.jpg)\n    * 这样的存储结构，我们可以根据结点的 parent 指针很容易找到它的双亲结点，所用的时间复杂度为 0 (1），直到 parent 为-1 时，表示找到了树结点的根。可如果我们要知道结点的孩子是什么，对不起，请遍历整个结构才行。\n    * 添加长子域之后的表示效果\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsok9iqbwcj209p06pta8.jpg)\n    * 添加右兄弟域之后的表示效果\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsok9w1gs4j208k05ydgu.jpg)\n    * 存储结构的设计师一个非常灵活的过程，一个存储结构设计得是否合理，取决于基于该存储结构的运算是否适合、是否方便，时间复杂度好不好等。\n* 孩子表示法\n    * 把每个结点的孩子结点排列起来，用单链表存储结构，则n个结点有n个孩子链表，如果是叶子结点则此单链表为空。然后n个头指针又组成一个线性表，采用顺序存储结构，存放进一个一维数组中。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsoka4lkd4j20e4097wfy.jpg)\n    * 这样的结构对于我们要查找某个结点的某个孩子，或者找某个结点的兄弟，只需要查找这个结点的孩子单链表即可，对于遍历整棵树也是很方便的，对头结点的数组循环即可。\n    * 但是对于如何知道某个结点的双亲是谁比较麻烦，需要遍历整棵树才行。\n* 双亲孩子表示法\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokaauf6rj20dv09f76r.jpg)\n* 孩子兄弟表示法\n    * 任意一颗树，它的结点的第一个孩子如果存在就是唯一的，他的右兄弟如果存在也是唯一的。因此，我们设置两个指针，分别指向该结点的第一个孩子和此结点的右兄弟。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokak2srmj208e013q2x.jpg)\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokaroxlhj20ew08o0ul.jpg)\n* 二叉树的定义\n    * 二叉树（BinaryTree）是 n (n>=0) 个结点的有限集合，该集合或者为空集（称为空二叉树），或者由一个根结点和两棵互不相交的、分别称为根结点的左子树和右子树的二叉树组成。\n* 二叉树的特点\n    * 每个结点最多有两棵子树，所以二叉树中不存在度大于 2 的结点。注意不是只有两棵子树，而是最多有。没有子树或者有一棵子树都是可以的。\n    * 左子树和右子树是有顺序的，次序不能任意颠倒。就像人是双手、双脚，但显然左手、左脚和右手、右脚是不一样的，右手戴左手套、右脚穿左鞋都会极其别扭和难受\n    * 即使树中某结点只有一棵子树，也要区分它是左子树还是右子树。图 6-5-3 中，树 1 和树 2 是同一棵树，但它们却是不同的二叉树。就好像你一不小心，摔伤了手，伤的是左手还是右手，对你的生活影响度是完全不同的。\n* 二叉树的五种基本形态\n    * 空二叉树。\n    * 只有一个根结点。\n    * 根结点只有左子树。\n    * 根结点只有右子树。\n    * 根结点既有左子树，又有右子树。\n* 特殊的二叉树\n    * 斜树\n        * 左斜树和右斜树：所有的结点都只有左子树的二叉树叫左斜树，所有结点都是只有右子树的二叉树叫右斜树。\n    * 满二叉树\n        * 在一棵二叉树中，如果所有分支结点都存在左子树和右子树，并且所有叶子都在同一层上，这样的二叉树称为满二叉树。\n    * 满二叉树的特点\n        * 叶子只能出现在最下一层，出现在其他层就不可能达成平衡。\n        * 非叶子结点的度一定是2。\n        * 在同样深度的二叉树中，满二叉树的结点个数最多，叶子数最多。\n    * 完全二叉树\n        * 对一棵具有 n 个结点的二叉树按层序编号，如果编号为 i (1 <i <n）的结点与同样深度的满二叉树中编号为 i 的结点在二叉树中位置完全相同，则这棵二叉树称为完全二叉树。\n        * 首先从字面上要区分，完全和满的差异，满二叉树一定是一棵完全二叉“满的差异，满二叉树一定是一棵完全二叉”“”树，但完全二叉树不一定是满的。\n        * 其次，完全二叉树的所有结点与同样深度的满二叉树，它们按层序编号相同的结点，是一一对应的。\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokb6ghb9j20cy059dgp.jpg)\n    * 完全二叉树的特点\n        * 叶子结点只能出现在最下两层。\n        * 最下层的叶子一定集中在左部连续位置。\n        * 倒数二层，若有叶子结点，一定都在右部连续位置。\n        * 如果结点度为 1, 则该结点只有左孩子，即不存在只有右子树的情况。（5) 同样结点数的二叉树，完全二叉树的深度最小。\n* 二叉树的性质\n    * 在二叉树的第 i 层上至多有 2i-1个结点（i>1)。\n    * 深度为 k 的二叉树至多有 2k -1个结点（k>1)。\n    * 对任何一棵二叉树 T ，如果其终端结点数为n0,度为2的结点数为n2，则n0 = n2 + 1\n    * 具有 n 个结点的完全二叉树的深度为 [log2n]+1 ([x]表示不大于x的最大整数）。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokbfm1gvj20ja074whj.jpg)\n* 二叉树顺序存储结构\n    * 为了防止空间浪费，顺序存储结构一般用于完全二叉树，对于一般的二叉树，尽管层序编号不能反映逻辑关系，但是可以将其按完全二叉树编号，把不存在的结点设置为“^”而已。不过如果二叉树的右子树比左子树多太多，就会造成很大的空间浪费。\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokccjfxzj20c005lmy1.jpg)\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokcmosf9j20ec02d0t9.jpg)\n* 二叉链表\n    * 二叉树每个结点最多有两个孩子，所以为它设计一个数据域和两个指针域是比较自然的想法，我们称这样的链表叫做二叉链表。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokctvlvdj2088019q2x.jpg)\n* 遍历二叉树\n    * 二叉树的遍历是指从根结点出发，按照某种次序依次访问二叉树中的所有结点，使得每个结点被访问一次，且仅仅被访问一次。\n* 二叉树的遍历方法：遍历二叉树的时候可以尝试填充为完全二叉树。\n    * 前序遍历\n        * 若二叉树为空，则空操作返回，否则访问根结点，然后前序遍历左子树，再前序遍历右子树。\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokd1ev7wj206t06tq3r.jpg)\n    * 中序遍历\n        * 若二叉树为空，则空操作返回，否则从根结点开始，终须遍历根结点的左子树，然后访问根结点，最后中序遍历右子树。\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokdahur2j206n06xgmc.jpg)\n    * 后序遍历\n        * 规则是若树为空，则空操作返回，否则从左到右先叶子后结点的方式遍历访问左右子树，最后是访问根结点。\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokdi0s7zj20710730tj.jpg)\n    * 层序遍历\n        * 规则是若树为空则空操作返回，否则从树的第一层，也就是根结点开始访问，从上而下逐层遍历，在同一层中，按从左到右的顺序对结点逐个访问。\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokdsx3wgj206t077gme.jpg)\n* 二叉树的建立\n* 线索二叉树\n    * 指向前驱和后继的指针称为线索，加上线索的二叉链表称为线索链表，相应的二叉树就称为线索二叉树。\n    * 对二叉树以某种次序遍历使其变为线索二叉树的过程称为线索化。\n* 树转换为二叉树\n    * 加线。在所有兄弟叫结点之间加一条线。\n    * 去线。对树种每个结点，值保留它与第一个孩子结点连线，删除它与其他孩子结点之间的连线。\n    * 层次调整。以树的根结点为轴心，将整棵树顺时针旋转一定的角度，使之结构层次分明。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsoke4lykvj20bw09qabz.jpg)\n* 森林转换为二叉树\n    * 森林是由若干棵树组成的，所以完全可以理解为，森林中的每一棵树都是兄弟可以按照兄弟的处理办法来操作。步骤如下：\n    * 把每个树转换为二叉树。\n    * 第一棵二叉树不动，从第二棵二叉树开始，依次把后一棵二叉树的根结点作为前一棵二叉树的根结点的右孩子用线连接起来。当所有的二叉树连接起来后，就得到了由森林转换来的二叉树。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokec0nzkj20hp0by0v6.jpg)\n* 二叉树转换为树\n    * 加线。若某结点的左孩子结点存在，则将这个左孩子的右孩子结点、右孩子的右孩子结点、右孩子的右孩子的右孩子结点……哈，反正就是左孩子的n个右孩子结点都作为此结点的孩子。将改结点与这些右孩子结点用线连接起来。\n    * 去线。删除原二叉树中所有结点与其右孩子结点的连线。\n    * 层次调整。使之结构层次分明。\n    * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsokeqeksaj20ef0bldi0.jpg)\n* 二叉树转换为森林\n    * 判断一颗二叉树能够转换成一棵树还是森林，看这棵二叉树的根结点有没有右孩子，有就是森林，没有就是一棵树。\n* 树的遍历\n    * 先根遍历。先访问树的根结点，然后依次先根遍历根的每棵子树。\n    * 后根遍历。先依次后根遍历每棵子树，然后再访问根结点。\n* 森林的遍历\n    * 前序遍历：先访问森林中第一棵树的根结点，然后再依次先根遍历根的每棵子树，再依次用同样方式遍历除去第一棵树的剩余树构成的森林。\n    * 后序遍历：是先访问森林中第一棵树，后根遍历的方式遍历每棵子树，然后再访问根结点，再依次同样方式遍历除去第一棵树的剩余树构成的森林。\n* 赫夫曼树及其应用\n    * 从树中一个结点到另一个结点之间的分支构成两个结点之间的路径，路径上的分支数目称作路径长度。树的路径长度就是从树根到每一个结点的路径长度之和。\n    * 结点的带权路径长度为从该结点到树根之间的路径长度与结点上权的乘积。\n    * 带权路径长度WPL最小的二叉树称作赫夫曼树，或叫做最优二叉树。","slug":"数据结构-树","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv545001f58ug7xsn4ptc","content":"<ul>\n<li>树的定义\n<ul>\n<li>树（Tree）是 n (n&gt;0) 个结点的有限集。n=0 时称为空树。在任意一棵非空树中：(1) 有且仅有一个特定的称为根（Root）的结点；(2) 当 n&gt;1 时，其余结点可分为 m (m&gt;0) 个互不相交的有限集 T1、T2、、Tm，其中每一个集合本身又是一棵树并,且称为根的子树（SubTree），如图 6-2-1 所示。</li>\n<li>n&gt;0 时根结点是唯一的，不可能存在多个根结点。</li>\n<li>m&gt;0 时，子树的个数没有限制，但它们一定是互不相交的。</li>\n</ul>\n</li>\n<li>结点的分类\n<ul>\n<li>结点拥有的子树数称为结点的度。度为0的结点称为叶节点或终端节点；度不为0的结点称为非终端结点或分支结点。除根结点外，分支结点也称为内部结点。树的度是树内各结点度的最大值。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsok7dma0ej20dp08jtaf.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n<a id=\"more\"></a>\n<ul>\n<li>结点间的关系\n<ul>\n<li>结点的子树的根称为该结点的孩子，相应地，该结点称为孩子的双亲。</li>\n<li>同一个双亲的孩子之间互称为兄弟。</li>\n<li>结点的祖先是从根到该结点所经分支上的所有结点。反之，以某结点为根的子树中的任一结点都称为改结点的子孙。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsok7ocyrmj20a106fq42.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>树的其他相关概念\n<ul>\n<li>结点的层次从根开始定义起，根为第一层，根的孩子为第二层。其双亲在同一层的结点互为堂兄弟。</li>\n<li>树中结点的最大层次称为树的深度或高度。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsok8be8i3j20ct0710ub.jpg\" alt=\"\"></li>\n<li>如果将树中结点的各子树看成从左至右是有次序的，不能互换的，则称该树为有序树，否则称为无序树。</li>\n<li>森林（Forest）是 m (m&gt;0) 棵互不相交的树的集合。</li>\n</ul>\n</li>\n<li>双亲表示法\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsok8q93z4j207206i0tw.jpg\" alt=\"\"></li>\n<li>这样的存储结构，我们可以根据结点的 parent 指针很容易找到它的双亲结点，所用的时间复杂度为 0 (1），直到 parent 为-1 时，表示找到了树结点的根。可如果我们要知道结点的孩子是什么，对不起，请遍历整个结构才行。</li>\n<li>添加长子域之后的表示效果</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsok9iqbwcj209p06pta8.jpg\" alt=\"\"></li>\n<li>添加右兄弟域之后的表示效果</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsok9w1gs4j208k05ydgu.jpg\" alt=\"\"></li>\n<li>存储结构的设计师一个非常灵活的过程，一个存储结构设计得是否合理，取决于基于该存储结构的运算是否适合、是否方便，时间复杂度好不好等。</li>\n</ul>\n</li>\n<li>孩子表示法\n<ul>\n<li>把每个结点的孩子结点排列起来，用单链表存储结构，则n个结点有n个孩子链表，如果是叶子结点则此单链表为空。然后n个头指针又组成一个线性表，采用顺序存储结构，存放进一个一维数组中。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsoka4lkd4j20e4097wfy.jpg\" alt=\"\"></li>\n<li>这样的结构对于我们要查找某个结点的某个孩子，或者找某个结点的兄弟，只需要查找这个结点的孩子单链表即可，对于遍历整棵树也是很方便的，对头结点的数组循环即可。</li>\n<li>但是对于如何知道某个结点的双亲是谁比较麻烦，需要遍历整棵树才行。</li>\n</ul>\n</li>\n<li>双亲孩子表示法\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokaauf6rj20dv09f76r.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>孩子兄弟表示法\n<ul>\n<li>任意一颗树，它的结点的第一个孩子如果存在就是唯一的，他的右兄弟如果存在也是唯一的。因此，我们设置两个指针，分别指向该结点的第一个孩子和此结点的右兄弟。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokak2srmj208e013q2x.jpg\" alt=\"\"></li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokaroxlhj20ew08o0ul.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>二叉树的定义\n<ul>\n<li>二叉树（BinaryTree）是 n (n&gt;=0) 个结点的有限集合，该集合或者为空集（称为空二叉树），或者由一个根结点和两棵互不相交的、分别称为根结点的左子树和右子树的二叉树组成。</li>\n</ul>\n</li>\n<li>二叉树的特点\n<ul>\n<li>每个结点最多有两棵子树，所以二叉树中不存在度大于 2 的结点。注意不是只有两棵子树，而是最多有。没有子树或者有一棵子树都是可以的。</li>\n<li>左子树和右子树是有顺序的，次序不能任意颠倒。就像人是双手、双脚，但显然左手、左脚和右手、右脚是不一样的，右手戴左手套、右脚穿左鞋都会极其别扭和难受</li>\n<li>即使树中某结点只有一棵子树，也要区分它是左子树还是右子树。图 6-5-3 中，树 1 和树 2 是同一棵树，但它们却是不同的二叉树。就好像你一不小心，摔伤了手，伤的是左手还是右手，对你的生活影响度是完全不同的。</li>\n</ul>\n</li>\n<li>二叉树的五种基本形态\n<ul>\n<li>空二叉树。</li>\n<li>只有一个根结点。</li>\n<li>根结点只有左子树。</li>\n<li>根结点只有右子树。</li>\n<li>根结点既有左子树，又有右子树。</li>\n</ul>\n</li>\n<li>特殊的二叉树\n<ul>\n<li>斜树\n<ul>\n<li>左斜树和右斜树：所有的结点都只有左子树的二叉树叫左斜树，所有结点都是只有右子树的二叉树叫右斜树。</li>\n</ul>\n</li>\n<li>满二叉树\n<ul>\n<li>在一棵二叉树中，如果所有分支结点都存在左子树和右子树，并且所有叶子都在同一层上，这样的二叉树称为满二叉树。</li>\n</ul>\n</li>\n<li>满二叉树的特点\n<ul>\n<li>叶子只能出现在最下一层，出现在其他层就不可能达成平衡。</li>\n<li>非叶子结点的度一定是2。</li>\n<li>在同样深度的二叉树中，满二叉树的结点个数最多，叶子数最多。</li>\n</ul>\n</li>\n<li>完全二叉树\n<ul>\n<li>对一棵具有 n 个结点的二叉树按层序编号，如果编号为 i (1 &lt;i &lt;n）的结点与同样深度的满二叉树中编号为 i 的结点在二叉树中位置完全相同，则这棵二叉树称为完全二叉树。</li>\n<li>首先从字面上要区分，完全和满的差异，满二叉树一定是一棵完全二叉“满的差异，满二叉树一定是一棵完全二叉”“”树，但完全二叉树不一定是满的。</li>\n<li>其次，完全二叉树的所有结点与同样深度的满二叉树，它们按层序编号相同的结点，是一一对应的。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokb6ghb9j20cy059dgp.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>完全二叉树的特点\n<ul>\n<li>叶子结点只能出现在最下两层。</li>\n<li>最下层的叶子一定集中在左部连续位置。</li>\n<li>倒数二层，若有叶子结点，一定都在右部连续位置。</li>\n<li>如果结点度为 1, 则该结点只有左孩子，即不存在只有右子树的情况。（5) 同样结点数的二叉树，完全二叉树的深度最小。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>二叉树的性质\n<ul>\n<li>在二叉树的第 i 层上至多有 2i-1个结点（i&gt;1)。</li>\n<li>深度为 k 的二叉树至多有 2k -1个结点（k&gt;1)。</li>\n<li>对任何一棵二叉树 T ，如果其终端结点数为n0,度为2的结点数为n2，则n0 = n2 + 1</li>\n<li>具有 n 个结点的完全二叉树的深度为 [log2n]+1 ([x]表示不大于x的最大整数）。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokbfm1gvj20ja074whj.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>二叉树顺序存储结构\n<ul>\n<li>为了防止空间浪费，顺序存储结构一般用于完全二叉树，对于一般的二叉树，尽管层序编号不能反映逻辑关系，但是可以将其按完全二叉树编号，把不存在的结点设置为“^”而已。不过如果二叉树的右子树比左子树多太多，就会造成很大的空间浪费。\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokccjfxzj20c005lmy1.jpg\" alt=\"\"></li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokcmosf9j20ec02d0t9.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>二叉链表\n<ul>\n<li>二叉树每个结点最多有两个孩子，所以为它设计一个数据域和两个指针域是比较自然的想法，我们称这样的链表叫做二叉链表。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokctvlvdj2088019q2x.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>遍历二叉树\n<ul>\n<li>二叉树的遍历是指从根结点出发，按照某种次序依次访问二叉树中的所有结点，使得每个结点被访问一次，且仅仅被访问一次。</li>\n</ul>\n</li>\n<li>二叉树的遍历方法：遍历二叉树的时候可以尝试填充为完全二叉树。\n<ul>\n<li>前序遍历\n<ul>\n<li>若二叉树为空，则空操作返回，否则访问根结点，然后前序遍历左子树，再前序遍历右子树。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokd1ev7wj206t06tq3r.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>中序遍历\n<ul>\n<li>若二叉树为空，则空操作返回，否则从根结点开始，终须遍历根结点的左子树，然后访问根结点，最后中序遍历右子树。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokdahur2j206n06xgmc.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>后序遍历\n<ul>\n<li>规则是若树为空，则空操作返回，否则从左到右先叶子后结点的方式遍历访问左右子树，最后是访问根结点。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokdi0s7zj20710730tj.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>层序遍历\n<ul>\n<li>规则是若树为空则空操作返回，否则从树的第一层，也就是根结点开始访问，从上而下逐层遍历，在同一层中，按从左到右的顺序对结点逐个访问。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokdsx3wgj206t077gme.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>二叉树的建立</li>\n<li>线索二叉树\n<ul>\n<li>指向前驱和后继的指针称为线索，加上线索的二叉链表称为线索链表，相应的二叉树就称为线索二叉树。</li>\n<li>对二叉树以某种次序遍历使其变为线索二叉树的过程称为线索化。</li>\n</ul>\n</li>\n<li>树转换为二叉树\n<ul>\n<li>加线。在所有兄弟叫结点之间加一条线。</li>\n<li>去线。对树种每个结点，值保留它与第一个孩子结点连线，删除它与其他孩子结点之间的连线。</li>\n<li>层次调整。以树的根结点为轴心，将整棵树顺时针旋转一定的角度，使之结构层次分明。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsoke4lykvj20bw09qabz.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>森林转换为二叉树\n<ul>\n<li>森林是由若干棵树组成的，所以完全可以理解为，森林中的每一棵树都是兄弟可以按照兄弟的处理办法来操作。步骤如下：</li>\n<li>把每个树转换为二叉树。</li>\n<li>第一棵二叉树不动，从第二棵二叉树开始，依次把后一棵二叉树的根结点作为前一棵二叉树的根结点的右孩子用线连接起来。当所有的二叉树连接起来后，就得到了由森林转换来的二叉树。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokec0nzkj20hp0by0v6.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>二叉树转换为树\n<ul>\n<li>加线。若某结点的左孩子结点存在，则将这个左孩子的右孩子结点、右孩子的右孩子结点、右孩子的右孩子的右孩子结点……哈，反正就是左孩子的n个右孩子结点都作为此结点的孩子。将改结点与这些右孩子结点用线连接起来。</li>\n<li>去线。删除原二叉树中所有结点与其右孩子结点的连线。</li>\n<li>层次调整。使之结构层次分明。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokeqeksaj20ef0bldi0.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>二叉树转换为森林\n<ul>\n<li>判断一颗二叉树能够转换成一棵树还是森林，看这棵二叉树的根结点有没有右孩子，有就是森林，没有就是一棵树。</li>\n</ul>\n</li>\n<li>树的遍历\n<ul>\n<li>先根遍历。先访问树的根结点，然后依次先根遍历根的每棵子树。</li>\n<li>后根遍历。先依次后根遍历每棵子树，然后再访问根结点。</li>\n</ul>\n</li>\n<li>森林的遍历\n<ul>\n<li>前序遍历：先访问森林中第一棵树的根结点，然后再依次先根遍历根的每棵子树，再依次用同样方式遍历除去第一棵树的剩余树构成的森林。</li>\n<li>后序遍历：是先访问森林中第一棵树，后根遍历的方式遍历每棵子树，然后再访问根结点，再依次同样方式遍历除去第一棵树的剩余树构成的森林。</li>\n</ul>\n</li>\n<li>赫夫曼树及其应用\n<ul>\n<li>从树中一个结点到另一个结点之间的分支构成两个结点之间的路径，路径上的分支数目称作路径长度。树的路径长度就是从树根到每一个结点的路径长度之和。</li>\n<li>结点的带权路径长度为从该结点到树根之间的路径长度与结点上权的乘积。</li>\n<li>带权路径长度WPL最小的二叉树称作赫夫曼树，或叫做最优二叉树。</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<ul>\n<li>树的定义\n<ul>\n<li>树（Tree）是 n (n&gt;0) 个结点的有限集。n=0 时称为空树。在任意一棵非空树中：(1) 有且仅有一个特定的称为根（Root）的结点；(2) 当 n&gt;1 时，其余结点可分为 m (m&gt;0) 个互不相交的有限集 T1、T2、、Tm，其中每一个集合本身又是一棵树并,且称为根的子树（SubTree），如图 6-2-1 所示。</li>\n<li>n&gt;0 时根结点是唯一的，不可能存在多个根结点。</li>\n<li>m&gt;0 时，子树的个数没有限制，但它们一定是互不相交的。</li>\n</ul>\n</li>\n<li>结点的分类\n<ul>\n<li>结点拥有的子树数称为结点的度。度为0的结点称为叶节点或终端节点；度不为0的结点称为非终端结点或分支结点。除根结点外，分支结点也称为内部结点。树的度是树内各结点度的最大值。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsok7dma0ej20dp08jtaf.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>","more":"<ul>\n<li>结点间的关系\n<ul>\n<li>结点的子树的根称为该结点的孩子，相应地，该结点称为孩子的双亲。</li>\n<li>同一个双亲的孩子之间互称为兄弟。</li>\n<li>结点的祖先是从根到该结点所经分支上的所有结点。反之，以某结点为根的子树中的任一结点都称为改结点的子孙。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsok7ocyrmj20a106fq42.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>树的其他相关概念\n<ul>\n<li>结点的层次从根开始定义起，根为第一层，根的孩子为第二层。其双亲在同一层的结点互为堂兄弟。</li>\n<li>树中结点的最大层次称为树的深度或高度。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsok8be8i3j20ct0710ub.jpg\" alt=\"\"></li>\n<li>如果将树中结点的各子树看成从左至右是有次序的，不能互换的，则称该树为有序树，否则称为无序树。</li>\n<li>森林（Forest）是 m (m&gt;0) 棵互不相交的树的集合。</li>\n</ul>\n</li>\n<li>双亲表示法\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsok8q93z4j207206i0tw.jpg\" alt=\"\"></li>\n<li>这样的存储结构，我们可以根据结点的 parent 指针很容易找到它的双亲结点，所用的时间复杂度为 0 (1），直到 parent 为-1 时，表示找到了树结点的根。可如果我们要知道结点的孩子是什么，对不起，请遍历整个结构才行。</li>\n<li>添加长子域之后的表示效果</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsok9iqbwcj209p06pta8.jpg\" alt=\"\"></li>\n<li>添加右兄弟域之后的表示效果</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsok9w1gs4j208k05ydgu.jpg\" alt=\"\"></li>\n<li>存储结构的设计师一个非常灵活的过程，一个存储结构设计得是否合理，取决于基于该存储结构的运算是否适合、是否方便，时间复杂度好不好等。</li>\n</ul>\n</li>\n<li>孩子表示法\n<ul>\n<li>把每个结点的孩子结点排列起来，用单链表存储结构，则n个结点有n个孩子链表，如果是叶子结点则此单链表为空。然后n个头指针又组成一个线性表，采用顺序存储结构，存放进一个一维数组中。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsoka4lkd4j20e4097wfy.jpg\" alt=\"\"></li>\n<li>这样的结构对于我们要查找某个结点的某个孩子，或者找某个结点的兄弟，只需要查找这个结点的孩子单链表即可，对于遍历整棵树也是很方便的，对头结点的数组循环即可。</li>\n<li>但是对于如何知道某个结点的双亲是谁比较麻烦，需要遍历整棵树才行。</li>\n</ul>\n</li>\n<li>双亲孩子表示法\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokaauf6rj20dv09f76r.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>孩子兄弟表示法\n<ul>\n<li>任意一颗树，它的结点的第一个孩子如果存在就是唯一的，他的右兄弟如果存在也是唯一的。因此，我们设置两个指针，分别指向该结点的第一个孩子和此结点的右兄弟。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokak2srmj208e013q2x.jpg\" alt=\"\"></li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokaroxlhj20ew08o0ul.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>二叉树的定义\n<ul>\n<li>二叉树（BinaryTree）是 n (n&gt;=0) 个结点的有限集合，该集合或者为空集（称为空二叉树），或者由一个根结点和两棵互不相交的、分别称为根结点的左子树和右子树的二叉树组成。</li>\n</ul>\n</li>\n<li>二叉树的特点\n<ul>\n<li>每个结点最多有两棵子树，所以二叉树中不存在度大于 2 的结点。注意不是只有两棵子树，而是最多有。没有子树或者有一棵子树都是可以的。</li>\n<li>左子树和右子树是有顺序的，次序不能任意颠倒。就像人是双手、双脚，但显然左手、左脚和右手、右脚是不一样的，右手戴左手套、右脚穿左鞋都会极其别扭和难受</li>\n<li>即使树中某结点只有一棵子树，也要区分它是左子树还是右子树。图 6-5-3 中，树 1 和树 2 是同一棵树，但它们却是不同的二叉树。就好像你一不小心，摔伤了手，伤的是左手还是右手，对你的生活影响度是完全不同的。</li>\n</ul>\n</li>\n<li>二叉树的五种基本形态\n<ul>\n<li>空二叉树。</li>\n<li>只有一个根结点。</li>\n<li>根结点只有左子树。</li>\n<li>根结点只有右子树。</li>\n<li>根结点既有左子树，又有右子树。</li>\n</ul>\n</li>\n<li>特殊的二叉树\n<ul>\n<li>斜树\n<ul>\n<li>左斜树和右斜树：所有的结点都只有左子树的二叉树叫左斜树，所有结点都是只有右子树的二叉树叫右斜树。</li>\n</ul>\n</li>\n<li>满二叉树\n<ul>\n<li>在一棵二叉树中，如果所有分支结点都存在左子树和右子树，并且所有叶子都在同一层上，这样的二叉树称为满二叉树。</li>\n</ul>\n</li>\n<li>满二叉树的特点\n<ul>\n<li>叶子只能出现在最下一层，出现在其他层就不可能达成平衡。</li>\n<li>非叶子结点的度一定是2。</li>\n<li>在同样深度的二叉树中，满二叉树的结点个数最多，叶子数最多。</li>\n</ul>\n</li>\n<li>完全二叉树\n<ul>\n<li>对一棵具有 n 个结点的二叉树按层序编号，如果编号为 i (1 &lt;i &lt;n）的结点与同样深度的满二叉树中编号为 i 的结点在二叉树中位置完全相同，则这棵二叉树称为完全二叉树。</li>\n<li>首先从字面上要区分，完全和满的差异，满二叉树一定是一棵完全二叉“满的差异，满二叉树一定是一棵完全二叉”“”树，但完全二叉树不一定是满的。</li>\n<li>其次，完全二叉树的所有结点与同样深度的满二叉树，它们按层序编号相同的结点，是一一对应的。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokb6ghb9j20cy059dgp.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>完全二叉树的特点\n<ul>\n<li>叶子结点只能出现在最下两层。</li>\n<li>最下层的叶子一定集中在左部连续位置。</li>\n<li>倒数二层，若有叶子结点，一定都在右部连续位置。</li>\n<li>如果结点度为 1, 则该结点只有左孩子，即不存在只有右子树的情况。（5) 同样结点数的二叉树，完全二叉树的深度最小。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>二叉树的性质\n<ul>\n<li>在二叉树的第 i 层上至多有 2i-1个结点（i&gt;1)。</li>\n<li>深度为 k 的二叉树至多有 2k -1个结点（k&gt;1)。</li>\n<li>对任何一棵二叉树 T ，如果其终端结点数为n0,度为2的结点数为n2，则n0 = n2 + 1</li>\n<li>具有 n 个结点的完全二叉树的深度为 [log2n]+1 ([x]表示不大于x的最大整数）。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokbfm1gvj20ja074whj.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>二叉树顺序存储结构\n<ul>\n<li>为了防止空间浪费，顺序存储结构一般用于完全二叉树，对于一般的二叉树，尽管层序编号不能反映逻辑关系，但是可以将其按完全二叉树编号，把不存在的结点设置为“^”而已。不过如果二叉树的右子树比左子树多太多，就会造成很大的空间浪费。\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokccjfxzj20c005lmy1.jpg\" alt=\"\"></li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokcmosf9j20ec02d0t9.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>二叉链表\n<ul>\n<li>二叉树每个结点最多有两个孩子，所以为它设计一个数据域和两个指针域是比较自然的想法，我们称这样的链表叫做二叉链表。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokctvlvdj2088019q2x.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>遍历二叉树\n<ul>\n<li>二叉树的遍历是指从根结点出发，按照某种次序依次访问二叉树中的所有结点，使得每个结点被访问一次，且仅仅被访问一次。</li>\n</ul>\n</li>\n<li>二叉树的遍历方法：遍历二叉树的时候可以尝试填充为完全二叉树。\n<ul>\n<li>前序遍历\n<ul>\n<li>若二叉树为空，则空操作返回，否则访问根结点，然后前序遍历左子树，再前序遍历右子树。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokd1ev7wj206t06tq3r.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>中序遍历\n<ul>\n<li>若二叉树为空，则空操作返回，否则从根结点开始，终须遍历根结点的左子树，然后访问根结点，最后中序遍历右子树。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokdahur2j206n06xgmc.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>后序遍历\n<ul>\n<li>规则是若树为空，则空操作返回，否则从左到右先叶子后结点的方式遍历访问左右子树，最后是访问根结点。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokdi0s7zj20710730tj.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>层序遍历\n<ul>\n<li>规则是若树为空则空操作返回，否则从树的第一层，也就是根结点开始访问，从上而下逐层遍历，在同一层中，按从左到右的顺序对结点逐个访问。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokdsx3wgj206t077gme.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>二叉树的建立</li>\n<li>线索二叉树\n<ul>\n<li>指向前驱和后继的指针称为线索，加上线索的二叉链表称为线索链表，相应的二叉树就称为线索二叉树。</li>\n<li>对二叉树以某种次序遍历使其变为线索二叉树的过程称为线索化。</li>\n</ul>\n</li>\n<li>树转换为二叉树\n<ul>\n<li>加线。在所有兄弟叫结点之间加一条线。</li>\n<li>去线。对树种每个结点，值保留它与第一个孩子结点连线，删除它与其他孩子结点之间的连线。</li>\n<li>层次调整。以树的根结点为轴心，将整棵树顺时针旋转一定的角度，使之结构层次分明。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsoke4lykvj20bw09qabz.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>森林转换为二叉树\n<ul>\n<li>森林是由若干棵树组成的，所以完全可以理解为，森林中的每一棵树都是兄弟可以按照兄弟的处理办法来操作。步骤如下：</li>\n<li>把每个树转换为二叉树。</li>\n<li>第一棵二叉树不动，从第二棵二叉树开始，依次把后一棵二叉树的根结点作为前一棵二叉树的根结点的右孩子用线连接起来。当所有的二叉树连接起来后，就得到了由森林转换来的二叉树。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokec0nzkj20hp0by0v6.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>二叉树转换为树\n<ul>\n<li>加线。若某结点的左孩子结点存在，则将这个左孩子的右孩子结点、右孩子的右孩子结点、右孩子的右孩子的右孩子结点……哈，反正就是左孩子的n个右孩子结点都作为此结点的孩子。将改结点与这些右孩子结点用线连接起来。</li>\n<li>去线。删除原二叉树中所有结点与其右孩子结点的连线。</li>\n<li>层次调整。使之结构层次分明。</li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsokeqeksaj20ef0bldi0.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>二叉树转换为森林\n<ul>\n<li>判断一颗二叉树能够转换成一棵树还是森林，看这棵二叉树的根结点有没有右孩子，有就是森林，没有就是一棵树。</li>\n</ul>\n</li>\n<li>树的遍历\n<ul>\n<li>先根遍历。先访问树的根结点，然后依次先根遍历根的每棵子树。</li>\n<li>后根遍历。先依次后根遍历每棵子树，然后再访问根结点。</li>\n</ul>\n</li>\n<li>森林的遍历\n<ul>\n<li>前序遍历：先访问森林中第一棵树的根结点，然后再依次先根遍历根的每棵子树，再依次用同样方式遍历除去第一棵树的剩余树构成的森林。</li>\n<li>后序遍历：是先访问森林中第一棵树，后根遍历的方式遍历每棵子树，然后再访问根结点，再依次同样方式遍历除去第一棵树的剩余树构成的森林。</li>\n</ul>\n</li>\n<li>赫夫曼树及其应用\n<ul>\n<li>从树中一个结点到另一个结点之间的分支构成两个结点之间的路径，路径上的分支数目称作路径长度。树的路径长度就是从树根到每一个结点的路径长度之和。</li>\n<li>结点的带权路径长度为从该结点到树根之间的路径长度与结点上权的乘积。</li>\n<li>带权路径长度WPL最小的二叉树称作赫夫曼树，或叫做最优二叉树。</li>\n</ul>\n</li>\n</ul>"},{"title":"爬取盗墓笔记生成json","date":"2016-11-11T03:10:00.000Z","_content":"\n爬取盗墓笔记网站，根据章节生成json。使用requests进行网络请求，通过pyquery对网页进行解析。再把生成的json保存到本地文件。\n<!-- more -->\n\n### 代码\n```python\nimport requests\nfrom  pyquery import PyQuery as pq\nimport json\n\nresponse = requests.get('http://seputu.com')\ndoc = pq(response.text)\n\ntitle = doc('title').text()\n# print(title)\n\ndict = {}\nmulu_list = []\nmulu = doc('div[class=mulu]')\nfor item in mulu.items():\n    mulu_title = item('div[class=mulu-title] center h2')\n    if mulu_title:\n        # print(mulu_title.text())\n        chapter_list = []\n        chapter = item('div[class=box] ul li a')\n        for chapter_item in chapter.items():\n            chapter_url = chapter_item.attr.href\n            chapter_text = chapter_item.text()\n            chapter_list.append({'chapter_title': chapter_text, 'chapter_url': chapter_url})\n            # print(page_item_url)\n            # print(page_item_text)\n        mulu_list.append({\"round_title\": mulu_title.text(), 'round_detail': chapter_list})\n\ndict['title'] = title\ndict['content'] = mulu_list\n\nwith open('qiye.json', 'w') as f:\n    json.dump(dict, f,ensure_ascii=False, indent=4)\n\n```\n\n一定要指定ensure_ascii为False,否则生成的json为unicode格式，不能看懂\n\n\n### 生成的json\n\n```json\n{\n   \"content\": [\n       {\n           \"round_title\": \"盗墓笔记1七星鲁王宫\",\n           \"round_detail\": [\n               {\n                   \"chapter_title\": \"七星鲁王 第一章 血尸\",\n                   \"chapter_url\": \"http://seputu.com/biji1/1.html\"\n               },\n               {\n                   \"chapter_title\": \"七星鲁王 第二章 五十年后\",\n                   \"chapter_url\": \"http://seputu.com/biji1/2.html\"\n               },\n               ...\n               {\n                   \"chapter_title\": \"怒海潜沙 第四十六章 总结\",\n                   \"chapter_url\": \"http://seputu.com/biji1/75.html\"\n               }\n           ]\n       },\n       {\n           \"round_title\": \"盗墓笔记2秦岭神树\",\n           \"round_detail\": [\n               {\n                   \"chapter_title\": \"秦岭神树篇 第一章 老痒出狱\",\n                   \"chapter_url\": \"http://seputu.com/biji2/76.html\"\n               },\n               ...\n               {\n                   \"chapter_title\": \"云顶天宫（上） 第十五章 双层壁画\",\n                   \"chapter_url\": \"http://seputu.com/biji2/130.html\"\n               }\n           ]\n       },\n       {\n           \"round_title\": \"盗墓笔记3云顶天宫\",\n           \"round_detail\": [\n               {\n                   \"chapter_title\": \"云顶天宫（下） 第一章 五圣雪山\",\n                   \"chapter_url\": \"http://seputu.com/biji3/131.html\"\n               },\n               ...\n               {\n                   \"chapter_title\": \"盗墓笔记（另类）.mp3\",\n                   \"chapter_url\": \"http://seputu.com/hesui/993.html\"\n               }\n           ]\n       }\n   ],\n   \"title\": \"盗墓笔记,盗墓笔记小说全集在线阅读\"\n}\n```","source":"_posts/爬取盗墓笔记生成json.md","raw":"---\ntitle: 爬取盗墓笔记生成json\ntags:\n  - python\n  - json\n  - 爬虫\ncategories:\n  - 爬虫\ndate: 2016-11-11 11:10:00\n---\n\n爬取盗墓笔记网站，根据章节生成json。使用requests进行网络请求，通过pyquery对网页进行解析。再把生成的json保存到本地文件。\n<!-- more -->\n\n### 代码\n```python\nimport requests\nfrom  pyquery import PyQuery as pq\nimport json\n\nresponse = requests.get('http://seputu.com')\ndoc = pq(response.text)\n\ntitle = doc('title').text()\n# print(title)\n\ndict = {}\nmulu_list = []\nmulu = doc('div[class=mulu]')\nfor item in mulu.items():\n    mulu_title = item('div[class=mulu-title] center h2')\n    if mulu_title:\n        # print(mulu_title.text())\n        chapter_list = []\n        chapter = item('div[class=box] ul li a')\n        for chapter_item in chapter.items():\n            chapter_url = chapter_item.attr.href\n            chapter_text = chapter_item.text()\n            chapter_list.append({'chapter_title': chapter_text, 'chapter_url': chapter_url})\n            # print(page_item_url)\n            # print(page_item_text)\n        mulu_list.append({\"round_title\": mulu_title.text(), 'round_detail': chapter_list})\n\ndict['title'] = title\ndict['content'] = mulu_list\n\nwith open('qiye.json', 'w') as f:\n    json.dump(dict, f,ensure_ascii=False, indent=4)\n\n```\n\n一定要指定ensure_ascii为False,否则生成的json为unicode格式，不能看懂\n\n\n### 生成的json\n\n```json\n{\n   \"content\": [\n       {\n           \"round_title\": \"盗墓笔记1七星鲁王宫\",\n           \"round_detail\": [\n               {\n                   \"chapter_title\": \"七星鲁王 第一章 血尸\",\n                   \"chapter_url\": \"http://seputu.com/biji1/1.html\"\n               },\n               {\n                   \"chapter_title\": \"七星鲁王 第二章 五十年后\",\n                   \"chapter_url\": \"http://seputu.com/biji1/2.html\"\n               },\n               ...\n               {\n                   \"chapter_title\": \"怒海潜沙 第四十六章 总结\",\n                   \"chapter_url\": \"http://seputu.com/biji1/75.html\"\n               }\n           ]\n       },\n       {\n           \"round_title\": \"盗墓笔记2秦岭神树\",\n           \"round_detail\": [\n               {\n                   \"chapter_title\": \"秦岭神树篇 第一章 老痒出狱\",\n                   \"chapter_url\": \"http://seputu.com/biji2/76.html\"\n               },\n               ...\n               {\n                   \"chapter_title\": \"云顶天宫（上） 第十五章 双层壁画\",\n                   \"chapter_url\": \"http://seputu.com/biji2/130.html\"\n               }\n           ]\n       },\n       {\n           \"round_title\": \"盗墓笔记3云顶天宫\",\n           \"round_detail\": [\n               {\n                   \"chapter_title\": \"云顶天宫（下） 第一章 五圣雪山\",\n                   \"chapter_url\": \"http://seputu.com/biji3/131.html\"\n               },\n               ...\n               {\n                   \"chapter_title\": \"盗墓笔记（另类）.mp3\",\n                   \"chapter_url\": \"http://seputu.com/hesui/993.html\"\n               }\n           ]\n       }\n   ],\n   \"title\": \"盗墓笔记,盗墓笔记小说全集在线阅读\"\n}\n```","slug":"爬取盗墓笔记生成json","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv546001j58ugex1zjmy3","content":"<p>爬取盗墓笔记网站，根据章节生成json。使用requests进行网络请求，通过pyquery对网页进行解析。再把生成的json保存到本地文件。</p>\n<a id=\"more\"></a>\n<h3 id=\"代码\"><a class=\"header-anchor\" href=\"#代码\">¶</a>代码</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span>  pyquery <span class=\"keyword\">import</span> PyQuery <span class=\"keyword\">as</span> pq</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.get(<span class=\"string\">'http://seputu.com'</span>)</span><br><span class=\"line\">doc = pq(response.text)</span><br><span class=\"line\"></span><br><span class=\"line\">title = doc(<span class=\"string\">'title'</span>).text()</span><br><span class=\"line\"><span class=\"comment\"># print(title)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dict = &#123;&#125;</span><br><span class=\"line\">mulu_list = []</span><br><span class=\"line\">mulu = doc(<span class=\"string\">'div[class=mulu]'</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> mulu.items():</span><br><span class=\"line\">    mulu_title = item(<span class=\"string\">'div[class=mulu-title] center h2'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> mulu_title:</span><br><span class=\"line\">        <span class=\"comment\"># print(mulu_title.text())</span></span><br><span class=\"line\">        chapter_list = []</span><br><span class=\"line\">        chapter = item(<span class=\"string\">'div[class=box] ul li a'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> chapter_item <span class=\"keyword\">in</span> chapter.items():</span><br><span class=\"line\">            chapter_url = chapter_item.attr.href</span><br><span class=\"line\">            chapter_text = chapter_item.text()</span><br><span class=\"line\">            chapter_list.append(&#123;<span class=\"string\">'chapter_title'</span>: chapter_text, <span class=\"string\">'chapter_url'</span>: chapter_url&#125;)</span><br><span class=\"line\">            <span class=\"comment\"># print(page_item_url)</span></span><br><span class=\"line\">            <span class=\"comment\"># print(page_item_text)</span></span><br><span class=\"line\">        mulu_list.append(&#123;<span class=\"string\">\"round_title\"</span>: mulu_title.text(), <span class=\"string\">'round_detail'</span>: chapter_list&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">dict[<span class=\"string\">'title'</span>] = title</span><br><span class=\"line\">dict[<span class=\"string\">'content'</span>] = mulu_list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">'qiye.json'</span>, <span class=\"string\">'w'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    json.dump(dict, f,ensure_ascii=<span class=\"keyword\">False</span>, indent=<span class=\"number\">4</span>)</span><br></pre></td></tr></table></figure>\n<p>一定要指定ensure_ascii为False,否则生成的json为unicode格式，不能看懂</p>\n<h3 id=\"生成的json\"><a class=\"header-anchor\" href=\"#生成的json\">¶</a>生成的json</h3>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"attr\">\"content\"</span>: [</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">           <span class=\"attr\">\"round_title\"</span>: <span class=\"string\">\"盗墓笔记1七星鲁王宫\"</span>,</span><br><span class=\"line\">           <span class=\"attr\">\"round_detail\"</span>: [</span><br><span class=\"line\">               &#123;</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_title\"</span>: <span class=\"string\">\"七星鲁王 第一章 血尸\"</span>,</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_url\"</span>: <span class=\"string\">\"http://seputu.com/biji1/1.html\"</span></span><br><span class=\"line\">               &#125;,</span><br><span class=\"line\">               &#123;</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_title\"</span>: <span class=\"string\">\"七星鲁王 第二章 五十年后\"</span>,</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_url\"</span>: <span class=\"string\">\"http://seputu.com/biji1/2.html\"</span></span><br><span class=\"line\">               &#125;,</span><br><span class=\"line\">               ...</span><br><span class=\"line\">               &#123;</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_title\"</span>: <span class=\"string\">\"怒海潜沙 第四十六章 总结\"</span>,</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_url\"</span>: <span class=\"string\">\"http://seputu.com/biji1/75.html\"</span></span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           ]</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">           <span class=\"attr\">\"round_title\"</span>: <span class=\"string\">\"盗墓笔记2秦岭神树\"</span>,</span><br><span class=\"line\">           <span class=\"attr\">\"round_detail\"</span>: [</span><br><span class=\"line\">               &#123;</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_title\"</span>: <span class=\"string\">\"秦岭神树篇 第一章 老痒出狱\"</span>,</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_url\"</span>: <span class=\"string\">\"http://seputu.com/biji2/76.html\"</span></span><br><span class=\"line\">               &#125;,</span><br><span class=\"line\">               ...</span><br><span class=\"line\">               &#123;</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_title\"</span>: <span class=\"string\">\"云顶天宫（上） 第十五章 双层壁画\"</span>,</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_url\"</span>: <span class=\"string\">\"http://seputu.com/biji2/130.html\"</span></span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           ]</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">           <span class=\"attr\">\"round_title\"</span>: <span class=\"string\">\"盗墓笔记3云顶天宫\"</span>,</span><br><span class=\"line\">           <span class=\"attr\">\"round_detail\"</span>: [</span><br><span class=\"line\">               &#123;</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_title\"</span>: <span class=\"string\">\"云顶天宫（下） 第一章 五圣雪山\"</span>,</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_url\"</span>: <span class=\"string\">\"http://seputu.com/biji3/131.html\"</span></span><br><span class=\"line\">               &#125;,</span><br><span class=\"line\">               ...</span><br><span class=\"line\">               &#123;</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_title\"</span>: <span class=\"string\">\"盗墓笔记（另类）.mp3\"</span>,</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_url\"</span>: <span class=\"string\">\"http://seputu.com/hesui/993.html\"</span></span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           ]</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   ],</span><br><span class=\"line\">   <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"盗墓笔记,盗墓笔记小说全集在线阅读\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"<p>爬取盗墓笔记网站，根据章节生成json。使用requests进行网络请求，通过pyquery对网页进行解析。再把生成的json保存到本地文件。</p>","more":"<h3 id=\"代码\"><a class=\"header-anchor\" href=\"#代码\">¶</a>代码</h3>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">from</span>  pyquery <span class=\"keyword\">import</span> PyQuery <span class=\"keyword\">as</span> pq</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\">response = requests.get(<span class=\"string\">'http://seputu.com'</span>)</span><br><span class=\"line\">doc = pq(response.text)</span><br><span class=\"line\"></span><br><span class=\"line\">title = doc(<span class=\"string\">'title'</span>).text()</span><br><span class=\"line\"><span class=\"comment\"># print(title)</span></span><br><span class=\"line\"></span><br><span class=\"line\">dict = &#123;&#125;</span><br><span class=\"line\">mulu_list = []</span><br><span class=\"line\">mulu = doc(<span class=\"string\">'div[class=mulu]'</span>)</span><br><span class=\"line\"><span class=\"keyword\">for</span> item <span class=\"keyword\">in</span> mulu.items():</span><br><span class=\"line\">    mulu_title = item(<span class=\"string\">'div[class=mulu-title] center h2'</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> mulu_title:</span><br><span class=\"line\">        <span class=\"comment\"># print(mulu_title.text())</span></span><br><span class=\"line\">        chapter_list = []</span><br><span class=\"line\">        chapter = item(<span class=\"string\">'div[class=box] ul li a'</span>)</span><br><span class=\"line\">        <span class=\"keyword\">for</span> chapter_item <span class=\"keyword\">in</span> chapter.items():</span><br><span class=\"line\">            chapter_url = chapter_item.attr.href</span><br><span class=\"line\">            chapter_text = chapter_item.text()</span><br><span class=\"line\">            chapter_list.append(&#123;<span class=\"string\">'chapter_title'</span>: chapter_text, <span class=\"string\">'chapter_url'</span>: chapter_url&#125;)</span><br><span class=\"line\">            <span class=\"comment\"># print(page_item_url)</span></span><br><span class=\"line\">            <span class=\"comment\"># print(page_item_text)</span></span><br><span class=\"line\">        mulu_list.append(&#123;<span class=\"string\">\"round_title\"</span>: mulu_title.text(), <span class=\"string\">'round_detail'</span>: chapter_list&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">dict[<span class=\"string\">'title'</span>] = title</span><br><span class=\"line\">dict[<span class=\"string\">'content'</span>] = mulu_list</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">with</span> open(<span class=\"string\">'qiye.json'</span>, <span class=\"string\">'w'</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">    json.dump(dict, f,ensure_ascii=<span class=\"keyword\">False</span>, indent=<span class=\"number\">4</span>)</span><br></pre></td></tr></table></figure>\n<p>一定要指定ensure_ascii为False,否则生成的json为unicode格式，不能看懂</p>\n<h3 id=\"生成的json\"><a class=\"header-anchor\" href=\"#生成的json\">¶</a>生成的json</h3>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">   <span class=\"attr\">\"content\"</span>: [</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">           <span class=\"attr\">\"round_title\"</span>: <span class=\"string\">\"盗墓笔记1七星鲁王宫\"</span>,</span><br><span class=\"line\">           <span class=\"attr\">\"round_detail\"</span>: [</span><br><span class=\"line\">               &#123;</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_title\"</span>: <span class=\"string\">\"七星鲁王 第一章 血尸\"</span>,</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_url\"</span>: <span class=\"string\">\"http://seputu.com/biji1/1.html\"</span></span><br><span class=\"line\">               &#125;,</span><br><span class=\"line\">               &#123;</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_title\"</span>: <span class=\"string\">\"七星鲁王 第二章 五十年后\"</span>,</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_url\"</span>: <span class=\"string\">\"http://seputu.com/biji1/2.html\"</span></span><br><span class=\"line\">               &#125;,</span><br><span class=\"line\">               ...</span><br><span class=\"line\">               &#123;</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_title\"</span>: <span class=\"string\">\"怒海潜沙 第四十六章 总结\"</span>,</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_url\"</span>: <span class=\"string\">\"http://seputu.com/biji1/75.html\"</span></span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           ]</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">           <span class=\"attr\">\"round_title\"</span>: <span class=\"string\">\"盗墓笔记2秦岭神树\"</span>,</span><br><span class=\"line\">           <span class=\"attr\">\"round_detail\"</span>: [</span><br><span class=\"line\">               &#123;</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_title\"</span>: <span class=\"string\">\"秦岭神树篇 第一章 老痒出狱\"</span>,</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_url\"</span>: <span class=\"string\">\"http://seputu.com/biji2/76.html\"</span></span><br><span class=\"line\">               &#125;,</span><br><span class=\"line\">               ...</span><br><span class=\"line\">               &#123;</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_title\"</span>: <span class=\"string\">\"云顶天宫（上） 第十五章 双层壁画\"</span>,</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_url\"</span>: <span class=\"string\">\"http://seputu.com/biji2/130.html\"</span></span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           ]</span><br><span class=\"line\">       &#125;,</span><br><span class=\"line\">       &#123;</span><br><span class=\"line\">           <span class=\"attr\">\"round_title\"</span>: <span class=\"string\">\"盗墓笔记3云顶天宫\"</span>,</span><br><span class=\"line\">           <span class=\"attr\">\"round_detail\"</span>: [</span><br><span class=\"line\">               &#123;</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_title\"</span>: <span class=\"string\">\"云顶天宫（下） 第一章 五圣雪山\"</span>,</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_url\"</span>: <span class=\"string\">\"http://seputu.com/biji3/131.html\"</span></span><br><span class=\"line\">               &#125;,</span><br><span class=\"line\">               ...</span><br><span class=\"line\">               &#123;</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_title\"</span>: <span class=\"string\">\"盗墓笔记（另类）.mp3\"</span>,</span><br><span class=\"line\">                   <span class=\"attr\">\"chapter_url\"</span>: <span class=\"string\">\"http://seputu.com/hesui/993.html\"</span></span><br><span class=\"line\">               &#125;</span><br><span class=\"line\">           ]</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   ],</span><br><span class=\"line\">   <span class=\"attr\">\"title\"</span>: <span class=\"string\">\"盗墓笔记,盗墓笔记小说全集在线阅读\"</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"线性表","date":"2017-05-27T10:22:15.000Z","_content":"\n* 线性表（List）：零个或多个数据元素的有限序列。\n    * 线性表元素的个数n定义为线性表的长度，当n = 0时，称为空表。\n* 线性表的抽象数据类型\n    * 定义线性表的基本操作：初始化操作，判断线性表为空，清空线性表，获取第i个位置的元素，查找某个元素e，在位置i插入元素e，删除第i个位置的元素，返回被删除的元素e，获取线性表元素的个数等。\n    * 实际中还有其他的线性表操作，都是由基本操作组合实现的。\n<!-- more -->\n* 线性表的顺序存储结构：一段地址连续的存储单元依次存储线性表的数据元素。\n    * 数据长度和线性表长度的区别。\n    * 线性表元素地址的计算方法，c为每个元素暂用的存储单元。\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojjbgboej205000yaa1.jpg)\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojjgd5nnj206000waa2.jpg)\n    * 顺序存储结构的插入与删除\n        * 获得元素非常简单，时间复杂度为O(1)。\n        * 插入元素，从插入位置起后面的元素都要向后移，时间复杂度为O(n)。\n        * 删除元素，从删除位置起后面的元素都要向前移，时间复杂度为O(n)。\n    * 线性表对比顺序存储点的优缺点\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojmsnymgj20f007m424.jpg)\n* 线性表的链式存储结构\n    * 链式存储结构的定义\n        * 所有元素不是按照顺序放在连续的地址块上，不用考虑位置。\n        * 每一个元素除了记录本身的信息外，还需记录后继元素的地址，其中存储元素信息的域称为数据域，存放后继位置的域称为指针域。指针域中存储的信息称为指针或链，这两部分信息组成数据元素ai的存储映像，称为结点。\n        * n个结点链结成一个链表，即为线性表的链式存储结构。每个结点只包含一个指针域，称之为单链表。\n        * 链表第一个结点的存储位置叫做头指针。\n        * 最后一个结点指针为NULL。\n        * 第一个结点前附设一个结点，称为头结点，头结点的数据域存放一些公共数据。头结点不一定是链表的必须要素。\n        * 若线性表为空表，则头结点的指针域为“空”\n    * 单链表的读取\n        * 需要元素一个一个的遍历，时间复杂度为O(n)\n    * 单链表的插入与删除\n        * 遍历到需要插入元素的位置或删除元素的位置，时间复杂度为O(n)\n        * 值需要改变结点的指针即可，时间复杂度为O(1)\n    * 与顺序存储结构的对比\n        * 单个元素的插入和删除没啥优势，对于一次插入或删除多个元素，顺序存储结构每一次操作的时间复杂度都是O(n)，但是单链表只有第一次操作时间复杂度是O(n)，之后的操作时间复杂度都是O(1)。\n        * 对于插入和删除数据越频繁的操作，单链表的优势月明显。\n    *  单链表的创建\n        * 不需要预先划分空间的大小和位置，根据系统的情况和实际的需求即时生成。\n* 静态链表\n    * 用数组描述的链表叫做静态链表。\n    * 数组第一个元素的cur用来存放备用链表第一个结点的下标。\n    * 数组最后一个元素的cur用来存放第一个插入元素的下标，相当于头结点。\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojoir0k9j20h1053myl.jpg)\n    *  静态链表的插入操作\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojou7yhnj20ji056dh4.jpg)\n    * 静态链表的删除操作\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojp18ru0j20ii02x75m.jpg)\n    * 静态链表的优缺点\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojpcowuvj20ec06rq6l.jpg)\n* 循环列表\n    * 将单链表中终端结点的指针端由空指针改为指向头结点，就使整个单链表形成个环，这种头尾相接的单链表称为单循环链表，简称循环链表（circularlinked list）。\n* 双向列表\n    * （double link list）双向列表是在单链表的每个结点中，再设置一个指向其前驱结点的指针域。\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojqb54pij20j80ay77j.jpg)\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojqk4zbfj20fj04w3zk.jpg)\n    * 总结\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojqq3m3aj20gb041tat.jpg)","source":"_posts/数据结构-线性表.md","raw":"---\ntitle: 线性表\ntags:\n  - 线性表\n  - 数据结构\ncategories:\n  - 数据结构\ndate: 2017-05-27 18:22:15\n---\n\n* 线性表（List）：零个或多个数据元素的有限序列。\n    * 线性表元素的个数n定义为线性表的长度，当n = 0时，称为空表。\n* 线性表的抽象数据类型\n    * 定义线性表的基本操作：初始化操作，判断线性表为空，清空线性表，获取第i个位置的元素，查找某个元素e，在位置i插入元素e，删除第i个位置的元素，返回被删除的元素e，获取线性表元素的个数等。\n    * 实际中还有其他的线性表操作，都是由基本操作组合实现的。\n<!-- more -->\n* 线性表的顺序存储结构：一段地址连续的存储单元依次存储线性表的数据元素。\n    * 数据长度和线性表长度的区别。\n    * 线性表元素地址的计算方法，c为每个元素暂用的存储单元。\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojjbgboej205000yaa1.jpg)\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojjgd5nnj206000waa2.jpg)\n    * 顺序存储结构的插入与删除\n        * 获得元素非常简单，时间复杂度为O(1)。\n        * 插入元素，从插入位置起后面的元素都要向后移，时间复杂度为O(n)。\n        * 删除元素，从删除位置起后面的元素都要向前移，时间复杂度为O(n)。\n    * 线性表对比顺序存储点的优缺点\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojmsnymgj20f007m424.jpg)\n* 线性表的链式存储结构\n    * 链式存储结构的定义\n        * 所有元素不是按照顺序放在连续的地址块上，不用考虑位置。\n        * 每一个元素除了记录本身的信息外，还需记录后继元素的地址，其中存储元素信息的域称为数据域，存放后继位置的域称为指针域。指针域中存储的信息称为指针或链，这两部分信息组成数据元素ai的存储映像，称为结点。\n        * n个结点链结成一个链表，即为线性表的链式存储结构。每个结点只包含一个指针域，称之为单链表。\n        * 链表第一个结点的存储位置叫做头指针。\n        * 最后一个结点指针为NULL。\n        * 第一个结点前附设一个结点，称为头结点，头结点的数据域存放一些公共数据。头结点不一定是链表的必须要素。\n        * 若线性表为空表，则头结点的指针域为“空”\n    * 单链表的读取\n        * 需要元素一个一个的遍历，时间复杂度为O(n)\n    * 单链表的插入与删除\n        * 遍历到需要插入元素的位置或删除元素的位置，时间复杂度为O(n)\n        * 值需要改变结点的指针即可，时间复杂度为O(1)\n    * 与顺序存储结构的对比\n        * 单个元素的插入和删除没啥优势，对于一次插入或删除多个元素，顺序存储结构每一次操作的时间复杂度都是O(n)，但是单链表只有第一次操作时间复杂度是O(n)，之后的操作时间复杂度都是O(1)。\n        * 对于插入和删除数据越频繁的操作，单链表的优势月明显。\n    *  单链表的创建\n        * 不需要预先划分空间的大小和位置，根据系统的情况和实际的需求即时生成。\n* 静态链表\n    * 用数组描述的链表叫做静态链表。\n    * 数组第一个元素的cur用来存放备用链表第一个结点的下标。\n    * 数组最后一个元素的cur用来存放第一个插入元素的下标，相当于头结点。\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojoir0k9j20h1053myl.jpg)\n    *  静态链表的插入操作\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojou7yhnj20ji056dh4.jpg)\n    * 静态链表的删除操作\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojp18ru0j20ii02x75m.jpg)\n    * 静态链表的优缺点\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojpcowuvj20ec06rq6l.jpg)\n* 循环列表\n    * 将单链表中终端结点的指针端由空指针改为指向头结点，就使整个单链表形成个环，这种头尾相接的单链表称为单循环链表，简称循环链表（circularlinked list）。\n* 双向列表\n    * （double link list）双向列表是在单链表的每个结点中，再设置一个指向其前驱结点的指针域。\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojqb54pij20j80ay77j.jpg)\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojqk4zbfj20fj04w3zk.jpg)\n    * 总结\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsojqq3m3aj20gb041tat.jpg)","slug":"数据结构-线性表","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv547001m58ugieuclzrt","content":"<ul>\n<li>线性表（List）：零个或多个数据元素的有限序列。\n<ul>\n<li>线性表元素的个数n定义为线性表的长度，当n = 0时，称为空表。</li>\n</ul>\n</li>\n<li>线性表的抽象数据类型\n<ul>\n<li>定义线性表的基本操作：初始化操作，判断线性表为空，清空线性表，获取第i个位置的元素，查找某个元素e，在位置i插入元素e，删除第i个位置的元素，返回被删除的元素e，获取线性表元素的个数等。</li>\n<li>实际中还有其他的线性表操作，都是由基本操作组合实现的。</li>\n</ul>\n</li>\n</ul>\n<a id=\"more\"></a>\n<ul>\n<li>线性表的顺序存储结构：一段地址连续的存储单元依次存储线性表的数据元素。\n<ul>\n<li>数据长度和线性表长度的区别。</li>\n<li>线性表元素地址的计算方法，c为每个元素暂用的存储单元。\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojjbgboej205000yaa1.jpg\" alt=\"\"></li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojjgd5nnj206000waa2.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>顺序存储结构的插入与删除\n<ul>\n<li>获得元素非常简单，时间复杂度为O(1)。</li>\n<li>插入元素，从插入位置起后面的元素都要向后移，时间复杂度为O(n)。</li>\n<li>删除元素，从删除位置起后面的元素都要向前移，时间复杂度为O(n)。</li>\n</ul>\n</li>\n<li>线性表对比顺序存储点的优缺点\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojmsnymgj20f007m424.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>线性表的链式存储结构\n<ul>\n<li>链式存储结构的定义\n<ul>\n<li>所有元素不是按照顺序放在连续的地址块上，不用考虑位置。</li>\n<li>每一个元素除了记录本身的信息外，还需记录后继元素的地址，其中存储元素信息的域称为数据域，存放后继位置的域称为指针域。指针域中存储的信息称为指针或链，这两部分信息组成数据元素ai的存储映像，称为结点。</li>\n<li>n个结点链结成一个链表，即为线性表的链式存储结构。每个结点只包含一个指针域，称之为单链表。</li>\n<li>链表第一个结点的存储位置叫做头指针。</li>\n<li>最后一个结点指针为NULL。</li>\n<li>第一个结点前附设一个结点，称为头结点，头结点的数据域存放一些公共数据。头结点不一定是链表的必须要素。</li>\n<li>若线性表为空表，则头结点的指针域为“空”</li>\n</ul>\n</li>\n<li>单链表的读取\n<ul>\n<li>需要元素一个一个的遍历，时间复杂度为O(n)</li>\n</ul>\n</li>\n<li>单链表的插入与删除\n<ul>\n<li>遍历到需要插入元素的位置或删除元素的位置，时间复杂度为O(n)</li>\n<li>值需要改变结点的指针即可，时间复杂度为O(1)</li>\n</ul>\n</li>\n<li>与顺序存储结构的对比\n<ul>\n<li>单个元素的插入和删除没啥优势，对于一次插入或删除多个元素，顺序存储结构每一次操作的时间复杂度都是O(n)，但是单链表只有第一次操作时间复杂度是O(n)，之后的操作时间复杂度都是O(1)。</li>\n<li>对于插入和删除数据越频繁的操作，单链表的优势月明显。</li>\n</ul>\n</li>\n<li>单链表的创建\n<ul>\n<li>不需要预先划分空间的大小和位置，根据系统的情况和实际的需求即时生成。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>静态链表\n<ul>\n<li>用数组描述的链表叫做静态链表。</li>\n<li>数组第一个元素的cur用来存放备用链表第一个结点的下标。</li>\n<li>数组最后一个元素的cur用来存放第一个插入元素的下标，相当于头结点。\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojoir0k9j20h1053myl.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>静态链表的插入操作\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojou7yhnj20ji056dh4.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>静态链表的删除操作\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojp18ru0j20ii02x75m.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>静态链表的优缺点\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojpcowuvj20ec06rq6l.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>循环列表\n<ul>\n<li>将单链表中终端结点的指针端由空指针改为指向头结点，就使整个单链表形成个环，这种头尾相接的单链表称为单循环链表，简称循环链表（circularlinked list）。</li>\n</ul>\n</li>\n<li>双向列表\n<ul>\n<li>（double link list）双向列表是在单链表的每个结点中，再设置一个指向其前驱结点的指针域。\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojqb54pij20j80ay77j.jpg\" alt=\"\"></li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojqk4zbfj20fj04w3zk.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>总结\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojqq3m3aj20gb041tat.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<ul>\n<li>线性表（List）：零个或多个数据元素的有限序列。\n<ul>\n<li>线性表元素的个数n定义为线性表的长度，当n = 0时，称为空表。</li>\n</ul>\n</li>\n<li>线性表的抽象数据类型\n<ul>\n<li>定义线性表的基本操作：初始化操作，判断线性表为空，清空线性表，获取第i个位置的元素，查找某个元素e，在位置i插入元素e，删除第i个位置的元素，返回被删除的元素e，获取线性表元素的个数等。</li>\n<li>实际中还有其他的线性表操作，都是由基本操作组合实现的。</li>\n</ul>\n</li>\n</ul>","more":"<ul>\n<li>线性表的顺序存储结构：一段地址连续的存储单元依次存储线性表的数据元素。\n<ul>\n<li>数据长度和线性表长度的区别。</li>\n<li>线性表元素地址的计算方法，c为每个元素暂用的存储单元。\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojjbgboej205000yaa1.jpg\" alt=\"\"></li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojjgd5nnj206000waa2.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>顺序存储结构的插入与删除\n<ul>\n<li>获得元素非常简单，时间复杂度为O(1)。</li>\n<li>插入元素，从插入位置起后面的元素都要向后移，时间复杂度为O(n)。</li>\n<li>删除元素，从删除位置起后面的元素都要向前移，时间复杂度为O(n)。</li>\n</ul>\n</li>\n<li>线性表对比顺序存储点的优缺点\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojmsnymgj20f007m424.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>线性表的链式存储结构\n<ul>\n<li>链式存储结构的定义\n<ul>\n<li>所有元素不是按照顺序放在连续的地址块上，不用考虑位置。</li>\n<li>每一个元素除了记录本身的信息外，还需记录后继元素的地址，其中存储元素信息的域称为数据域，存放后继位置的域称为指针域。指针域中存储的信息称为指针或链，这两部分信息组成数据元素ai的存储映像，称为结点。</li>\n<li>n个结点链结成一个链表，即为线性表的链式存储结构。每个结点只包含一个指针域，称之为单链表。</li>\n<li>链表第一个结点的存储位置叫做头指针。</li>\n<li>最后一个结点指针为NULL。</li>\n<li>第一个结点前附设一个结点，称为头结点，头结点的数据域存放一些公共数据。头结点不一定是链表的必须要素。</li>\n<li>若线性表为空表，则头结点的指针域为“空”</li>\n</ul>\n</li>\n<li>单链表的读取\n<ul>\n<li>需要元素一个一个的遍历，时间复杂度为O(n)</li>\n</ul>\n</li>\n<li>单链表的插入与删除\n<ul>\n<li>遍历到需要插入元素的位置或删除元素的位置，时间复杂度为O(n)</li>\n<li>值需要改变结点的指针即可，时间复杂度为O(1)</li>\n</ul>\n</li>\n<li>与顺序存储结构的对比\n<ul>\n<li>单个元素的插入和删除没啥优势，对于一次插入或删除多个元素，顺序存储结构每一次操作的时间复杂度都是O(n)，但是单链表只有第一次操作时间复杂度是O(n)，之后的操作时间复杂度都是O(1)。</li>\n<li>对于插入和删除数据越频繁的操作，单链表的优势月明显。</li>\n</ul>\n</li>\n<li>单链表的创建\n<ul>\n<li>不需要预先划分空间的大小和位置，根据系统的情况和实际的需求即时生成。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>静态链表\n<ul>\n<li>用数组描述的链表叫做静态链表。</li>\n<li>数组第一个元素的cur用来存放备用链表第一个结点的下标。</li>\n<li>数组最后一个元素的cur用来存放第一个插入元素的下标，相当于头结点。\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojoir0k9j20h1053myl.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>静态链表的插入操作\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojou7yhnj20ji056dh4.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>静态链表的删除操作\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojp18ru0j20ii02x75m.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>静态链表的优缺点\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojpcowuvj20ec06rq6l.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>循环列表\n<ul>\n<li>将单链表中终端结点的指针端由空指针改为指向头结点，就使整个单链表形成个环，这种头尾相接的单链表称为单循环链表，简称循环链表（circularlinked list）。</li>\n</ul>\n</li>\n<li>双向列表\n<ul>\n<li>（double link list）双向列表是在单链表的每个结点中，再设置一个指向其前驱结点的指针域。\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojqb54pij20j80ay77j.jpg\" alt=\"\"></li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojqk4zbfj20fj04w3zk.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>总结\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsojqq3m3aj20gb041tat.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>"},{"title":"TextureVideoView的使用","date":"2018-03-20T03:30:22.000Z","_content":"\n平时在项目中需要用到播放视频时，使用的最多的就是VideoView或者是其他第三方的播放器了。嗯，之前我也一直是这么用的，但是最近在项目中遇到了一个非常诡异的bug，我们项目使用到了腾讯云直播，并且在全屏直播的时候，屏幕上面需要通过一个小窗口播放一个视频，视频嵌套在scrollview中，可以通过向上滑动，划出scrollView所包裹的区域。\n1. 遇到的第一个问题，当直播控件开启的情况下，VideoView看不到任何效果，处于完全透明的状态。后来调查才知道，SurfaceView和普通的View不一样，它拥有一个独立于Activity之外的Window，当SurfaceView被设置为不可见的时候，其所对应的Window就会销毁，再想去显示这个SurfaceView的时候就不得不重新创建；另外，SurfaceView创建的先后顺序也是不受FrameLayout的规则影响的，一般来说，布局xml文件中FrameLayout布局靠后的view会覆盖考前的view，但SurfaceView是根据其对应的Surface创建的先后顺序决定的。\n<!-- more -->\n于是采用的网上的方法，使用setZOrderOnTop(true)或者setZOrderMediaOverlay(true)来控制SurfaceView的显示层次。完美解决了重叠无法显示视频的问题。\n\n2. 但是却还存在第二个问题，我滑动ScrollView时，将VideoView划出了ScrollView，可是却依然可见，其他控件因为划出了父控件的范围都消失了，但VideoView依然顽强地显示着。原来ScrollView因为有自己的Window，是不会受父控件约束的。看来，只能放弃使用VideoView，去寻找其他的方式了。\n\n3. 通过查找，发现除了能用SurfaceView来播放视频之外，还有一个控件TextureView也可以用来播放视频。只不过SurfaceView使用了双离屏缓冲，性能会更好，但是，我们只能试一试TextureView这个救命稻草了。由于TextureView直接使用起来比较麻烦，需要封装一下\n\n```java\npublic class TextureVideoView extends TextureView\n        implements MediaPlayerControl {\n    private static final String TAG = \"TextureVideoView\";\n\n    // all possible internal states\n    private static final int STATE_ERROR = -1;\n    private static final int STATE_IDLE = 0;\n    private static final int STATE_PREPARING = 1;\n    private static final int STATE_PREPARED = 2;\n    private static final int STATE_PLAYING = 3;\n    private static final int STATE_PAUSED = 4;\n    private static final int STATE_PLAYBACK_COMPLETED = 5;\n\n    // settable by the client\n    private Uri mUri;\n    private Map<String, String> mHeaders;\n\n    // mCurrentState is a TextureVideoView object's current state.\n    // mTargetState is the state that a method caller intends to reach.\n    // For instance, regardless the TextureVideoView object's current state,\n    // calling pause() intends to bring the object to a target state\n    // of STATE_PAUSED.\n    private int mCurrentState = STATE_IDLE;\n    private int mTargetState = STATE_IDLE;\n\n    // All the stuff we need for playing and showing a video\n    private Surface mSurface = null;\n    private MediaPlayer mMediaPlayer = null;\n    private int mAudioSession;\n    private int mVideoWidth;\n    private int mVideoHeight;\n    private MediaController mMediaController;\n    private OnCompletionListener mOnCompletionListener;\n    private MediaPlayer.OnPreparedListener mOnPreparedListener;\n    private int mCurrentBufferPercentage;\n    private OnErrorListener mOnErrorListener;\n    private OnInfoListener mOnInfoListener;\n    private int mSeekWhenPrepared;  // recording the seek position while preparing\n    private boolean mCanPause;\n    private boolean mCanSeekBack;\n    private boolean mCanSeekForward;\n    private boolean mShouldRequestAudioFocus = true;\n\n    public TextureVideoView(Context context) {\n        this(context, null);\n    }\n\n    public TextureVideoView(Context context, AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public TextureVideoView(Context context, AttributeSet attrs, int defStyle) {\n        super(context, attrs, defStyle);\n\n        mVideoWidth = 0;\n        mVideoHeight = 0;\n\n        setSurfaceTextureListener(mSurfaceTextureListener);\n\n        setFocusable(true);\n        setFocusableInTouchMode(true);\n        requestFocus();\n\n        mCurrentState = STATE_IDLE;\n        mTargetState = STATE_IDLE;\n    }\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        //Log.i(\"@@@@\", \"onMeasure(\" + MeasureSpec.toString(widthMeasureSpec) + \", \"\n        //        + MeasureSpec.toString(heightMeasureSpec) + \")\");\n\n        int width = getDefaultSize(mVideoWidth, widthMeasureSpec);\n        int height = getDefaultSize(mVideoHeight, heightMeasureSpec);\n        if (mVideoWidth > 0 && mVideoHeight > 0) {\n\n            int widthSpecMode = MeasureSpec.getMode(widthMeasureSpec);\n            int widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);\n            int heightSpecMode = MeasureSpec.getMode(heightMeasureSpec);\n            int heightSpecSize = MeasureSpec.getSize(heightMeasureSpec);\n\n            if (widthSpecMode == MeasureSpec.EXACTLY && heightSpecMode == MeasureSpec.EXACTLY) {\n                // the size is fixed\n                width = widthSpecSize;\n                height = heightSpecSize;\n\n                // for compatibility, we adjust size based on aspect ratio\n                if ( mVideoWidth * height  < width * mVideoHeight ) {\n                    //Log.i(\"@@@\", \"image too wide, correcting\");\n                    width = height * mVideoWidth / mVideoHeight;\n                } else if ( mVideoWidth * height  > width * mVideoHeight ) {\n                    //Log.i(\"@@@\", \"image too tall, correcting\");\n                    height = width * mVideoHeight / mVideoWidth;\n                }\n            } else if (widthSpecMode == MeasureSpec.EXACTLY) {\n                // only the width is fixed, adjust the height to match aspect ratio if possible\n                width = widthSpecSize;\n                height = width * mVideoHeight / mVideoWidth;\n                if (heightSpecMode == MeasureSpec.AT_MOST && height > heightSpecSize) {\n                    // couldn't match aspect ratio within the constraints\n                    height = heightSpecSize;\n                }\n            } else if (heightSpecMode == MeasureSpec.EXACTLY) {\n                // only the height is fixed, adjust the width to match aspect ratio if possible\n                height = heightSpecSize;\n                width = height * mVideoWidth / mVideoHeight;\n                if (widthSpecMode == MeasureSpec.AT_MOST && width > widthSpecSize) {\n                    // couldn't match aspect ratio within the constraints\n                    width = widthSpecSize;\n                }\n            } else {\n                // neither the width nor the height are fixed, try to use actual video size\n                width = mVideoWidth;\n                height = mVideoHeight;\n                if (heightSpecMode == MeasureSpec.AT_MOST && height > heightSpecSize) {\n                    // too tall, decrease both width and height\n                    height = heightSpecSize;\n                    width = height * mVideoWidth / mVideoHeight;\n                }\n                if (widthSpecMode == MeasureSpec.AT_MOST && width > widthSpecSize) {\n                    // too wide, decrease both width and height\n                    width = widthSpecSize;\n                    height = width * mVideoHeight / mVideoWidth;\n                }\n            }\n        } else {\n            // no size yet, just adopt the given spec sizes\n        }\n        setMeasuredDimension(width, height);\n    }\n\n    @Override\n    public void onInitializeAccessibilityEvent(AccessibilityEvent event) {\n        super.onInitializeAccessibilityEvent(event);\n        event.setClassName(TextureVideoView.class.getName());\n    }\n\n    @Override\n    public void onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo info) {\n        super.onInitializeAccessibilityNodeInfo(info);\n        info.setClassName(TextureVideoView.class.getName());\n    }\n\n    public int resolveAdjustedSize(int desiredSize, int measureSpec) {\n        return getDefaultSize(desiredSize, measureSpec);\n    }\n\n    /**\n     * Sets video path.\n     *\n     * @param path the path of the video.\n     */\n    public void setVideoPath(String path) {\n        setVideoURI(Uri.parse(path));\n    }\n\n    /**\n     * Sets video URI.\n     *\n     * @param uri the URI of the video.\n     */\n    public void setVideoURI(Uri uri) {\n        setVideoURI(uri, null);\n    }\n\n    /**\n     * Sets video URI using specific headers.\n     *\n     * @param uri     the URI of the video.\n     * @param headers the headers for the URI request.\n     *                Note that the cross domain redirection is allowed by default, but that can be\n     *                changed with key/value pairs through the headers parameter with\n     *                \"android-allow-cross-domain-redirect\" as the key and \"0\" or \"1\" as the value\n     *                to disallow or allow cross domain redirection.\n     */\n    public void setVideoURI(Uri uri, Map<String, String> headers) {\n        mUri = uri;\n        mHeaders = headers;\n        mSeekWhenPrepared = 0;\n        openVideo();\n        requestLayout();\n        invalidate();\n    }\n\n    public void stopPlayback() {\n        if (mMediaPlayer != null) {\n            mMediaPlayer.stop();\n            mMediaPlayer.release();\n            mMediaPlayer = null;\n            mCurrentState = STATE_IDLE;\n            mTargetState  = STATE_IDLE;\n            if (mShouldRequestAudioFocus) {\n                AudioManager am = (AudioManager) getContext().getApplicationContext().getSystemService(Context.AUDIO_SERVICE);\n                am.abandonAudioFocus(null);\n            }\n        }\n        clearSurface();\n    }\n\n    /**\n     * Clears the surface texture by attaching a GL context and clearing it.\n     * Code taken from <a href=\"http://stackoverflow.com/a/31582209\">Hugo Gresse's answer on stackoverflow.com</a>.\n     */\n    private void clearSurface() {\n        if (mSurface == null || Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN) {\n            return;\n        }\n\n        EGL10 egl = (EGL10) EGLContext.getEGL();\n        EGLDisplay display = egl.eglGetDisplay(EGL10.EGL_DEFAULT_DISPLAY);\n        egl.eglInitialize(display, null);\n\n        int[] attribList = {\n                EGL10.EGL_RED_SIZE, 8,\n                EGL10.EGL_GREEN_SIZE, 8,\n                EGL10.EGL_BLUE_SIZE, 8,\n                EGL10.EGL_ALPHA_SIZE, 8,\n                EGL10.EGL_RENDERABLE_TYPE, EGL10.EGL_WINDOW_BIT,\n                EGL10.EGL_NONE, 0,      // placeholder for recordable [@-3]\n                EGL10.EGL_NONE\n        };\n        EGLConfig[] configs = new EGLConfig[1];\n        int[] numConfigs = new int[1];\n        egl.eglChooseConfig(display, attribList, configs, configs.length, numConfigs);\n        EGLConfig config = configs[0];\n        EGLContext context = egl.eglCreateContext(display, config, EGL10.EGL_NO_CONTEXT, new int[]{\n                12440, 2, EGL10.EGL_NONE\n        });\n        EGLSurface eglSurface = egl.eglCreateWindowSurface(display, config, mSurface, new int[]{\n                EGL10.EGL_NONE\n        });\n\n        egl.eglMakeCurrent(display, eglSurface, eglSurface, context);\n        GLES20.glClearColor(0, 0, 0, 1);\n        GLES20.glClear(GLES20.GL_COLOR_BUFFER_BIT);\n        egl.eglSwapBuffers(display, eglSurface);\n        egl.eglDestroySurface(display, eglSurface);\n        egl.eglMakeCurrent(display, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_CONTEXT);\n        egl.eglDestroyContext(display, context);\n        egl.eglTerminate(display);\n    }\n\n    private void openVideo() {\n        if (mUri == null || mSurface == null) {\n            // not ready for playback just yet, will try again later\n            return;\n        }\n        // we shouldn't clear the target state, because somebody might have\n        // called start() previously\n        release(false);\n\n        if (mShouldRequestAudioFocus) {\n            AudioManager am = (AudioManager) getContext().getApplicationContext().getSystemService(Context.AUDIO_SERVICE);\n            am.requestAudioFocus(null, AudioManager.STREAM_MUSIC, AudioManager.AUDIOFOCUS_GAIN);\n        }\n\n        try {\n            mMediaPlayer = new MediaPlayer();\n\n            if (mAudioSession != 0) {\n                mMediaPlayer.setAudioSessionId(mAudioSession);\n            } else {\n                mAudioSession = mMediaPlayer.getAudioSessionId();\n            }\n            mMediaPlayer.setOnPreparedListener(mPreparedListener);\n            mMediaPlayer.setOnVideoSizeChangedListener(mSizeChangedListener);\n            mMediaPlayer.setOnCompletionListener(mCompletionListener);\n            mMediaPlayer.setOnErrorListener(mErrorListener);\n            mMediaPlayer.setOnInfoListener(mInfoListener);\n            mMediaPlayer.setOnBufferingUpdateListener(mBufferingUpdateListener);\n            mCurrentBufferPercentage = 0;\n            mMediaPlayer.setDataSource(getContext().getApplicationContext(), mUri, mHeaders);\n            mMediaPlayer.setSurface(mSurface);\n            mMediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);\n            mMediaPlayer.setScreenOnWhilePlaying(true);\n            mMediaPlayer.prepareAsync();\n\n            // we don't set the target state here either, but preserve the\n            // target state that was there before.\n            mCurrentState = STATE_PREPARING;\n            attachMediaController();\n        } catch (IOException ex) {\n            Log.w(TAG, \"Unable to open content: \" + mUri, ex);\n            mCurrentState = STATE_ERROR;\n            mTargetState = STATE_ERROR;\n            mErrorListener.onError(mMediaPlayer, MediaPlayer.MEDIA_ERROR_UNKNOWN, 0);\n            return;\n        } catch (IllegalArgumentException ex) {\n            Log.w(TAG, \"Unable to open content: \" + mUri, ex);\n            mCurrentState = STATE_ERROR;\n            mTargetState = STATE_ERROR;\n            mErrorListener.onError(mMediaPlayer, MediaPlayer.MEDIA_ERROR_UNKNOWN, 0);\n            return;\n        }\n    }\n\n    public void setMediaController(MediaController controller) {\n        if (mMediaController != null) {\n            mMediaController.hide();\n        }\n        mMediaController = controller;\n        attachMediaController();\n    }\n\n    private void attachMediaController() {\n        if (mMediaPlayer != null && mMediaController != null) {\n            mMediaController.setMediaPlayer(this);\n            View anchorView = this.getParent() instanceof View ?\n                    (View)this.getParent() : this;\n            mMediaController.setAnchorView(anchorView);\n            mMediaController.setEnabled(isInPlaybackState());\n        }\n    }\n\n    MediaPlayer.OnVideoSizeChangedListener mSizeChangedListener =\n            new MediaPlayer.OnVideoSizeChangedListener() {\n                public void onVideoSizeChanged(MediaPlayer mp, int width, int height) {\n                    mVideoWidth = mp.getVideoWidth();\n                    mVideoHeight = mp.getVideoHeight();\n                    if (mVideoWidth != 0 && mVideoHeight != 0) {\n                        getSurfaceTexture().setDefaultBufferSize(mVideoWidth, mVideoHeight);\n                        requestLayout();\n                    }\n                }\n            };\n\n    MediaPlayer.OnPreparedListener mPreparedListener = new MediaPlayer.OnPreparedListener() {\n        public void onPrepared(MediaPlayer mp) {\n            mCurrentState = STATE_PREPARED;\n\n            mCanPause = mCanSeekBack = mCanSeekForward = true;\n\n            if (mOnPreparedListener != null) {\n                mOnPreparedListener.onPrepared(mMediaPlayer);\n            }\n            if (mMediaController != null) {\n                mMediaController.setEnabled(true);\n            }\n            mVideoWidth = mp.getVideoWidth();\n            mVideoHeight = mp.getVideoHeight();\n\n            int seekToPosition = mSeekWhenPrepared;  // mSeekWhenPrepared may be changed after seekTo() call\n            if (seekToPosition != 0) {\n                seekTo(seekToPosition);\n            }\n            if (mVideoWidth != 0 && mVideoHeight != 0) {\n                //Log.i(\"@@@@\", \"video size: \" + mVideoWidth +\"/\"+ mVideoHeight);\n                getSurfaceTexture().setDefaultBufferSize(mVideoWidth, mVideoHeight);\n                // We won't get a \"surface changed\" callback if the surface is already the right size, so\n                // start the video here instead of in the callback.\n                if (mTargetState == STATE_PLAYING) {\n                    start();\n                    if (mMediaController != null) {\n                        mMediaController.show();\n                    }\n                } else if (!isPlaying() &&\n                        (seekToPosition != 0 || getCurrentPosition() > 0)) {\n                    if (mMediaController != null) {\n                        // Show the media controls when we're paused into a video and make 'em stick.\n                        mMediaController.show(0);\n                    }\n                }\n            } else {\n                // We don't know the video size yet, but should start anyway.\n                // The video size might be reported to us later.\n                if (mTargetState == STATE_PLAYING) {\n                    start();\n                }\n            }\n        }\n    };\n\n    private MediaPlayer.OnCompletionListener mCompletionListener =\n            new MediaPlayer.OnCompletionListener() {\n                public void onCompletion(MediaPlayer mp) {\n                    mCurrentState = STATE_PLAYBACK_COMPLETED;\n                    mTargetState = STATE_PLAYBACK_COMPLETED;\n                    if (mMediaController != null) {\n                        mMediaController.hide();\n                    }\n                    if (mOnCompletionListener != null) {\n                        mOnCompletionListener.onCompletion(mMediaPlayer);\n                    }\n                }\n            };\n\n    private MediaPlayer.OnInfoListener mInfoListener =\n            new MediaPlayer.OnInfoListener() {\n                public  boolean onInfo(MediaPlayer mp, int arg1, int arg2) {\n                    if (mOnInfoListener != null) {\n                        mOnInfoListener.onInfo(mp, arg1, arg2);\n                    }\n                    return true;\n                }\n            };\n\n    private MediaPlayer.OnErrorListener mErrorListener =\n            new MediaPlayer.OnErrorListener() {\n                public boolean onError(MediaPlayer mp, int framework_err, int impl_err) {\n                    Log.d(TAG, \"Error: \" + framework_err + \",\" + impl_err);\n                    mCurrentState = STATE_ERROR;\n                    mTargetState = STATE_ERROR;\n                    if (mMediaController != null) {\n                        mMediaController.hide();\n                    }\n\n                    /* If an error handler has been supplied, use it and finish. */\n                    if (mOnErrorListener != null) {\n                        if (mOnErrorListener.onError(mMediaPlayer, framework_err, impl_err)) {\n                            return true;\n                        }\n                    }\n\n                    /* Otherwise, pop up an error dialog so the user knows that\n                     * something bad has happened. Only try and pop up the dialog\n                     * if we're attached to a window. When we're going away and no\n                     * longer have a window, don't bother showing the user an error.\n                     */\n                    if (getWindowToken() != null) {\n                        Resources r = getContext().getResources();\n                        int messageId;\n\n                        if (framework_err == MediaPlayer.MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK) {\n                            messageId = android.R.string.VideoView_error_text_invalid_progressive_playback;\n                        } else {\n                            messageId = android.R.string.VideoView_error_text_unknown;\n                        }\n\n                        new AlertDialog.Builder(getContext())\n                                .setMessage(messageId)\n                                .setPositiveButton(android.R.string.VideoView_error_button,\n                                        new DialogInterface.OnClickListener() {\n                                            public void onClick(DialogInterface dialog, int whichButton) {\n                                                /* If we get here, there is no onError listener, so\n                                                 * at least inform them that the video is over.\n                                                 */\n                                                if (mOnCompletionListener != null) {\n                                                    mOnCompletionListener.onCompletion(mMediaPlayer);\n                                                }\n                                            }\n                                        })\n                                .setCancelable(false)\n                                .show();\n                    }\n                    return true;\n                }\n            };\n\n    private MediaPlayer.OnBufferingUpdateListener mBufferingUpdateListener =\n            new MediaPlayer.OnBufferingUpdateListener() {\n                public void onBufferingUpdate(MediaPlayer mp, int percent) {\n                    mCurrentBufferPercentage = percent;\n                }\n            };\n\n    /**\n     * Register a callback to be invoked when the media file\n     * is loaded and ready to go.\n     *\n     * @param l The callback that will be run\n     */\n    public void setOnPreparedListener(MediaPlayer.OnPreparedListener l)\n    {\n        mOnPreparedListener = l;\n    }\n\n    /**\n     * Register a callback to be invoked when the end of a media file\n     * has been reached during playback.\n     *\n     * @param l The callback that will be run\n     */\n    public void setOnCompletionListener(OnCompletionListener l)\n    {\n        mOnCompletionListener = l;\n    }\n\n    /**\n     * Register a callback to be invoked when an error occurs\n     * during playback or setup.  If no listener is specified,\n     * or if the listener returned false, TextureVideoView will inform\n     * the user of any errors.\n     *\n     * @param l The callback that will be run\n     */\n    public void setOnErrorListener(OnErrorListener l)\n    {\n        mOnErrorListener = l;\n    }\n\n    /**\n     * Register a callback to be invoked when an informational event\n     * occurs during playback or setup.\n     *\n     * @param l The callback that will be run\n     */\n    public void setOnInfoListener(OnInfoListener l) {\n        mOnInfoListener = l;\n    }\n\n    TextureView.SurfaceTextureListener mSurfaceTextureListener = new SurfaceTextureListener()\n    {\n        @Override\n        public void onSurfaceTextureSizeChanged(final SurfaceTexture surface, final int width, final int height) {\n            boolean isValidState =  (mTargetState == STATE_PLAYING);\n            boolean hasValidSize = (width > 0 && height > 0);\n            if (mMediaPlayer != null && isValidState && hasValidSize) {\n                if (mSeekWhenPrepared != 0) {\n                    seekTo(mSeekWhenPrepared);\n                }\n                start();\n            }\n        }\n\n        @Override\n        public void onSurfaceTextureAvailable(final SurfaceTexture surface, final int width, final int height) {\n            mSurface = new Surface(surface);\n            openVideo();\n        }\n\n        @Override\n        public boolean onSurfaceTextureDestroyed(final SurfaceTexture surface) {\n            // after we return from this we can't use the surface any more\n            if (mSurface != null) {\n                mSurface.release();\n                mSurface = null;\n            }\n            if (mMediaController != null) mMediaController.hide();\n            release(true);\n            return true;\n        }\n        @Override\n        public void onSurfaceTextureUpdated(final SurfaceTexture surface) {\n            // do nothing\n        }\n    };\n\n    /*\n     * release the media player in any state\n     */\n    private void release(boolean cleartargetstate) {\n        if (mMediaPlayer != null) {\n            mMediaPlayer.reset();\n            mMediaPlayer.release();\n            mMediaPlayer = null;\n            mCurrentState = STATE_IDLE;\n            if (cleartargetstate) {\n                mTargetState  = STATE_IDLE;\n            }\n            if (mShouldRequestAudioFocus) {\n                AudioManager am = (AudioManager) getContext().getApplicationContext().getSystemService(Context.AUDIO_SERVICE);\n                am.abandonAudioFocus(null);\n            }\n        }\n    }\n\n    @Override\n    public boolean onTouchEvent(MotionEvent ev) {\n        if (isInPlaybackState() && mMediaController != null) {\n            toggleMediaControlsVisiblity();\n        }\n        return false;\n    }\n\n    @Override\n    public boolean onTrackballEvent(MotionEvent ev) {\n        if (isInPlaybackState() && mMediaController != null) {\n            toggleMediaControlsVisiblity();\n        }\n        return false;\n    }\n\n    @Override\n    public boolean onKeyDown(int keyCode, KeyEvent event)\n    {\n        boolean isKeyCodeSupported = keyCode != KeyEvent.KEYCODE_BACK &&\n                keyCode != KeyEvent.KEYCODE_VOLUME_UP &&\n                keyCode != KeyEvent.KEYCODE_VOLUME_DOWN &&\n                keyCode != KeyEvent.KEYCODE_VOLUME_MUTE &&\n                keyCode != KeyEvent.KEYCODE_MENU &&\n                keyCode != KeyEvent.KEYCODE_CALL &&\n                keyCode != KeyEvent.KEYCODE_ENDCALL;\n        if (isInPlaybackState() && isKeyCodeSupported && mMediaController != null) {\n            if (keyCode == KeyEvent.KEYCODE_HEADSETHOOK ||\n                    keyCode == KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE) {\n                if (mMediaPlayer.isPlaying()) {\n                    pause();\n                    mMediaController.show();\n                } else {\n                    start();\n                    mMediaController.hide();\n                }\n                return true;\n            } else if (keyCode == KeyEvent.KEYCODE_MEDIA_PLAY) {\n                if (!mMediaPlayer.isPlaying()) {\n                    start();\n                    mMediaController.hide();\n                }\n                return true;\n            } else if (keyCode == KeyEvent.KEYCODE_MEDIA_STOP\n                    || keyCode == KeyEvent.KEYCODE_MEDIA_PAUSE) {\n                if (mMediaPlayer.isPlaying()) {\n                    pause();\n                    mMediaController.show();\n                }\n                return true;\n            } else {\n                toggleMediaControlsVisiblity();\n            }\n        }\n\n        return super.onKeyDown(keyCode, event);\n    }\n\n    private void toggleMediaControlsVisiblity() {\n        if (mMediaController.isShowing()) {\n            mMediaController.hide();\n        } else {\n            mMediaController.show();\n        }\n    }\n\n    @Override\n    public void start() {\n        if (isInPlaybackState()) {\n            mMediaPlayer.start();\n            mCurrentState = STATE_PLAYING;\n        }\n        mTargetState = STATE_PLAYING;\n    }\n\n    @Override\n    public void pause() {\n        if (isInPlaybackState()) {\n            if (mMediaPlayer.isPlaying()) {\n                mMediaPlayer.pause();\n                mCurrentState = STATE_PAUSED;\n            }\n        }\n        mTargetState = STATE_PAUSED;\n    }\n\n    public void suspend() {\n        release(false);\n    }\n\n    public void resume() {\n        openVideo();\n    }\n\n    @Override\n    public int getDuration() {\n        if (isInPlaybackState()) {\n            return mMediaPlayer.getDuration();\n        }\n\n        return -1;\n    }\n\n    @Override\n    public int getCurrentPosition() {\n        if (isInPlaybackState()) {\n            return mMediaPlayer.getCurrentPosition();\n        }\n        return 0;\n    }\n\n    @Override\n    public void seekTo(int msec) {\n        if (isInPlaybackState()) {\n            mMediaPlayer.seekTo(msec);\n            mSeekWhenPrepared = 0;\n        } else {\n            mSeekWhenPrepared = msec;\n        }\n    }\n\n    @Override\n    public boolean isPlaying() {\n        return isInPlaybackState() && mMediaPlayer.isPlaying();\n    }\n\n    @Override\n    public int getBufferPercentage() {\n        if (mMediaPlayer != null) {\n            return mCurrentBufferPercentage;\n        }\n        return 0;\n    }\n\n    private boolean isInPlaybackState() {\n        return (mMediaPlayer != null &&\n                mCurrentState != STATE_ERROR &&\n                mCurrentState != STATE_IDLE &&\n                mCurrentState != STATE_PREPARING);\n    }\n\n    @Override\n    public boolean canPause() {\n        return mCanPause;\n    }\n\n    @Override\n    public boolean canSeekBackward() {\n        return mCanSeekBack;\n    }\n\n    @Override\n    public boolean canSeekForward() {\n        return mCanSeekForward;\n    }\n\n    public int getAudioSessionId() {\n        if (mAudioSession == 0) {\n            MediaPlayer foo = new MediaPlayer();\n            mAudioSession = foo.getAudioSessionId();\n            foo.release();\n        }\n        return mAudioSession;\n    }\n\n    /**\n     * Sets the request audio focus flag. If enabled, {@link TextureVideoView} will request\n     * audio focus when opening a video by calling {@link AudioManager}. This flag\n     * should be set before calling {@link TextureVideoView#setVideoPath(String)} or\n     * {@link TextureVideoView#setVideoURI(Uri)}. By default, {@link TextureVideoView} will\n     * request audio focus.\n     *\n     * @param shouldRequestAudioFocus  If {@code true}, {@link TextureVideoView} will request\n     * audio focus before opening a video, else audio focus is not requested\n     */\n    public void setShouldRequestAudioFocus(boolean shouldRequestAudioFocus) {\n        mShouldRequestAudioFocus = shouldRequestAudioFocus;\n    }\n\n    /**\n     * Returns the current state of the audio focus request flag.\n     *\n     * @return {@code true}, if {@link TextureVideoView} will request\n     * audio focus before opening a video, else {@code false}\n     */\n    public boolean shouldRequestAudioFocus() {\n        return mShouldRequestAudioFocus;\n    }\n\n}\n```\n\n使用时调用setVideoPath传入视频的地址即可，其他方法也和VideoView大体一致。\n\n\n\n","source":"_posts/自定义控件-TextureVideoView的使用.md","raw":"---\ntitle: TextureVideoView的使用\ntags:\n  - 自定义控件\n  - TextVideoView\ncategories:\n  - 自定义控件\ndate: 2018-3-20 11:30:22\n---\n\n平时在项目中需要用到播放视频时，使用的最多的就是VideoView或者是其他第三方的播放器了。嗯，之前我也一直是这么用的，但是最近在项目中遇到了一个非常诡异的bug，我们项目使用到了腾讯云直播，并且在全屏直播的时候，屏幕上面需要通过一个小窗口播放一个视频，视频嵌套在scrollview中，可以通过向上滑动，划出scrollView所包裹的区域。\n1. 遇到的第一个问题，当直播控件开启的情况下，VideoView看不到任何效果，处于完全透明的状态。后来调查才知道，SurfaceView和普通的View不一样，它拥有一个独立于Activity之外的Window，当SurfaceView被设置为不可见的时候，其所对应的Window就会销毁，再想去显示这个SurfaceView的时候就不得不重新创建；另外，SurfaceView创建的先后顺序也是不受FrameLayout的规则影响的，一般来说，布局xml文件中FrameLayout布局靠后的view会覆盖考前的view，但SurfaceView是根据其对应的Surface创建的先后顺序决定的。\n<!-- more -->\n于是采用的网上的方法，使用setZOrderOnTop(true)或者setZOrderMediaOverlay(true)来控制SurfaceView的显示层次。完美解决了重叠无法显示视频的问题。\n\n2. 但是却还存在第二个问题，我滑动ScrollView时，将VideoView划出了ScrollView，可是却依然可见，其他控件因为划出了父控件的范围都消失了，但VideoView依然顽强地显示着。原来ScrollView因为有自己的Window，是不会受父控件约束的。看来，只能放弃使用VideoView，去寻找其他的方式了。\n\n3. 通过查找，发现除了能用SurfaceView来播放视频之外，还有一个控件TextureView也可以用来播放视频。只不过SurfaceView使用了双离屏缓冲，性能会更好，但是，我们只能试一试TextureView这个救命稻草了。由于TextureView直接使用起来比较麻烦，需要封装一下\n\n```java\npublic class TextureVideoView extends TextureView\n        implements MediaPlayerControl {\n    private static final String TAG = \"TextureVideoView\";\n\n    // all possible internal states\n    private static final int STATE_ERROR = -1;\n    private static final int STATE_IDLE = 0;\n    private static final int STATE_PREPARING = 1;\n    private static final int STATE_PREPARED = 2;\n    private static final int STATE_PLAYING = 3;\n    private static final int STATE_PAUSED = 4;\n    private static final int STATE_PLAYBACK_COMPLETED = 5;\n\n    // settable by the client\n    private Uri mUri;\n    private Map<String, String> mHeaders;\n\n    // mCurrentState is a TextureVideoView object's current state.\n    // mTargetState is the state that a method caller intends to reach.\n    // For instance, regardless the TextureVideoView object's current state,\n    // calling pause() intends to bring the object to a target state\n    // of STATE_PAUSED.\n    private int mCurrentState = STATE_IDLE;\n    private int mTargetState = STATE_IDLE;\n\n    // All the stuff we need for playing and showing a video\n    private Surface mSurface = null;\n    private MediaPlayer mMediaPlayer = null;\n    private int mAudioSession;\n    private int mVideoWidth;\n    private int mVideoHeight;\n    private MediaController mMediaController;\n    private OnCompletionListener mOnCompletionListener;\n    private MediaPlayer.OnPreparedListener mOnPreparedListener;\n    private int mCurrentBufferPercentage;\n    private OnErrorListener mOnErrorListener;\n    private OnInfoListener mOnInfoListener;\n    private int mSeekWhenPrepared;  // recording the seek position while preparing\n    private boolean mCanPause;\n    private boolean mCanSeekBack;\n    private boolean mCanSeekForward;\n    private boolean mShouldRequestAudioFocus = true;\n\n    public TextureVideoView(Context context) {\n        this(context, null);\n    }\n\n    public TextureVideoView(Context context, AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public TextureVideoView(Context context, AttributeSet attrs, int defStyle) {\n        super(context, attrs, defStyle);\n\n        mVideoWidth = 0;\n        mVideoHeight = 0;\n\n        setSurfaceTextureListener(mSurfaceTextureListener);\n\n        setFocusable(true);\n        setFocusableInTouchMode(true);\n        requestFocus();\n\n        mCurrentState = STATE_IDLE;\n        mTargetState = STATE_IDLE;\n    }\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        //Log.i(\"@@@@\", \"onMeasure(\" + MeasureSpec.toString(widthMeasureSpec) + \", \"\n        //        + MeasureSpec.toString(heightMeasureSpec) + \")\");\n\n        int width = getDefaultSize(mVideoWidth, widthMeasureSpec);\n        int height = getDefaultSize(mVideoHeight, heightMeasureSpec);\n        if (mVideoWidth > 0 && mVideoHeight > 0) {\n\n            int widthSpecMode = MeasureSpec.getMode(widthMeasureSpec);\n            int widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);\n            int heightSpecMode = MeasureSpec.getMode(heightMeasureSpec);\n            int heightSpecSize = MeasureSpec.getSize(heightMeasureSpec);\n\n            if (widthSpecMode == MeasureSpec.EXACTLY && heightSpecMode == MeasureSpec.EXACTLY) {\n                // the size is fixed\n                width = widthSpecSize;\n                height = heightSpecSize;\n\n                // for compatibility, we adjust size based on aspect ratio\n                if ( mVideoWidth * height  < width * mVideoHeight ) {\n                    //Log.i(\"@@@\", \"image too wide, correcting\");\n                    width = height * mVideoWidth / mVideoHeight;\n                } else if ( mVideoWidth * height  > width * mVideoHeight ) {\n                    //Log.i(\"@@@\", \"image too tall, correcting\");\n                    height = width * mVideoHeight / mVideoWidth;\n                }\n            } else if (widthSpecMode == MeasureSpec.EXACTLY) {\n                // only the width is fixed, adjust the height to match aspect ratio if possible\n                width = widthSpecSize;\n                height = width * mVideoHeight / mVideoWidth;\n                if (heightSpecMode == MeasureSpec.AT_MOST && height > heightSpecSize) {\n                    // couldn't match aspect ratio within the constraints\n                    height = heightSpecSize;\n                }\n            } else if (heightSpecMode == MeasureSpec.EXACTLY) {\n                // only the height is fixed, adjust the width to match aspect ratio if possible\n                height = heightSpecSize;\n                width = height * mVideoWidth / mVideoHeight;\n                if (widthSpecMode == MeasureSpec.AT_MOST && width > widthSpecSize) {\n                    // couldn't match aspect ratio within the constraints\n                    width = widthSpecSize;\n                }\n            } else {\n                // neither the width nor the height are fixed, try to use actual video size\n                width = mVideoWidth;\n                height = mVideoHeight;\n                if (heightSpecMode == MeasureSpec.AT_MOST && height > heightSpecSize) {\n                    // too tall, decrease both width and height\n                    height = heightSpecSize;\n                    width = height * mVideoWidth / mVideoHeight;\n                }\n                if (widthSpecMode == MeasureSpec.AT_MOST && width > widthSpecSize) {\n                    // too wide, decrease both width and height\n                    width = widthSpecSize;\n                    height = width * mVideoHeight / mVideoWidth;\n                }\n            }\n        } else {\n            // no size yet, just adopt the given spec sizes\n        }\n        setMeasuredDimension(width, height);\n    }\n\n    @Override\n    public void onInitializeAccessibilityEvent(AccessibilityEvent event) {\n        super.onInitializeAccessibilityEvent(event);\n        event.setClassName(TextureVideoView.class.getName());\n    }\n\n    @Override\n    public void onInitializeAccessibilityNodeInfo(AccessibilityNodeInfo info) {\n        super.onInitializeAccessibilityNodeInfo(info);\n        info.setClassName(TextureVideoView.class.getName());\n    }\n\n    public int resolveAdjustedSize(int desiredSize, int measureSpec) {\n        return getDefaultSize(desiredSize, measureSpec);\n    }\n\n    /**\n     * Sets video path.\n     *\n     * @param path the path of the video.\n     */\n    public void setVideoPath(String path) {\n        setVideoURI(Uri.parse(path));\n    }\n\n    /**\n     * Sets video URI.\n     *\n     * @param uri the URI of the video.\n     */\n    public void setVideoURI(Uri uri) {\n        setVideoURI(uri, null);\n    }\n\n    /**\n     * Sets video URI using specific headers.\n     *\n     * @param uri     the URI of the video.\n     * @param headers the headers for the URI request.\n     *                Note that the cross domain redirection is allowed by default, but that can be\n     *                changed with key/value pairs through the headers parameter with\n     *                \"android-allow-cross-domain-redirect\" as the key and \"0\" or \"1\" as the value\n     *                to disallow or allow cross domain redirection.\n     */\n    public void setVideoURI(Uri uri, Map<String, String> headers) {\n        mUri = uri;\n        mHeaders = headers;\n        mSeekWhenPrepared = 0;\n        openVideo();\n        requestLayout();\n        invalidate();\n    }\n\n    public void stopPlayback() {\n        if (mMediaPlayer != null) {\n            mMediaPlayer.stop();\n            mMediaPlayer.release();\n            mMediaPlayer = null;\n            mCurrentState = STATE_IDLE;\n            mTargetState  = STATE_IDLE;\n            if (mShouldRequestAudioFocus) {\n                AudioManager am = (AudioManager) getContext().getApplicationContext().getSystemService(Context.AUDIO_SERVICE);\n                am.abandonAudioFocus(null);\n            }\n        }\n        clearSurface();\n    }\n\n    /**\n     * Clears the surface texture by attaching a GL context and clearing it.\n     * Code taken from <a href=\"http://stackoverflow.com/a/31582209\">Hugo Gresse's answer on stackoverflow.com</a>.\n     */\n    private void clearSurface() {\n        if (mSurface == null || Build.VERSION.SDK_INT < Build.VERSION_CODES.JELLY_BEAN) {\n            return;\n        }\n\n        EGL10 egl = (EGL10) EGLContext.getEGL();\n        EGLDisplay display = egl.eglGetDisplay(EGL10.EGL_DEFAULT_DISPLAY);\n        egl.eglInitialize(display, null);\n\n        int[] attribList = {\n                EGL10.EGL_RED_SIZE, 8,\n                EGL10.EGL_GREEN_SIZE, 8,\n                EGL10.EGL_BLUE_SIZE, 8,\n                EGL10.EGL_ALPHA_SIZE, 8,\n                EGL10.EGL_RENDERABLE_TYPE, EGL10.EGL_WINDOW_BIT,\n                EGL10.EGL_NONE, 0,      // placeholder for recordable [@-3]\n                EGL10.EGL_NONE\n        };\n        EGLConfig[] configs = new EGLConfig[1];\n        int[] numConfigs = new int[1];\n        egl.eglChooseConfig(display, attribList, configs, configs.length, numConfigs);\n        EGLConfig config = configs[0];\n        EGLContext context = egl.eglCreateContext(display, config, EGL10.EGL_NO_CONTEXT, new int[]{\n                12440, 2, EGL10.EGL_NONE\n        });\n        EGLSurface eglSurface = egl.eglCreateWindowSurface(display, config, mSurface, new int[]{\n                EGL10.EGL_NONE\n        });\n\n        egl.eglMakeCurrent(display, eglSurface, eglSurface, context);\n        GLES20.glClearColor(0, 0, 0, 1);\n        GLES20.glClear(GLES20.GL_COLOR_BUFFER_BIT);\n        egl.eglSwapBuffers(display, eglSurface);\n        egl.eglDestroySurface(display, eglSurface);\n        egl.eglMakeCurrent(display, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_CONTEXT);\n        egl.eglDestroyContext(display, context);\n        egl.eglTerminate(display);\n    }\n\n    private void openVideo() {\n        if (mUri == null || mSurface == null) {\n            // not ready for playback just yet, will try again later\n            return;\n        }\n        // we shouldn't clear the target state, because somebody might have\n        // called start() previously\n        release(false);\n\n        if (mShouldRequestAudioFocus) {\n            AudioManager am = (AudioManager) getContext().getApplicationContext().getSystemService(Context.AUDIO_SERVICE);\n            am.requestAudioFocus(null, AudioManager.STREAM_MUSIC, AudioManager.AUDIOFOCUS_GAIN);\n        }\n\n        try {\n            mMediaPlayer = new MediaPlayer();\n\n            if (mAudioSession != 0) {\n                mMediaPlayer.setAudioSessionId(mAudioSession);\n            } else {\n                mAudioSession = mMediaPlayer.getAudioSessionId();\n            }\n            mMediaPlayer.setOnPreparedListener(mPreparedListener);\n            mMediaPlayer.setOnVideoSizeChangedListener(mSizeChangedListener);\n            mMediaPlayer.setOnCompletionListener(mCompletionListener);\n            mMediaPlayer.setOnErrorListener(mErrorListener);\n            mMediaPlayer.setOnInfoListener(mInfoListener);\n            mMediaPlayer.setOnBufferingUpdateListener(mBufferingUpdateListener);\n            mCurrentBufferPercentage = 0;\n            mMediaPlayer.setDataSource(getContext().getApplicationContext(), mUri, mHeaders);\n            mMediaPlayer.setSurface(mSurface);\n            mMediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);\n            mMediaPlayer.setScreenOnWhilePlaying(true);\n            mMediaPlayer.prepareAsync();\n\n            // we don't set the target state here either, but preserve the\n            // target state that was there before.\n            mCurrentState = STATE_PREPARING;\n            attachMediaController();\n        } catch (IOException ex) {\n            Log.w(TAG, \"Unable to open content: \" + mUri, ex);\n            mCurrentState = STATE_ERROR;\n            mTargetState = STATE_ERROR;\n            mErrorListener.onError(mMediaPlayer, MediaPlayer.MEDIA_ERROR_UNKNOWN, 0);\n            return;\n        } catch (IllegalArgumentException ex) {\n            Log.w(TAG, \"Unable to open content: \" + mUri, ex);\n            mCurrentState = STATE_ERROR;\n            mTargetState = STATE_ERROR;\n            mErrorListener.onError(mMediaPlayer, MediaPlayer.MEDIA_ERROR_UNKNOWN, 0);\n            return;\n        }\n    }\n\n    public void setMediaController(MediaController controller) {\n        if (mMediaController != null) {\n            mMediaController.hide();\n        }\n        mMediaController = controller;\n        attachMediaController();\n    }\n\n    private void attachMediaController() {\n        if (mMediaPlayer != null && mMediaController != null) {\n            mMediaController.setMediaPlayer(this);\n            View anchorView = this.getParent() instanceof View ?\n                    (View)this.getParent() : this;\n            mMediaController.setAnchorView(anchorView);\n            mMediaController.setEnabled(isInPlaybackState());\n        }\n    }\n\n    MediaPlayer.OnVideoSizeChangedListener mSizeChangedListener =\n            new MediaPlayer.OnVideoSizeChangedListener() {\n                public void onVideoSizeChanged(MediaPlayer mp, int width, int height) {\n                    mVideoWidth = mp.getVideoWidth();\n                    mVideoHeight = mp.getVideoHeight();\n                    if (mVideoWidth != 0 && mVideoHeight != 0) {\n                        getSurfaceTexture().setDefaultBufferSize(mVideoWidth, mVideoHeight);\n                        requestLayout();\n                    }\n                }\n            };\n\n    MediaPlayer.OnPreparedListener mPreparedListener = new MediaPlayer.OnPreparedListener() {\n        public void onPrepared(MediaPlayer mp) {\n            mCurrentState = STATE_PREPARED;\n\n            mCanPause = mCanSeekBack = mCanSeekForward = true;\n\n            if (mOnPreparedListener != null) {\n                mOnPreparedListener.onPrepared(mMediaPlayer);\n            }\n            if (mMediaController != null) {\n                mMediaController.setEnabled(true);\n            }\n            mVideoWidth = mp.getVideoWidth();\n            mVideoHeight = mp.getVideoHeight();\n\n            int seekToPosition = mSeekWhenPrepared;  // mSeekWhenPrepared may be changed after seekTo() call\n            if (seekToPosition != 0) {\n                seekTo(seekToPosition);\n            }\n            if (mVideoWidth != 0 && mVideoHeight != 0) {\n                //Log.i(\"@@@@\", \"video size: \" + mVideoWidth +\"/\"+ mVideoHeight);\n                getSurfaceTexture().setDefaultBufferSize(mVideoWidth, mVideoHeight);\n                // We won't get a \"surface changed\" callback if the surface is already the right size, so\n                // start the video here instead of in the callback.\n                if (mTargetState == STATE_PLAYING) {\n                    start();\n                    if (mMediaController != null) {\n                        mMediaController.show();\n                    }\n                } else if (!isPlaying() &&\n                        (seekToPosition != 0 || getCurrentPosition() > 0)) {\n                    if (mMediaController != null) {\n                        // Show the media controls when we're paused into a video and make 'em stick.\n                        mMediaController.show(0);\n                    }\n                }\n            } else {\n                // We don't know the video size yet, but should start anyway.\n                // The video size might be reported to us later.\n                if (mTargetState == STATE_PLAYING) {\n                    start();\n                }\n            }\n        }\n    };\n\n    private MediaPlayer.OnCompletionListener mCompletionListener =\n            new MediaPlayer.OnCompletionListener() {\n                public void onCompletion(MediaPlayer mp) {\n                    mCurrentState = STATE_PLAYBACK_COMPLETED;\n                    mTargetState = STATE_PLAYBACK_COMPLETED;\n                    if (mMediaController != null) {\n                        mMediaController.hide();\n                    }\n                    if (mOnCompletionListener != null) {\n                        mOnCompletionListener.onCompletion(mMediaPlayer);\n                    }\n                }\n            };\n\n    private MediaPlayer.OnInfoListener mInfoListener =\n            new MediaPlayer.OnInfoListener() {\n                public  boolean onInfo(MediaPlayer mp, int arg1, int arg2) {\n                    if (mOnInfoListener != null) {\n                        mOnInfoListener.onInfo(mp, arg1, arg2);\n                    }\n                    return true;\n                }\n            };\n\n    private MediaPlayer.OnErrorListener mErrorListener =\n            new MediaPlayer.OnErrorListener() {\n                public boolean onError(MediaPlayer mp, int framework_err, int impl_err) {\n                    Log.d(TAG, \"Error: \" + framework_err + \",\" + impl_err);\n                    mCurrentState = STATE_ERROR;\n                    mTargetState = STATE_ERROR;\n                    if (mMediaController != null) {\n                        mMediaController.hide();\n                    }\n\n                    /* If an error handler has been supplied, use it and finish. */\n                    if (mOnErrorListener != null) {\n                        if (mOnErrorListener.onError(mMediaPlayer, framework_err, impl_err)) {\n                            return true;\n                        }\n                    }\n\n                    /* Otherwise, pop up an error dialog so the user knows that\n                     * something bad has happened. Only try and pop up the dialog\n                     * if we're attached to a window. When we're going away and no\n                     * longer have a window, don't bother showing the user an error.\n                     */\n                    if (getWindowToken() != null) {\n                        Resources r = getContext().getResources();\n                        int messageId;\n\n                        if (framework_err == MediaPlayer.MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK) {\n                            messageId = android.R.string.VideoView_error_text_invalid_progressive_playback;\n                        } else {\n                            messageId = android.R.string.VideoView_error_text_unknown;\n                        }\n\n                        new AlertDialog.Builder(getContext())\n                                .setMessage(messageId)\n                                .setPositiveButton(android.R.string.VideoView_error_button,\n                                        new DialogInterface.OnClickListener() {\n                                            public void onClick(DialogInterface dialog, int whichButton) {\n                                                /* If we get here, there is no onError listener, so\n                                                 * at least inform them that the video is over.\n                                                 */\n                                                if (mOnCompletionListener != null) {\n                                                    mOnCompletionListener.onCompletion(mMediaPlayer);\n                                                }\n                                            }\n                                        })\n                                .setCancelable(false)\n                                .show();\n                    }\n                    return true;\n                }\n            };\n\n    private MediaPlayer.OnBufferingUpdateListener mBufferingUpdateListener =\n            new MediaPlayer.OnBufferingUpdateListener() {\n                public void onBufferingUpdate(MediaPlayer mp, int percent) {\n                    mCurrentBufferPercentage = percent;\n                }\n            };\n\n    /**\n     * Register a callback to be invoked when the media file\n     * is loaded and ready to go.\n     *\n     * @param l The callback that will be run\n     */\n    public void setOnPreparedListener(MediaPlayer.OnPreparedListener l)\n    {\n        mOnPreparedListener = l;\n    }\n\n    /**\n     * Register a callback to be invoked when the end of a media file\n     * has been reached during playback.\n     *\n     * @param l The callback that will be run\n     */\n    public void setOnCompletionListener(OnCompletionListener l)\n    {\n        mOnCompletionListener = l;\n    }\n\n    /**\n     * Register a callback to be invoked when an error occurs\n     * during playback or setup.  If no listener is specified,\n     * or if the listener returned false, TextureVideoView will inform\n     * the user of any errors.\n     *\n     * @param l The callback that will be run\n     */\n    public void setOnErrorListener(OnErrorListener l)\n    {\n        mOnErrorListener = l;\n    }\n\n    /**\n     * Register a callback to be invoked when an informational event\n     * occurs during playback or setup.\n     *\n     * @param l The callback that will be run\n     */\n    public void setOnInfoListener(OnInfoListener l) {\n        mOnInfoListener = l;\n    }\n\n    TextureView.SurfaceTextureListener mSurfaceTextureListener = new SurfaceTextureListener()\n    {\n        @Override\n        public void onSurfaceTextureSizeChanged(final SurfaceTexture surface, final int width, final int height) {\n            boolean isValidState =  (mTargetState == STATE_PLAYING);\n            boolean hasValidSize = (width > 0 && height > 0);\n            if (mMediaPlayer != null && isValidState && hasValidSize) {\n                if (mSeekWhenPrepared != 0) {\n                    seekTo(mSeekWhenPrepared);\n                }\n                start();\n            }\n        }\n\n        @Override\n        public void onSurfaceTextureAvailable(final SurfaceTexture surface, final int width, final int height) {\n            mSurface = new Surface(surface);\n            openVideo();\n        }\n\n        @Override\n        public boolean onSurfaceTextureDestroyed(final SurfaceTexture surface) {\n            // after we return from this we can't use the surface any more\n            if (mSurface != null) {\n                mSurface.release();\n                mSurface = null;\n            }\n            if (mMediaController != null) mMediaController.hide();\n            release(true);\n            return true;\n        }\n        @Override\n        public void onSurfaceTextureUpdated(final SurfaceTexture surface) {\n            // do nothing\n        }\n    };\n\n    /*\n     * release the media player in any state\n     */\n    private void release(boolean cleartargetstate) {\n        if (mMediaPlayer != null) {\n            mMediaPlayer.reset();\n            mMediaPlayer.release();\n            mMediaPlayer = null;\n            mCurrentState = STATE_IDLE;\n            if (cleartargetstate) {\n                mTargetState  = STATE_IDLE;\n            }\n            if (mShouldRequestAudioFocus) {\n                AudioManager am = (AudioManager) getContext().getApplicationContext().getSystemService(Context.AUDIO_SERVICE);\n                am.abandonAudioFocus(null);\n            }\n        }\n    }\n\n    @Override\n    public boolean onTouchEvent(MotionEvent ev) {\n        if (isInPlaybackState() && mMediaController != null) {\n            toggleMediaControlsVisiblity();\n        }\n        return false;\n    }\n\n    @Override\n    public boolean onTrackballEvent(MotionEvent ev) {\n        if (isInPlaybackState() && mMediaController != null) {\n            toggleMediaControlsVisiblity();\n        }\n        return false;\n    }\n\n    @Override\n    public boolean onKeyDown(int keyCode, KeyEvent event)\n    {\n        boolean isKeyCodeSupported = keyCode != KeyEvent.KEYCODE_BACK &&\n                keyCode != KeyEvent.KEYCODE_VOLUME_UP &&\n                keyCode != KeyEvent.KEYCODE_VOLUME_DOWN &&\n                keyCode != KeyEvent.KEYCODE_VOLUME_MUTE &&\n                keyCode != KeyEvent.KEYCODE_MENU &&\n                keyCode != KeyEvent.KEYCODE_CALL &&\n                keyCode != KeyEvent.KEYCODE_ENDCALL;\n        if (isInPlaybackState() && isKeyCodeSupported && mMediaController != null) {\n            if (keyCode == KeyEvent.KEYCODE_HEADSETHOOK ||\n                    keyCode == KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE) {\n                if (mMediaPlayer.isPlaying()) {\n                    pause();\n                    mMediaController.show();\n                } else {\n                    start();\n                    mMediaController.hide();\n                }\n                return true;\n            } else if (keyCode == KeyEvent.KEYCODE_MEDIA_PLAY) {\n                if (!mMediaPlayer.isPlaying()) {\n                    start();\n                    mMediaController.hide();\n                }\n                return true;\n            } else if (keyCode == KeyEvent.KEYCODE_MEDIA_STOP\n                    || keyCode == KeyEvent.KEYCODE_MEDIA_PAUSE) {\n                if (mMediaPlayer.isPlaying()) {\n                    pause();\n                    mMediaController.show();\n                }\n                return true;\n            } else {\n                toggleMediaControlsVisiblity();\n            }\n        }\n\n        return super.onKeyDown(keyCode, event);\n    }\n\n    private void toggleMediaControlsVisiblity() {\n        if (mMediaController.isShowing()) {\n            mMediaController.hide();\n        } else {\n            mMediaController.show();\n        }\n    }\n\n    @Override\n    public void start() {\n        if (isInPlaybackState()) {\n            mMediaPlayer.start();\n            mCurrentState = STATE_PLAYING;\n        }\n        mTargetState = STATE_PLAYING;\n    }\n\n    @Override\n    public void pause() {\n        if (isInPlaybackState()) {\n            if (mMediaPlayer.isPlaying()) {\n                mMediaPlayer.pause();\n                mCurrentState = STATE_PAUSED;\n            }\n        }\n        mTargetState = STATE_PAUSED;\n    }\n\n    public void suspend() {\n        release(false);\n    }\n\n    public void resume() {\n        openVideo();\n    }\n\n    @Override\n    public int getDuration() {\n        if (isInPlaybackState()) {\n            return mMediaPlayer.getDuration();\n        }\n\n        return -1;\n    }\n\n    @Override\n    public int getCurrentPosition() {\n        if (isInPlaybackState()) {\n            return mMediaPlayer.getCurrentPosition();\n        }\n        return 0;\n    }\n\n    @Override\n    public void seekTo(int msec) {\n        if (isInPlaybackState()) {\n            mMediaPlayer.seekTo(msec);\n            mSeekWhenPrepared = 0;\n        } else {\n            mSeekWhenPrepared = msec;\n        }\n    }\n\n    @Override\n    public boolean isPlaying() {\n        return isInPlaybackState() && mMediaPlayer.isPlaying();\n    }\n\n    @Override\n    public int getBufferPercentage() {\n        if (mMediaPlayer != null) {\n            return mCurrentBufferPercentage;\n        }\n        return 0;\n    }\n\n    private boolean isInPlaybackState() {\n        return (mMediaPlayer != null &&\n                mCurrentState != STATE_ERROR &&\n                mCurrentState != STATE_IDLE &&\n                mCurrentState != STATE_PREPARING);\n    }\n\n    @Override\n    public boolean canPause() {\n        return mCanPause;\n    }\n\n    @Override\n    public boolean canSeekBackward() {\n        return mCanSeekBack;\n    }\n\n    @Override\n    public boolean canSeekForward() {\n        return mCanSeekForward;\n    }\n\n    public int getAudioSessionId() {\n        if (mAudioSession == 0) {\n            MediaPlayer foo = new MediaPlayer();\n            mAudioSession = foo.getAudioSessionId();\n            foo.release();\n        }\n        return mAudioSession;\n    }\n\n    /**\n     * Sets the request audio focus flag. If enabled, {@link TextureVideoView} will request\n     * audio focus when opening a video by calling {@link AudioManager}. This flag\n     * should be set before calling {@link TextureVideoView#setVideoPath(String)} or\n     * {@link TextureVideoView#setVideoURI(Uri)}. By default, {@link TextureVideoView} will\n     * request audio focus.\n     *\n     * @param shouldRequestAudioFocus  If {@code true}, {@link TextureVideoView} will request\n     * audio focus before opening a video, else audio focus is not requested\n     */\n    public void setShouldRequestAudioFocus(boolean shouldRequestAudioFocus) {\n        mShouldRequestAudioFocus = shouldRequestAudioFocus;\n    }\n\n    /**\n     * Returns the current state of the audio focus request flag.\n     *\n     * @return {@code true}, if {@link TextureVideoView} will request\n     * audio focus before opening a video, else {@code false}\n     */\n    public boolean shouldRequestAudioFocus() {\n        return mShouldRequestAudioFocus;\n    }\n\n}\n```\n\n使用时调用setVideoPath传入视频的地址即可，其他方法也和VideoView大体一致。\n\n\n\n","slug":"自定义控件-TextureVideoView的使用","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv548001o58ug7ivk6e9f","content":"<p>平时在项目中需要用到播放视频时，使用的最多的就是VideoView或者是其他第三方的播放器了。嗯，之前我也一直是这么用的，但是最近在项目中遇到了一个非常诡异的bug，我们项目使用到了腾讯云直播，并且在全屏直播的时候，屏幕上面需要通过一个小窗口播放一个视频，视频嵌套在scrollview中，可以通过向上滑动，划出scrollView所包裹的区域。</p>\n<ol>\n<li>遇到的第一个问题，当直播控件开启的情况下，VideoView看不到任何效果，处于完全透明的状态。后来调查才知道，SurfaceView和普通的View不一样，它拥有一个独立于Activity之外的Window，当SurfaceView被设置为不可见的时候，其所对应的Window就会销毁，再想去显示这个SurfaceView的时候就不得不重新创建；另外，SurfaceView创建的先后顺序也是不受FrameLayout的规则影响的，一般来说，布局xml文件中FrameLayout布局靠后的view会覆盖考前的view，但SurfaceView是根据其对应的Surface创建的先后顺序决定的。</li>\n</ol>\n<a id=\"more\"></a>\n<p>于是采用的网上的方法，使用setZOrderOnTop(true)或者setZOrderMediaOverlay(true)来控制SurfaceView的显示层次。完美解决了重叠无法显示视频的问题。</p>\n<ol start=\"2\">\n<li>\n<p>但是却还存在第二个问题，我滑动ScrollView时，将VideoView划出了ScrollView，可是却依然可见，其他控件因为划出了父控件的范围都消失了，但VideoView依然顽强地显示着。原来ScrollView因为有自己的Window，是不会受父控件约束的。看来，只能放弃使用VideoView，去寻找其他的方式了。</p>\n</li>\n<li>\n<p>通过查找，发现除了能用SurfaceView来播放视频之外，还有一个控件TextureView也可以用来播放视频。只不过SurfaceView使用了双离屏缓冲，性能会更好，但是，我们只能试一试TextureView这个救命稻草了。由于TextureView直接使用起来比较麻烦，需要封装一下</p>\n</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TextureVideoView</span> <span class=\"keyword\">extends</span> <span class=\"title\">TextureView</span></span></span><br><span class=\"line\"><span class=\"class\">        <span class=\"keyword\">implements</span> <span class=\"title\">MediaPlayerControl</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String TAG = <span class=\"string\">\"TextureVideoView\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// all possible internal states</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> STATE_ERROR = -<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> STATE_IDLE = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> STATE_PREPARING = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> STATE_PREPARED = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> STATE_PLAYING = <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> STATE_PAUSED = <span class=\"number\">4</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> STATE_PLAYBACK_COMPLETED = <span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// settable by the client</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Uri mUri;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Map&lt;String, String&gt; mHeaders;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// mCurrentState is a TextureVideoView object's current state.</span></span><br><span class=\"line\">    <span class=\"comment\">// mTargetState is the state that a method caller intends to reach.</span></span><br><span class=\"line\">    <span class=\"comment\">// For instance, regardless the TextureVideoView object's current state,</span></span><br><span class=\"line\">    <span class=\"comment\">// calling pause() intends to bring the object to a target state</span></span><br><span class=\"line\">    <span class=\"comment\">// of STATE_PAUSED.</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mCurrentState = STATE_IDLE;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mTargetState = STATE_IDLE;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// All the stuff we need for playing and showing a video</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Surface mSurface = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> MediaPlayer mMediaPlayer = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mAudioSession;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mVideoWidth;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mVideoHeight;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> MediaController mMediaController;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> OnCompletionListener mOnCompletionListener;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> MediaPlayer.OnPreparedListener mOnPreparedListener;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mCurrentBufferPercentage;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> OnErrorListener mOnErrorListener;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> OnInfoListener mOnInfoListener;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mSeekWhenPrepared;  <span class=\"comment\">// recording the seek position while preparing</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> mCanPause;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> mCanSeekBack;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> mCanSeekForward;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> mShouldRequestAudioFocus = <span class=\"keyword\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TextureVideoView</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>(context, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TextureVideoView</span><span class=\"params\">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>(context, attrs, <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TextureVideoView</span><span class=\"params\">(Context context, AttributeSet attrs, <span class=\"keyword\">int</span> defStyle)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs, defStyle);</span><br><span class=\"line\"></span><br><span class=\"line\">        mVideoWidth = <span class=\"number\">0</span>;</span><br><span class=\"line\">        mVideoHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        setSurfaceTextureListener(mSurfaceTextureListener);</span><br><span class=\"line\"></span><br><span class=\"line\">        setFocusable(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        setFocusableInTouchMode(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        requestFocus();</span><br><span class=\"line\"></span><br><span class=\"line\">        mCurrentState = STATE_IDLE;</span><br><span class=\"line\">        mTargetState = STATE_IDLE;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onMeasure</span><span class=\"params\">(<span class=\"keyword\">int</span> widthMeasureSpec, <span class=\"keyword\">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//Log.i(\"@@@@\", \"onMeasure(\" + MeasureSpec.toString(widthMeasureSpec) + \", \"</span></span><br><span class=\"line\">        <span class=\"comment\">//        + MeasureSpec.toString(heightMeasureSpec) + \")\");</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> width = getDefaultSize(mVideoWidth, widthMeasureSpec);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> height = getDefaultSize(mVideoHeight, heightMeasureSpec);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mVideoWidth &gt; <span class=\"number\">0</span> &amp;&amp; mVideoHeight &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">int</span> widthSpecMode = MeasureSpec.getMode(widthMeasureSpec);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> heightSpecMode = MeasureSpec.getMode(heightMeasureSpec);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> heightSpecSize = MeasureSpec.getSize(heightMeasureSpec);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (widthSpecMode == MeasureSpec.EXACTLY &amp;&amp; heightSpecMode == MeasureSpec.EXACTLY) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// the size is fixed</span></span><br><span class=\"line\">                width = widthSpecSize;</span><br><span class=\"line\">                height = heightSpecSize;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// for compatibility, we adjust size based on aspect ratio</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( mVideoWidth * height  &lt; width * mVideoHeight ) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//Log.i(\"@@@\", \"image too wide, correcting\");</span></span><br><span class=\"line\">                    width = height * mVideoWidth / mVideoHeight;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ( mVideoWidth * height  &gt; width * mVideoHeight ) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//Log.i(\"@@@\", \"image too tall, correcting\");</span></span><br><span class=\"line\">                    height = width * mVideoHeight / mVideoWidth;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (widthSpecMode == MeasureSpec.EXACTLY) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// only the width is fixed, adjust the height to match aspect ratio if possible</span></span><br><span class=\"line\">                width = widthSpecSize;</span><br><span class=\"line\">                height = width * mVideoHeight / mVideoWidth;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (heightSpecMode == MeasureSpec.AT_MOST &amp;&amp; height &gt; heightSpecSize) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// couldn't match aspect ratio within the constraints</span></span><br><span class=\"line\">                    height = heightSpecSize;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (heightSpecMode == MeasureSpec.EXACTLY) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// only the height is fixed, adjust the width to match aspect ratio if possible</span></span><br><span class=\"line\">                height = heightSpecSize;</span><br><span class=\"line\">                width = height * mVideoWidth / mVideoHeight;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (widthSpecMode == MeasureSpec.AT_MOST &amp;&amp; width &gt; widthSpecSize) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// couldn't match aspect ratio within the constraints</span></span><br><span class=\"line\">                    width = widthSpecSize;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// neither the width nor the height are fixed, try to use actual video size</span></span><br><span class=\"line\">                width = mVideoWidth;</span><br><span class=\"line\">                height = mVideoHeight;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (heightSpecMode == MeasureSpec.AT_MOST &amp;&amp; height &gt; heightSpecSize) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// too tall, decrease both width and height</span></span><br><span class=\"line\">                    height = heightSpecSize;</span><br><span class=\"line\">                    width = height * mVideoWidth / mVideoHeight;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (widthSpecMode == MeasureSpec.AT_MOST &amp;&amp; width &gt; widthSpecSize) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// too wide, decrease both width and height</span></span><br><span class=\"line\">                    width = widthSpecSize;</span><br><span class=\"line\">                    height = width * mVideoHeight / mVideoWidth;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// no size yet, just adopt the given spec sizes</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        setMeasuredDimension(width, height);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onInitializeAccessibilityEvent</span><span class=\"params\">(AccessibilityEvent event)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onInitializeAccessibilityEvent(event);</span><br><span class=\"line\">        event.setClassName(TextureVideoView.class.getName());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onInitializeAccessibilityNodeInfo</span><span class=\"params\">(AccessibilityNodeInfo info)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onInitializeAccessibilityNodeInfo(info);</span><br><span class=\"line\">        info.setClassName(TextureVideoView.class.getName());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">resolveAdjustedSize</span><span class=\"params\">(<span class=\"keyword\">int</span> desiredSize, <span class=\"keyword\">int</span> measureSpec)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> getDefaultSize(desiredSize, measureSpec);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Sets video path.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> path the path of the video.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setVideoPath</span><span class=\"params\">(String path)</span> </span>&#123;</span><br><span class=\"line\">        setVideoURI(Uri.parse(path));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Sets video URI.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> uri the URI of the video.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setVideoURI</span><span class=\"params\">(Uri uri)</span> </span>&#123;</span><br><span class=\"line\">        setVideoURI(uri, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Sets video URI using specific headers.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> uri     the URI of the video.</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> headers the headers for the URI request.</span></span><br><span class=\"line\"><span class=\"comment\">     *                Note that the cross domain redirection is allowed by default, but that can be</span></span><br><span class=\"line\"><span class=\"comment\">     *                changed with key/value pairs through the headers parameter with</span></span><br><span class=\"line\"><span class=\"comment\">     *                \"android-allow-cross-domain-redirect\" as the key and \"0\" or \"1\" as the value</span></span><br><span class=\"line\"><span class=\"comment\">     *                to disallow or allow cross domain redirection.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setVideoURI</span><span class=\"params\">(Uri uri, Map&lt;String, String&gt; headers)</span> </span>&#123;</span><br><span class=\"line\">        mUri = uri;</span><br><span class=\"line\">        mHeaders = headers;</span><br><span class=\"line\">        mSeekWhenPrepared = <span class=\"number\">0</span>;</span><br><span class=\"line\">        openVideo();</span><br><span class=\"line\">        requestLayout();</span><br><span class=\"line\">        invalidate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">stopPlayback</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mMediaPlayer != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            mMediaPlayer.stop();</span><br><span class=\"line\">            mMediaPlayer.release();</span><br><span class=\"line\">            mMediaPlayer = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            mCurrentState = STATE_IDLE;</span><br><span class=\"line\">            mTargetState  = STATE_IDLE;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mShouldRequestAudioFocus) &#123;</span><br><span class=\"line\">                AudioManager am = (AudioManager) getContext().getApplicationContext().getSystemService(Context.AUDIO_SERVICE);</span><br><span class=\"line\">                am.abandonAudioFocus(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        clearSurface();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Clears the surface texture by attaching a GL context and clearing it.</span></span><br><span class=\"line\"><span class=\"comment\">     * Code taken from &lt;a href=\"http://stackoverflow.com/a/31582209\"&gt;Hugo Gresse's answer on stackoverflow.com&lt;/a&gt;.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">clearSurface</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mSurface == <span class=\"keyword\">null</span> || Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.JELLY_BEAN) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        EGL10 egl = (EGL10) EGLContext.getEGL();</span><br><span class=\"line\">        EGLDisplay display = egl.eglGetDisplay(EGL10.EGL_DEFAULT_DISPLAY);</span><br><span class=\"line\">        egl.eglInitialize(display, <span class=\"keyword\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] attribList = &#123;</span><br><span class=\"line\">                EGL10.EGL_RED_SIZE, <span class=\"number\">8</span>,</span><br><span class=\"line\">                EGL10.EGL_GREEN_SIZE, <span class=\"number\">8</span>,</span><br><span class=\"line\">                EGL10.EGL_BLUE_SIZE, <span class=\"number\">8</span>,</span><br><span class=\"line\">                EGL10.EGL_ALPHA_SIZE, <span class=\"number\">8</span>,</span><br><span class=\"line\">                EGL10.EGL_RENDERABLE_TYPE, EGL10.EGL_WINDOW_BIT,</span><br><span class=\"line\">                EGL10.EGL_NONE, <span class=\"number\">0</span>,      <span class=\"comment\">// placeholder for recordable [@-3]</span></span><br><span class=\"line\">                EGL10.EGL_NONE</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        EGLConfig[] configs = <span class=\"keyword\">new</span> EGLConfig[<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] numConfigs = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\">        egl.eglChooseConfig(display, attribList, configs, configs.length, numConfigs);</span><br><span class=\"line\">        EGLConfig config = configs[<span class=\"number\">0</span>];</span><br><span class=\"line\">        EGLContext context = egl.eglCreateContext(display, config, EGL10.EGL_NO_CONTEXT, <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;</span><br><span class=\"line\">                <span class=\"number\">12440</span>, <span class=\"number\">2</span>, EGL10.EGL_NONE</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        EGLSurface eglSurface = egl.eglCreateWindowSurface(display, config, mSurface, <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;</span><br><span class=\"line\">                EGL10.EGL_NONE</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        egl.eglMakeCurrent(display, eglSurface, eglSurface, context);</span><br><span class=\"line\">        GLES20.glClearColor(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        GLES20.glClear(GLES20.GL_COLOR_BUFFER_BIT);</span><br><span class=\"line\">        egl.eglSwapBuffers(display, eglSurface);</span><br><span class=\"line\">        egl.eglDestroySurface(display, eglSurface);</span><br><span class=\"line\">        egl.eglMakeCurrent(display, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_CONTEXT);</span><br><span class=\"line\">        egl.eglDestroyContext(display, context);</span><br><span class=\"line\">        egl.eglTerminate(display);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">openVideo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mUri == <span class=\"keyword\">null</span> || mSurface == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// not ready for playback just yet, will try again later</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// we shouldn't clear the target state, because somebody might have</span></span><br><span class=\"line\">        <span class=\"comment\">// called start() previously</span></span><br><span class=\"line\">        release(<span class=\"keyword\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mShouldRequestAudioFocus) &#123;</span><br><span class=\"line\">            AudioManager am = (AudioManager) getContext().getApplicationContext().getSystemService(Context.AUDIO_SERVICE);</span><br><span class=\"line\">            am.requestAudioFocus(<span class=\"keyword\">null</span>, AudioManager.STREAM_MUSIC, AudioManager.AUDIOFOCUS_GAIN);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            mMediaPlayer = <span class=\"keyword\">new</span> MediaPlayer();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mAudioSession != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                mMediaPlayer.setAudioSessionId(mAudioSession);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                mAudioSession = mMediaPlayer.getAudioSessionId();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            mMediaPlayer.setOnPreparedListener(mPreparedListener);</span><br><span class=\"line\">            mMediaPlayer.setOnVideoSizeChangedListener(mSizeChangedListener);</span><br><span class=\"line\">            mMediaPlayer.setOnCompletionListener(mCompletionListener);</span><br><span class=\"line\">            mMediaPlayer.setOnErrorListener(mErrorListener);</span><br><span class=\"line\">            mMediaPlayer.setOnInfoListener(mInfoListener);</span><br><span class=\"line\">            mMediaPlayer.setOnBufferingUpdateListener(mBufferingUpdateListener);</span><br><span class=\"line\">            mCurrentBufferPercentage = <span class=\"number\">0</span>;</span><br><span class=\"line\">            mMediaPlayer.setDataSource(getContext().getApplicationContext(), mUri, mHeaders);</span><br><span class=\"line\">            mMediaPlayer.setSurface(mSurface);</span><br><span class=\"line\">            mMediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);</span><br><span class=\"line\">            mMediaPlayer.setScreenOnWhilePlaying(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            mMediaPlayer.prepareAsync();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// we don't set the target state here either, but preserve the</span></span><br><span class=\"line\">            <span class=\"comment\">// target state that was there before.</span></span><br><span class=\"line\">            mCurrentState = STATE_PREPARING;</span><br><span class=\"line\">            attachMediaController();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException ex) &#123;</span><br><span class=\"line\">            Log.w(TAG, <span class=\"string\">\"Unable to open content: \"</span> + mUri, ex);</span><br><span class=\"line\">            mCurrentState = STATE_ERROR;</span><br><span class=\"line\">            mTargetState = STATE_ERROR;</span><br><span class=\"line\">            mErrorListener.onError(mMediaPlayer, MediaPlayer.MEDIA_ERROR_UNKNOWN, <span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IllegalArgumentException ex) &#123;</span><br><span class=\"line\">            Log.w(TAG, <span class=\"string\">\"Unable to open content: \"</span> + mUri, ex);</span><br><span class=\"line\">            mCurrentState = STATE_ERROR;</span><br><span class=\"line\">            mTargetState = STATE_ERROR;</span><br><span class=\"line\">            mErrorListener.onError(mMediaPlayer, MediaPlayer.MEDIA_ERROR_UNKNOWN, <span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMediaController</span><span class=\"params\">(MediaController controller)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            mMediaController.hide();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        mMediaController = controller;</span><br><span class=\"line\">        attachMediaController();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">attachMediaController</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mMediaPlayer != <span class=\"keyword\">null</span> &amp;&amp; mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            mMediaController.setMediaPlayer(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">            View anchorView = <span class=\"keyword\">this</span>.getParent() <span class=\"keyword\">instanceof</span> View ?</span><br><span class=\"line\">                    (View)<span class=\"keyword\">this</span>.getParent() : <span class=\"keyword\">this</span>;</span><br><span class=\"line\">            mMediaController.setAnchorView(anchorView);</span><br><span class=\"line\">            mMediaController.setEnabled(isInPlaybackState());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    MediaPlayer.OnVideoSizeChangedListener mSizeChangedListener =</span><br><span class=\"line\">            <span class=\"keyword\">new</span> MediaPlayer.OnVideoSizeChangedListener() &#123;</span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onVideoSizeChanged</span><span class=\"params\">(MediaPlayer mp, <span class=\"keyword\">int</span> width, <span class=\"keyword\">int</span> height)</span> </span>&#123;</span><br><span class=\"line\">                    mVideoWidth = mp.getVideoWidth();</span><br><span class=\"line\">                    mVideoHeight = mp.getVideoHeight();</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mVideoWidth != <span class=\"number\">0</span> &amp;&amp; mVideoHeight != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                        getSurfaceTexture().setDefaultBufferSize(mVideoWidth, mVideoHeight);</span><br><span class=\"line\">                        requestLayout();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    MediaPlayer.OnPreparedListener mPreparedListener = <span class=\"keyword\">new</span> MediaPlayer.OnPreparedListener() &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPrepared</span><span class=\"params\">(MediaPlayer mp)</span> </span>&#123;</span><br><span class=\"line\">            mCurrentState = STATE_PREPARED;</span><br><span class=\"line\"></span><br><span class=\"line\">            mCanPause = mCanSeekBack = mCanSeekForward = <span class=\"keyword\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mOnPreparedListener != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                mOnPreparedListener.onPrepared(mMediaPlayer);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                mMediaController.setEnabled(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            mVideoWidth = mp.getVideoWidth();</span><br><span class=\"line\">            mVideoHeight = mp.getVideoHeight();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">int</span> seekToPosition = mSeekWhenPrepared;  <span class=\"comment\">// mSeekWhenPrepared may be changed after seekTo() call</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (seekToPosition != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                seekTo(seekToPosition);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mVideoWidth != <span class=\"number\">0</span> &amp;&amp; mVideoHeight != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//Log.i(\"@@@@\", \"video size: \" + mVideoWidth +\"/\"+ mVideoHeight);</span></span><br><span class=\"line\">                getSurfaceTexture().setDefaultBufferSize(mVideoWidth, mVideoHeight);</span><br><span class=\"line\">                <span class=\"comment\">// We won't get a \"surface changed\" callback if the surface is already the right size, so</span></span><br><span class=\"line\">                <span class=\"comment\">// start the video here instead of in the callback.</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (mTargetState == STATE_PLAYING) &#123;</span><br><span class=\"line\">                    start();</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        mMediaController.show();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!isPlaying() &amp;&amp;</span><br><span class=\"line\">                        (seekToPosition != <span class=\"number\">0</span> || getCurrentPosition() &gt; <span class=\"number\">0</span>)) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// Show the media controls when we're paused into a video and make 'em stick.</span></span><br><span class=\"line\">                        mMediaController.show(<span class=\"number\">0</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// We don't know the video size yet, but should start anyway.</span></span><br><span class=\"line\">                <span class=\"comment\">// The video size might be reported to us later.</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (mTargetState == STATE_PLAYING) &#123;</span><br><span class=\"line\">                    start();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> MediaPlayer.OnCompletionListener mCompletionListener =</span><br><span class=\"line\">            <span class=\"keyword\">new</span> MediaPlayer.OnCompletionListener() &#123;</span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCompletion</span><span class=\"params\">(MediaPlayer mp)</span> </span>&#123;</span><br><span class=\"line\">                    mCurrentState = STATE_PLAYBACK_COMPLETED;</span><br><span class=\"line\">                    mTargetState = STATE_PLAYBACK_COMPLETED;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        mMediaController.hide();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mOnCompletionListener != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        mOnCompletionListener.onCompletion(mMediaPlayer);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> MediaPlayer.OnInfoListener mInfoListener =</span><br><span class=\"line\">            <span class=\"keyword\">new</span> MediaPlayer.OnInfoListener() &#123;</span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"keyword\">boolean</span> <span class=\"title\">onInfo</span><span class=\"params\">(MediaPlayer mp, <span class=\"keyword\">int</span> arg1, <span class=\"keyword\">int</span> arg2)</span> </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mOnInfoListener != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        mOnInfoListener.onInfo(mp, arg1, arg2);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> MediaPlayer.OnErrorListener mErrorListener =</span><br><span class=\"line\">            <span class=\"keyword\">new</span> MediaPlayer.OnErrorListener() &#123;</span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onError</span><span class=\"params\">(MediaPlayer mp, <span class=\"keyword\">int</span> framework_err, <span class=\"keyword\">int</span> impl_err)</span> </span>&#123;</span><br><span class=\"line\">                    Log.d(TAG, <span class=\"string\">\"Error: \"</span> + framework_err + <span class=\"string\">\",\"</span> + impl_err);</span><br><span class=\"line\">                    mCurrentState = STATE_ERROR;</span><br><span class=\"line\">                    mTargetState = STATE_ERROR;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        mMediaController.hide();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">/* If an error handler has been supplied, use it and finish. */</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mOnErrorListener != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (mOnErrorListener.onError(mMediaPlayer, framework_err, impl_err)) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">/* Otherwise, pop up an error dialog so the user knows that</span></span><br><span class=\"line\"><span class=\"comment\">                     * something bad has happened. Only try and pop up the dialog</span></span><br><span class=\"line\"><span class=\"comment\">                     * if we're attached to a window. When we're going away and no</span></span><br><span class=\"line\"><span class=\"comment\">                     * longer have a window, don't bother showing the user an error.</span></span><br><span class=\"line\"><span class=\"comment\">                     */</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (getWindowToken() != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        Resources r = getContext().getResources();</span><br><span class=\"line\">                        <span class=\"keyword\">int</span> messageId;</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (framework_err == MediaPlayer.MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK) &#123;</span><br><span class=\"line\">                            messageId = android.R.string.VideoView_error_text_invalid_progressive_playback;</span><br><span class=\"line\">                        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                            messageId = android.R.string.VideoView_error_text_unknown;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">new</span> AlertDialog.Builder(getContext())</span><br><span class=\"line\">                                .setMessage(messageId)</span><br><span class=\"line\">                                .setPositiveButton(android.R.string.VideoView_error_button,</span><br><span class=\"line\">                                        <span class=\"keyword\">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class=\"line\">                                            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(DialogInterface dialog, <span class=\"keyword\">int</span> whichButton)</span> </span>&#123;</span><br><span class=\"line\">                                                <span class=\"comment\">/* If we get here, there is no onError listener, so</span></span><br><span class=\"line\"><span class=\"comment\">                                                 * at least inform them that the video is over.</span></span><br><span class=\"line\"><span class=\"comment\">                                                 */</span></span><br><span class=\"line\">                                                <span class=\"keyword\">if</span> (mOnCompletionListener != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                                                    mOnCompletionListener.onCompletion(mMediaPlayer);</span><br><span class=\"line\">                                                &#125;</span><br><span class=\"line\">                                            &#125;</span><br><span class=\"line\">                                        &#125;)</span><br><span class=\"line\">                                .setCancelable(<span class=\"keyword\">false</span>)</span><br><span class=\"line\">                                .show();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> MediaPlayer.OnBufferingUpdateListener mBufferingUpdateListener =</span><br><span class=\"line\">            <span class=\"keyword\">new</span> MediaPlayer.OnBufferingUpdateListener() &#123;</span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onBufferingUpdate</span><span class=\"params\">(MediaPlayer mp, <span class=\"keyword\">int</span> percent)</span> </span>&#123;</span><br><span class=\"line\">                    mCurrentBufferPercentage = percent;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Register a callback to be invoked when the media file</span></span><br><span class=\"line\"><span class=\"comment\">     * is loaded and ready to go.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> l The callback that will be run</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOnPreparedListener</span><span class=\"params\">(MediaPlayer.OnPreparedListener l)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        mOnPreparedListener = l;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Register a callback to be invoked when the end of a media file</span></span><br><span class=\"line\"><span class=\"comment\">     * has been reached during playback.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> l The callback that will be run</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOnCompletionListener</span><span class=\"params\">(OnCompletionListener l)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        mOnCompletionListener = l;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Register a callback to be invoked when an error occurs</span></span><br><span class=\"line\"><span class=\"comment\">     * during playback or setup.  If no listener is specified,</span></span><br><span class=\"line\"><span class=\"comment\">     * or if the listener returned false, TextureVideoView will inform</span></span><br><span class=\"line\"><span class=\"comment\">     * the user of any errors.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> l The callback that will be run</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOnErrorListener</span><span class=\"params\">(OnErrorListener l)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        mOnErrorListener = l;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Register a callback to be invoked when an informational event</span></span><br><span class=\"line\"><span class=\"comment\">     * occurs during playback or setup.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> l The callback that will be run</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOnInfoListener</span><span class=\"params\">(OnInfoListener l)</span> </span>&#123;</span><br><span class=\"line\">        mOnInfoListener = l;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    TextureView.SurfaceTextureListener mSurfaceTextureListener = <span class=\"keyword\">new</span> SurfaceTextureListener()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onSurfaceTextureSizeChanged</span><span class=\"params\">(<span class=\"keyword\">final</span> SurfaceTexture surface, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> width, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> height)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">boolean</span> isValidState =  (mTargetState == STATE_PLAYING);</span><br><span class=\"line\">            <span class=\"keyword\">boolean</span> hasValidSize = (width &gt; <span class=\"number\">0</span> &amp;&amp; height &gt; <span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mMediaPlayer != <span class=\"keyword\">null</span> &amp;&amp; isValidState &amp;&amp; hasValidSize) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (mSeekWhenPrepared != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    seekTo(mSeekWhenPrepared);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                start();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onSurfaceTextureAvailable</span><span class=\"params\">(<span class=\"keyword\">final</span> SurfaceTexture surface, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> width, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> height)</span> </span>&#123;</span><br><span class=\"line\">            mSurface = <span class=\"keyword\">new</span> Surface(surface);</span><br><span class=\"line\">            openVideo();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onSurfaceTextureDestroyed</span><span class=\"params\">(<span class=\"keyword\">final</span> SurfaceTexture surface)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// after we return from this we can't use the surface any more</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mSurface != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                mSurface.release();</span><br><span class=\"line\">                mSurface = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mMediaController != <span class=\"keyword\">null</span>) mMediaController.hide();</span><br><span class=\"line\">            release(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onSurfaceTextureUpdated</span><span class=\"params\">(<span class=\"keyword\">final</span> SurfaceTexture surface)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// do nothing</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * release the media player in any state</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">release</span><span class=\"params\">(<span class=\"keyword\">boolean</span> cleartargetstate)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mMediaPlayer != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            mMediaPlayer.reset();</span><br><span class=\"line\">            mMediaPlayer.release();</span><br><span class=\"line\">            mMediaPlayer = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            mCurrentState = STATE_IDLE;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (cleartargetstate) &#123;</span><br><span class=\"line\">                mTargetState  = STATE_IDLE;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mShouldRequestAudioFocus) &#123;</span><br><span class=\"line\">                AudioManager am = (AudioManager) getContext().getApplicationContext().getSystemService(Context.AUDIO_SERVICE);</span><br><span class=\"line\">                am.abandonAudioFocus(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouchEvent</span><span class=\"params\">(MotionEvent ev)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isInPlaybackState() &amp;&amp; mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            toggleMediaControlsVisiblity();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTrackballEvent</span><span class=\"params\">(MotionEvent ev)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isInPlaybackState() &amp;&amp; mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            toggleMediaControlsVisiblity();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onKeyDown</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode, KeyEvent event)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> isKeyCodeSupported = keyCode != KeyEvent.KEYCODE_BACK &amp;&amp;</span><br><span class=\"line\">                keyCode != KeyEvent.KEYCODE_VOLUME_UP &amp;&amp;</span><br><span class=\"line\">                keyCode != KeyEvent.KEYCODE_VOLUME_DOWN &amp;&amp;</span><br><span class=\"line\">                keyCode != KeyEvent.KEYCODE_VOLUME_MUTE &amp;&amp;</span><br><span class=\"line\">                keyCode != KeyEvent.KEYCODE_MENU &amp;&amp;</span><br><span class=\"line\">                keyCode != KeyEvent.KEYCODE_CALL &amp;&amp;</span><br><span class=\"line\">                keyCode != KeyEvent.KEYCODE_ENDCALL;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isInPlaybackState() &amp;&amp; isKeyCodeSupported &amp;&amp; mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (keyCode == KeyEvent.KEYCODE_HEADSETHOOK ||</span><br><span class=\"line\">                    keyCode == KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (mMediaPlayer.isPlaying()) &#123;</span><br><span class=\"line\">                    pause();</span><br><span class=\"line\">                    mMediaController.show();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    start();</span><br><span class=\"line\">                    mMediaController.hide();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (keyCode == KeyEvent.KEYCODE_MEDIA_PLAY) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!mMediaPlayer.isPlaying()) &#123;</span><br><span class=\"line\">                    start();</span><br><span class=\"line\">                    mMediaController.hide();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (keyCode == KeyEvent.KEYCODE_MEDIA_STOP</span><br><span class=\"line\">                    || keyCode == KeyEvent.KEYCODE_MEDIA_PAUSE) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (mMediaPlayer.isPlaying()) &#123;</span><br><span class=\"line\">                    pause();</span><br><span class=\"line\">                    mMediaController.show();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                toggleMediaControlsVisiblity();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.onKeyDown(keyCode, event);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">toggleMediaControlsVisiblity</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mMediaController.isShowing()) &#123;</span><br><span class=\"line\">            mMediaController.hide();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            mMediaController.show();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">start</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isInPlaybackState()) &#123;</span><br><span class=\"line\">            mMediaPlayer.start();</span><br><span class=\"line\">            mCurrentState = STATE_PLAYING;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        mTargetState = STATE_PLAYING;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">pause</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isInPlaybackState()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mMediaPlayer.isPlaying()) &#123;</span><br><span class=\"line\">                mMediaPlayer.pause();</span><br><span class=\"line\">                mCurrentState = STATE_PAUSED;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        mTargetState = STATE_PAUSED;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">suspend</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        release(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">resume</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        openVideo();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getDuration</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isInPlaybackState()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> mMediaPlayer.getDuration();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getCurrentPosition</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isInPlaybackState()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> mMediaPlayer.getCurrentPosition();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">seekTo</span><span class=\"params\">(<span class=\"keyword\">int</span> msec)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isInPlaybackState()) &#123;</span><br><span class=\"line\">            mMediaPlayer.seekTo(msec);</span><br><span class=\"line\">            mSeekWhenPrepared = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            mSeekWhenPrepared = msec;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isPlaying</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> isInPlaybackState() &amp;&amp; mMediaPlayer.isPlaying();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getBufferPercentage</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mMediaPlayer != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> mCurrentBufferPercentage;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isInPlaybackState</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (mMediaPlayer != <span class=\"keyword\">null</span> &amp;&amp;</span><br><span class=\"line\">                mCurrentState != STATE_ERROR &amp;&amp;</span><br><span class=\"line\">                mCurrentState != STATE_IDLE &amp;&amp;</span><br><span class=\"line\">                mCurrentState != STATE_PREPARING);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">canPause</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mCanPause;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">canSeekBackward</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mCanSeekBack;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">canSeekForward</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mCanSeekForward;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getAudioSessionId</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mAudioSession == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            MediaPlayer foo = <span class=\"keyword\">new</span> MediaPlayer();</span><br><span class=\"line\">            mAudioSession = foo.getAudioSessionId();</span><br><span class=\"line\">            foo.release();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mAudioSession;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Sets the request audio focus flag. If enabled, &#123;<span class=\"doctag\">@link</span> TextureVideoView&#125; will request</span></span><br><span class=\"line\"><span class=\"comment\">     * audio focus when opening a video by calling &#123;<span class=\"doctag\">@link</span> AudioManager&#125;. This flag</span></span><br><span class=\"line\"><span class=\"comment\">     * should be set before calling &#123;<span class=\"doctag\">@link</span> TextureVideoView#setVideoPath(String)&#125; or</span></span><br><span class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@link</span> TextureVideoView#setVideoURI(Uri)&#125;. By default, &#123;<span class=\"doctag\">@link</span> TextureVideoView&#125; will</span></span><br><span class=\"line\"><span class=\"comment\">     * request audio focus.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> shouldRequestAudioFocus  If &#123;<span class=\"doctag\">@code</span> true&#125;, &#123;<span class=\"doctag\">@link</span> TextureVideoView&#125; will request</span></span><br><span class=\"line\"><span class=\"comment\">     * audio focus before opening a video, else audio focus is not requested</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setShouldRequestAudioFocus</span><span class=\"params\">(<span class=\"keyword\">boolean</span> shouldRequestAudioFocus)</span> </span>&#123;</span><br><span class=\"line\">        mShouldRequestAudioFocus = shouldRequestAudioFocus;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Returns the current state of the audio focus request flag.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> &#123;<span class=\"doctag\">@code</span> true&#125;, if &#123;<span class=\"doctag\">@link</span> TextureVideoView&#125; will request</span></span><br><span class=\"line\"><span class=\"comment\">     * audio focus before opening a video, else &#123;<span class=\"doctag\">@code</span> false&#125;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">shouldRequestAudioFocus</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mShouldRequestAudioFocus;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用时调用setVideoPath传入视频的地址即可，其他方法也和VideoView大体一致。</p>\n","site":{"data":{}},"excerpt":"<p>平时在项目中需要用到播放视频时，使用的最多的就是VideoView或者是其他第三方的播放器了。嗯，之前我也一直是这么用的，但是最近在项目中遇到了一个非常诡异的bug，我们项目使用到了腾讯云直播，并且在全屏直播的时候，屏幕上面需要通过一个小窗口播放一个视频，视频嵌套在scrollview中，可以通过向上滑动，划出scrollView所包裹的区域。</p>\n<ol>\n<li>遇到的第一个问题，当直播控件开启的情况下，VideoView看不到任何效果，处于完全透明的状态。后来调查才知道，SurfaceView和普通的View不一样，它拥有一个独立于Activity之外的Window，当SurfaceView被设置为不可见的时候，其所对应的Window就会销毁，再想去显示这个SurfaceView的时候就不得不重新创建；另外，SurfaceView创建的先后顺序也是不受FrameLayout的规则影响的，一般来说，布局xml文件中FrameLayout布局靠后的view会覆盖考前的view，但SurfaceView是根据其对应的Surface创建的先后顺序决定的。</li>\n</ol>","more":"<p>于是采用的网上的方法，使用setZOrderOnTop(true)或者setZOrderMediaOverlay(true)来控制SurfaceView的显示层次。完美解决了重叠无法显示视频的问题。</p>\n<ol start=\"2\">\n<li>\n<p>但是却还存在第二个问题，我滑动ScrollView时，将VideoView划出了ScrollView，可是却依然可见，其他控件因为划出了父控件的范围都消失了，但VideoView依然顽强地显示着。原来ScrollView因为有自己的Window，是不会受父控件约束的。看来，只能放弃使用VideoView，去寻找其他的方式了。</p>\n</li>\n<li>\n<p>通过查找，发现除了能用SurfaceView来播放视频之外，还有一个控件TextureView也可以用来播放视频。只不过SurfaceView使用了双离屏缓冲，性能会更好，但是，我们只能试一试TextureView这个救命稻草了。由于TextureView直接使用起来比较麻烦，需要封装一下</p>\n</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br><span class=\"line\">295</span><br><span class=\"line\">296</span><br><span class=\"line\">297</span><br><span class=\"line\">298</span><br><span class=\"line\">299</span><br><span class=\"line\">300</span><br><span class=\"line\">301</span><br><span class=\"line\">302</span><br><span class=\"line\">303</span><br><span class=\"line\">304</span><br><span class=\"line\">305</span><br><span class=\"line\">306</span><br><span class=\"line\">307</span><br><span class=\"line\">308</span><br><span class=\"line\">309</span><br><span class=\"line\">310</span><br><span class=\"line\">311</span><br><span class=\"line\">312</span><br><span class=\"line\">313</span><br><span class=\"line\">314</span><br><span class=\"line\">315</span><br><span class=\"line\">316</span><br><span class=\"line\">317</span><br><span class=\"line\">318</span><br><span class=\"line\">319</span><br><span class=\"line\">320</span><br><span class=\"line\">321</span><br><span class=\"line\">322</span><br><span class=\"line\">323</span><br><span class=\"line\">324</span><br><span class=\"line\">325</span><br><span class=\"line\">326</span><br><span class=\"line\">327</span><br><span class=\"line\">328</span><br><span class=\"line\">329</span><br><span class=\"line\">330</span><br><span class=\"line\">331</span><br><span class=\"line\">332</span><br><span class=\"line\">333</span><br><span class=\"line\">334</span><br><span class=\"line\">335</span><br><span class=\"line\">336</span><br><span class=\"line\">337</span><br><span class=\"line\">338</span><br><span class=\"line\">339</span><br><span class=\"line\">340</span><br><span class=\"line\">341</span><br><span class=\"line\">342</span><br><span class=\"line\">343</span><br><span class=\"line\">344</span><br><span class=\"line\">345</span><br><span class=\"line\">346</span><br><span class=\"line\">347</span><br><span class=\"line\">348</span><br><span class=\"line\">349</span><br><span class=\"line\">350</span><br><span class=\"line\">351</span><br><span class=\"line\">352</span><br><span class=\"line\">353</span><br><span class=\"line\">354</span><br><span class=\"line\">355</span><br><span class=\"line\">356</span><br><span class=\"line\">357</span><br><span class=\"line\">358</span><br><span class=\"line\">359</span><br><span class=\"line\">360</span><br><span class=\"line\">361</span><br><span class=\"line\">362</span><br><span class=\"line\">363</span><br><span class=\"line\">364</span><br><span class=\"line\">365</span><br><span class=\"line\">366</span><br><span class=\"line\">367</span><br><span class=\"line\">368</span><br><span class=\"line\">369</span><br><span class=\"line\">370</span><br><span class=\"line\">371</span><br><span class=\"line\">372</span><br><span class=\"line\">373</span><br><span class=\"line\">374</span><br><span class=\"line\">375</span><br><span class=\"line\">376</span><br><span class=\"line\">377</span><br><span class=\"line\">378</span><br><span class=\"line\">379</span><br><span class=\"line\">380</span><br><span class=\"line\">381</span><br><span class=\"line\">382</span><br><span class=\"line\">383</span><br><span class=\"line\">384</span><br><span class=\"line\">385</span><br><span class=\"line\">386</span><br><span class=\"line\">387</span><br><span class=\"line\">388</span><br><span class=\"line\">389</span><br><span class=\"line\">390</span><br><span class=\"line\">391</span><br><span class=\"line\">392</span><br><span class=\"line\">393</span><br><span class=\"line\">394</span><br><span class=\"line\">395</span><br><span class=\"line\">396</span><br><span class=\"line\">397</span><br><span class=\"line\">398</span><br><span class=\"line\">399</span><br><span class=\"line\">400</span><br><span class=\"line\">401</span><br><span class=\"line\">402</span><br><span class=\"line\">403</span><br><span class=\"line\">404</span><br><span class=\"line\">405</span><br><span class=\"line\">406</span><br><span class=\"line\">407</span><br><span class=\"line\">408</span><br><span class=\"line\">409</span><br><span class=\"line\">410</span><br><span class=\"line\">411</span><br><span class=\"line\">412</span><br><span class=\"line\">413</span><br><span class=\"line\">414</span><br><span class=\"line\">415</span><br><span class=\"line\">416</span><br><span class=\"line\">417</span><br><span class=\"line\">418</span><br><span class=\"line\">419</span><br><span class=\"line\">420</span><br><span class=\"line\">421</span><br><span class=\"line\">422</span><br><span class=\"line\">423</span><br><span class=\"line\">424</span><br><span class=\"line\">425</span><br><span class=\"line\">426</span><br><span class=\"line\">427</span><br><span class=\"line\">428</span><br><span class=\"line\">429</span><br><span class=\"line\">430</span><br><span class=\"line\">431</span><br><span class=\"line\">432</span><br><span class=\"line\">433</span><br><span class=\"line\">434</span><br><span class=\"line\">435</span><br><span class=\"line\">436</span><br><span class=\"line\">437</span><br><span class=\"line\">438</span><br><span class=\"line\">439</span><br><span class=\"line\">440</span><br><span class=\"line\">441</span><br><span class=\"line\">442</span><br><span class=\"line\">443</span><br><span class=\"line\">444</span><br><span class=\"line\">445</span><br><span class=\"line\">446</span><br><span class=\"line\">447</span><br><span class=\"line\">448</span><br><span class=\"line\">449</span><br><span class=\"line\">450</span><br><span class=\"line\">451</span><br><span class=\"line\">452</span><br><span class=\"line\">453</span><br><span class=\"line\">454</span><br><span class=\"line\">455</span><br><span class=\"line\">456</span><br><span class=\"line\">457</span><br><span class=\"line\">458</span><br><span class=\"line\">459</span><br><span class=\"line\">460</span><br><span class=\"line\">461</span><br><span class=\"line\">462</span><br><span class=\"line\">463</span><br><span class=\"line\">464</span><br><span class=\"line\">465</span><br><span class=\"line\">466</span><br><span class=\"line\">467</span><br><span class=\"line\">468</span><br><span class=\"line\">469</span><br><span class=\"line\">470</span><br><span class=\"line\">471</span><br><span class=\"line\">472</span><br><span class=\"line\">473</span><br><span class=\"line\">474</span><br><span class=\"line\">475</span><br><span class=\"line\">476</span><br><span class=\"line\">477</span><br><span class=\"line\">478</span><br><span class=\"line\">479</span><br><span class=\"line\">480</span><br><span class=\"line\">481</span><br><span class=\"line\">482</span><br><span class=\"line\">483</span><br><span class=\"line\">484</span><br><span class=\"line\">485</span><br><span class=\"line\">486</span><br><span class=\"line\">487</span><br><span class=\"line\">488</span><br><span class=\"line\">489</span><br><span class=\"line\">490</span><br><span class=\"line\">491</span><br><span class=\"line\">492</span><br><span class=\"line\">493</span><br><span class=\"line\">494</span><br><span class=\"line\">495</span><br><span class=\"line\">496</span><br><span class=\"line\">497</span><br><span class=\"line\">498</span><br><span class=\"line\">499</span><br><span class=\"line\">500</span><br><span class=\"line\">501</span><br><span class=\"line\">502</span><br><span class=\"line\">503</span><br><span class=\"line\">504</span><br><span class=\"line\">505</span><br><span class=\"line\">506</span><br><span class=\"line\">507</span><br><span class=\"line\">508</span><br><span class=\"line\">509</span><br><span class=\"line\">510</span><br><span class=\"line\">511</span><br><span class=\"line\">512</span><br><span class=\"line\">513</span><br><span class=\"line\">514</span><br><span class=\"line\">515</span><br><span class=\"line\">516</span><br><span class=\"line\">517</span><br><span class=\"line\">518</span><br><span class=\"line\">519</span><br><span class=\"line\">520</span><br><span class=\"line\">521</span><br><span class=\"line\">522</span><br><span class=\"line\">523</span><br><span class=\"line\">524</span><br><span class=\"line\">525</span><br><span class=\"line\">526</span><br><span class=\"line\">527</span><br><span class=\"line\">528</span><br><span class=\"line\">529</span><br><span class=\"line\">530</span><br><span class=\"line\">531</span><br><span class=\"line\">532</span><br><span class=\"line\">533</span><br><span class=\"line\">534</span><br><span class=\"line\">535</span><br><span class=\"line\">536</span><br><span class=\"line\">537</span><br><span class=\"line\">538</span><br><span class=\"line\">539</span><br><span class=\"line\">540</span><br><span class=\"line\">541</span><br><span class=\"line\">542</span><br><span class=\"line\">543</span><br><span class=\"line\">544</span><br><span class=\"line\">545</span><br><span class=\"line\">546</span><br><span class=\"line\">547</span><br><span class=\"line\">548</span><br><span class=\"line\">549</span><br><span class=\"line\">550</span><br><span class=\"line\">551</span><br><span class=\"line\">552</span><br><span class=\"line\">553</span><br><span class=\"line\">554</span><br><span class=\"line\">555</span><br><span class=\"line\">556</span><br><span class=\"line\">557</span><br><span class=\"line\">558</span><br><span class=\"line\">559</span><br><span class=\"line\">560</span><br><span class=\"line\">561</span><br><span class=\"line\">562</span><br><span class=\"line\">563</span><br><span class=\"line\">564</span><br><span class=\"line\">565</span><br><span class=\"line\">566</span><br><span class=\"line\">567</span><br><span class=\"line\">568</span><br><span class=\"line\">569</span><br><span class=\"line\">570</span><br><span class=\"line\">571</span><br><span class=\"line\">572</span><br><span class=\"line\">573</span><br><span class=\"line\">574</span><br><span class=\"line\">575</span><br><span class=\"line\">576</span><br><span class=\"line\">577</span><br><span class=\"line\">578</span><br><span class=\"line\">579</span><br><span class=\"line\">580</span><br><span class=\"line\">581</span><br><span class=\"line\">582</span><br><span class=\"line\">583</span><br><span class=\"line\">584</span><br><span class=\"line\">585</span><br><span class=\"line\">586</span><br><span class=\"line\">587</span><br><span class=\"line\">588</span><br><span class=\"line\">589</span><br><span class=\"line\">590</span><br><span class=\"line\">591</span><br><span class=\"line\">592</span><br><span class=\"line\">593</span><br><span class=\"line\">594</span><br><span class=\"line\">595</span><br><span class=\"line\">596</span><br><span class=\"line\">597</span><br><span class=\"line\">598</span><br><span class=\"line\">599</span><br><span class=\"line\">600</span><br><span class=\"line\">601</span><br><span class=\"line\">602</span><br><span class=\"line\">603</span><br><span class=\"line\">604</span><br><span class=\"line\">605</span><br><span class=\"line\">606</span><br><span class=\"line\">607</span><br><span class=\"line\">608</span><br><span class=\"line\">609</span><br><span class=\"line\">610</span><br><span class=\"line\">611</span><br><span class=\"line\">612</span><br><span class=\"line\">613</span><br><span class=\"line\">614</span><br><span class=\"line\">615</span><br><span class=\"line\">616</span><br><span class=\"line\">617</span><br><span class=\"line\">618</span><br><span class=\"line\">619</span><br><span class=\"line\">620</span><br><span class=\"line\">621</span><br><span class=\"line\">622</span><br><span class=\"line\">623</span><br><span class=\"line\">624</span><br><span class=\"line\">625</span><br><span class=\"line\">626</span><br><span class=\"line\">627</span><br><span class=\"line\">628</span><br><span class=\"line\">629</span><br><span class=\"line\">630</span><br><span class=\"line\">631</span><br><span class=\"line\">632</span><br><span class=\"line\">633</span><br><span class=\"line\">634</span><br><span class=\"line\">635</span><br><span class=\"line\">636</span><br><span class=\"line\">637</span><br><span class=\"line\">638</span><br><span class=\"line\">639</span><br><span class=\"line\">640</span><br><span class=\"line\">641</span><br><span class=\"line\">642</span><br><span class=\"line\">643</span><br><span class=\"line\">644</span><br><span class=\"line\">645</span><br><span class=\"line\">646</span><br><span class=\"line\">647</span><br><span class=\"line\">648</span><br><span class=\"line\">649</span><br><span class=\"line\">650</span><br><span class=\"line\">651</span><br><span class=\"line\">652</span><br><span class=\"line\">653</span><br><span class=\"line\">654</span><br><span class=\"line\">655</span><br><span class=\"line\">656</span><br><span class=\"line\">657</span><br><span class=\"line\">658</span><br><span class=\"line\">659</span><br><span class=\"line\">660</span><br><span class=\"line\">661</span><br><span class=\"line\">662</span><br><span class=\"line\">663</span><br><span class=\"line\">664</span><br><span class=\"line\">665</span><br><span class=\"line\">666</span><br><span class=\"line\">667</span><br><span class=\"line\">668</span><br><span class=\"line\">669</span><br><span class=\"line\">670</span><br><span class=\"line\">671</span><br><span class=\"line\">672</span><br><span class=\"line\">673</span><br><span class=\"line\">674</span><br><span class=\"line\">675</span><br><span class=\"line\">676</span><br><span class=\"line\">677</span><br><span class=\"line\">678</span><br><span class=\"line\">679</span><br><span class=\"line\">680</span><br><span class=\"line\">681</span><br><span class=\"line\">682</span><br><span class=\"line\">683</span><br><span class=\"line\">684</span><br><span class=\"line\">685</span><br><span class=\"line\">686</span><br><span class=\"line\">687</span><br><span class=\"line\">688</span><br><span class=\"line\">689</span><br><span class=\"line\">690</span><br><span class=\"line\">691</span><br><span class=\"line\">692</span><br><span class=\"line\">693</span><br><span class=\"line\">694</span><br><span class=\"line\">695</span><br><span class=\"line\">696</span><br><span class=\"line\">697</span><br><span class=\"line\">698</span><br><span class=\"line\">699</span><br><span class=\"line\">700</span><br><span class=\"line\">701</span><br><span class=\"line\">702</span><br><span class=\"line\">703</span><br><span class=\"line\">704</span><br><span class=\"line\">705</span><br><span class=\"line\">706</span><br><span class=\"line\">707</span><br><span class=\"line\">708</span><br><span class=\"line\">709</span><br><span class=\"line\">710</span><br><span class=\"line\">711</span><br><span class=\"line\">712</span><br><span class=\"line\">713</span><br><span class=\"line\">714</span><br><span class=\"line\">715</span><br><span class=\"line\">716</span><br><span class=\"line\">717</span><br><span class=\"line\">718</span><br><span class=\"line\">719</span><br><span class=\"line\">720</span><br><span class=\"line\">721</span><br><span class=\"line\">722</span><br><span class=\"line\">723</span><br><span class=\"line\">724</span><br><span class=\"line\">725</span><br><span class=\"line\">726</span><br><span class=\"line\">727</span><br><span class=\"line\">728</span><br><span class=\"line\">729</span><br><span class=\"line\">730</span><br><span class=\"line\">731</span><br><span class=\"line\">732</span><br><span class=\"line\">733</span><br><span class=\"line\">734</span><br><span class=\"line\">735</span><br><span class=\"line\">736</span><br><span class=\"line\">737</span><br><span class=\"line\">738</span><br><span class=\"line\">739</span><br><span class=\"line\">740</span><br><span class=\"line\">741</span><br><span class=\"line\">742</span><br><span class=\"line\">743</span><br><span class=\"line\">744</span><br><span class=\"line\">745</span><br><span class=\"line\">746</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TextureVideoView</span> <span class=\"keyword\">extends</span> <span class=\"title\">TextureView</span></span></span><br><span class=\"line\"><span class=\"class\">        <span class=\"keyword\">implements</span> <span class=\"title\">MediaPlayerControl</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> String TAG = <span class=\"string\">\"TextureVideoView\"</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// all possible internal states</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> STATE_ERROR = -<span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> STATE_IDLE = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> STATE_PREPARING = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> STATE_PREPARED = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> STATE_PLAYING = <span class=\"number\">3</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> STATE_PAUSED = <span class=\"number\">4</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> STATE_PLAYBACK_COMPLETED = <span class=\"number\">5</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// settable by the client</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Uri mUri;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Map&lt;String, String&gt; mHeaders;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// mCurrentState is a TextureVideoView object's current state.</span></span><br><span class=\"line\">    <span class=\"comment\">// mTargetState is the state that a method caller intends to reach.</span></span><br><span class=\"line\">    <span class=\"comment\">// For instance, regardless the TextureVideoView object's current state,</span></span><br><span class=\"line\">    <span class=\"comment\">// calling pause() intends to bring the object to a target state</span></span><br><span class=\"line\">    <span class=\"comment\">// of STATE_PAUSED.</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mCurrentState = STATE_IDLE;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mTargetState = STATE_IDLE;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// All the stuff we need for playing and showing a video</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Surface mSurface = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> MediaPlayer mMediaPlayer = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mAudioSession;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mVideoWidth;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mVideoHeight;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> MediaController mMediaController;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> OnCompletionListener mOnCompletionListener;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> MediaPlayer.OnPreparedListener mOnPreparedListener;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mCurrentBufferPercentage;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> OnErrorListener mOnErrorListener;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> OnInfoListener mOnInfoListener;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> mSeekWhenPrepared;  <span class=\"comment\">// recording the seek position while preparing</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> mCanPause;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> mCanSeekBack;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> mCanSeekForward;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> mShouldRequestAudioFocus = <span class=\"keyword\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TextureVideoView</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>(context, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TextureVideoView</span><span class=\"params\">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>(context, attrs, <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">TextureVideoView</span><span class=\"params\">(Context context, AttributeSet attrs, <span class=\"keyword\">int</span> defStyle)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs, defStyle);</span><br><span class=\"line\"></span><br><span class=\"line\">        mVideoWidth = <span class=\"number\">0</span>;</span><br><span class=\"line\">        mVideoHeight = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        setSurfaceTextureListener(mSurfaceTextureListener);</span><br><span class=\"line\"></span><br><span class=\"line\">        setFocusable(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        setFocusableInTouchMode(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        requestFocus();</span><br><span class=\"line\"></span><br><span class=\"line\">        mCurrentState = STATE_IDLE;</span><br><span class=\"line\">        mTargetState = STATE_IDLE;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onMeasure</span><span class=\"params\">(<span class=\"keyword\">int</span> widthMeasureSpec, <span class=\"keyword\">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//Log.i(\"@@@@\", \"onMeasure(\" + MeasureSpec.toString(widthMeasureSpec) + \", \"</span></span><br><span class=\"line\">        <span class=\"comment\">//        + MeasureSpec.toString(heightMeasureSpec) + \")\");</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> width = getDefaultSize(mVideoWidth, widthMeasureSpec);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> height = getDefaultSize(mVideoHeight, heightMeasureSpec);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mVideoWidth &gt; <span class=\"number\">0</span> &amp;&amp; mVideoHeight &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">int</span> widthSpecMode = MeasureSpec.getMode(widthMeasureSpec);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> heightSpecMode = MeasureSpec.getMode(heightMeasureSpec);</span><br><span class=\"line\">            <span class=\"keyword\">int</span> heightSpecSize = MeasureSpec.getSize(heightMeasureSpec);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (widthSpecMode == MeasureSpec.EXACTLY &amp;&amp; heightSpecMode == MeasureSpec.EXACTLY) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// the size is fixed</span></span><br><span class=\"line\">                width = widthSpecSize;</span><br><span class=\"line\">                height = heightSpecSize;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"comment\">// for compatibility, we adjust size based on aspect ratio</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> ( mVideoWidth * height  &lt; width * mVideoHeight ) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//Log.i(\"@@@\", \"image too wide, correcting\");</span></span><br><span class=\"line\">                    width = height * mVideoWidth / mVideoHeight;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ( mVideoWidth * height  &gt; width * mVideoHeight ) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//Log.i(\"@@@\", \"image too tall, correcting\");</span></span><br><span class=\"line\">                    height = width * mVideoHeight / mVideoWidth;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (widthSpecMode == MeasureSpec.EXACTLY) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// only the width is fixed, adjust the height to match aspect ratio if possible</span></span><br><span class=\"line\">                width = widthSpecSize;</span><br><span class=\"line\">                height = width * mVideoHeight / mVideoWidth;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (heightSpecMode == MeasureSpec.AT_MOST &amp;&amp; height &gt; heightSpecSize) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// couldn't match aspect ratio within the constraints</span></span><br><span class=\"line\">                    height = heightSpecSize;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (heightSpecMode == MeasureSpec.EXACTLY) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// only the height is fixed, adjust the width to match aspect ratio if possible</span></span><br><span class=\"line\">                height = heightSpecSize;</span><br><span class=\"line\">                width = height * mVideoWidth / mVideoHeight;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (widthSpecMode == MeasureSpec.AT_MOST &amp;&amp; width &gt; widthSpecSize) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// couldn't match aspect ratio within the constraints</span></span><br><span class=\"line\">                    width = widthSpecSize;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// neither the width nor the height are fixed, try to use actual video size</span></span><br><span class=\"line\">                width = mVideoWidth;</span><br><span class=\"line\">                height = mVideoHeight;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (heightSpecMode == MeasureSpec.AT_MOST &amp;&amp; height &gt; heightSpecSize) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// too tall, decrease both width and height</span></span><br><span class=\"line\">                    height = heightSpecSize;</span><br><span class=\"line\">                    width = height * mVideoWidth / mVideoHeight;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (widthSpecMode == MeasureSpec.AT_MOST &amp;&amp; width &gt; widthSpecSize) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">// too wide, decrease both width and height</span></span><br><span class=\"line\">                    width = widthSpecSize;</span><br><span class=\"line\">                    height = width * mVideoHeight / mVideoWidth;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// no size yet, just adopt the given spec sizes</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        setMeasuredDimension(width, height);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onInitializeAccessibilityEvent</span><span class=\"params\">(AccessibilityEvent event)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onInitializeAccessibilityEvent(event);</span><br><span class=\"line\">        event.setClassName(TextureVideoView.class.getName());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onInitializeAccessibilityNodeInfo</span><span class=\"params\">(AccessibilityNodeInfo info)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onInitializeAccessibilityNodeInfo(info);</span><br><span class=\"line\">        info.setClassName(TextureVideoView.class.getName());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">resolveAdjustedSize</span><span class=\"params\">(<span class=\"keyword\">int</span> desiredSize, <span class=\"keyword\">int</span> measureSpec)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> getDefaultSize(desiredSize, measureSpec);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Sets video path.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> path the path of the video.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setVideoPath</span><span class=\"params\">(String path)</span> </span>&#123;</span><br><span class=\"line\">        setVideoURI(Uri.parse(path));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Sets video URI.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> uri the URI of the video.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setVideoURI</span><span class=\"params\">(Uri uri)</span> </span>&#123;</span><br><span class=\"line\">        setVideoURI(uri, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Sets video URI using specific headers.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> uri     the URI of the video.</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> headers the headers for the URI request.</span></span><br><span class=\"line\"><span class=\"comment\">     *                Note that the cross domain redirection is allowed by default, but that can be</span></span><br><span class=\"line\"><span class=\"comment\">     *                changed with key/value pairs through the headers parameter with</span></span><br><span class=\"line\"><span class=\"comment\">     *                \"android-allow-cross-domain-redirect\" as the key and \"0\" or \"1\" as the value</span></span><br><span class=\"line\"><span class=\"comment\">     *                to disallow or allow cross domain redirection.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setVideoURI</span><span class=\"params\">(Uri uri, Map&lt;String, String&gt; headers)</span> </span>&#123;</span><br><span class=\"line\">        mUri = uri;</span><br><span class=\"line\">        mHeaders = headers;</span><br><span class=\"line\">        mSeekWhenPrepared = <span class=\"number\">0</span>;</span><br><span class=\"line\">        openVideo();</span><br><span class=\"line\">        requestLayout();</span><br><span class=\"line\">        invalidate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">stopPlayback</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mMediaPlayer != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            mMediaPlayer.stop();</span><br><span class=\"line\">            mMediaPlayer.release();</span><br><span class=\"line\">            mMediaPlayer = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            mCurrentState = STATE_IDLE;</span><br><span class=\"line\">            mTargetState  = STATE_IDLE;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mShouldRequestAudioFocus) &#123;</span><br><span class=\"line\">                AudioManager am = (AudioManager) getContext().getApplicationContext().getSystemService(Context.AUDIO_SERVICE);</span><br><span class=\"line\">                am.abandonAudioFocus(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        clearSurface();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Clears the surface texture by attaching a GL context and clearing it.</span></span><br><span class=\"line\"><span class=\"comment\">     * Code taken from &lt;a href=\"http://stackoverflow.com/a/31582209\"&gt;Hugo Gresse's answer on stackoverflow.com&lt;/a&gt;.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">clearSurface</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mSurface == <span class=\"keyword\">null</span> || Build.VERSION.SDK_INT &lt; Build.VERSION_CODES.JELLY_BEAN) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        EGL10 egl = (EGL10) EGLContext.getEGL();</span><br><span class=\"line\">        EGLDisplay display = egl.eglGetDisplay(EGL10.EGL_DEFAULT_DISPLAY);</span><br><span class=\"line\">        egl.eglInitialize(display, <span class=\"keyword\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] attribList = &#123;</span><br><span class=\"line\">                EGL10.EGL_RED_SIZE, <span class=\"number\">8</span>,</span><br><span class=\"line\">                EGL10.EGL_GREEN_SIZE, <span class=\"number\">8</span>,</span><br><span class=\"line\">                EGL10.EGL_BLUE_SIZE, <span class=\"number\">8</span>,</span><br><span class=\"line\">                EGL10.EGL_ALPHA_SIZE, <span class=\"number\">8</span>,</span><br><span class=\"line\">                EGL10.EGL_RENDERABLE_TYPE, EGL10.EGL_WINDOW_BIT,</span><br><span class=\"line\">                EGL10.EGL_NONE, <span class=\"number\">0</span>,      <span class=\"comment\">// placeholder for recordable [@-3]</span></span><br><span class=\"line\">                EGL10.EGL_NONE</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">        EGLConfig[] configs = <span class=\"keyword\">new</span> EGLConfig[<span class=\"number\">1</span>];</span><br><span class=\"line\">        <span class=\"keyword\">int</span>[] numConfigs = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[<span class=\"number\">1</span>];</span><br><span class=\"line\">        egl.eglChooseConfig(display, attribList, configs, configs.length, numConfigs);</span><br><span class=\"line\">        EGLConfig config = configs[<span class=\"number\">0</span>];</span><br><span class=\"line\">        EGLContext context = egl.eglCreateContext(display, config, EGL10.EGL_NO_CONTEXT, <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;</span><br><span class=\"line\">                <span class=\"number\">12440</span>, <span class=\"number\">2</span>, EGL10.EGL_NONE</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        EGLSurface eglSurface = egl.eglCreateWindowSurface(display, config, mSurface, <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[]&#123;</span><br><span class=\"line\">                EGL10.EGL_NONE</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        egl.eglMakeCurrent(display, eglSurface, eglSurface, context);</span><br><span class=\"line\">        GLES20.glClearColor(<span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        GLES20.glClear(GLES20.GL_COLOR_BUFFER_BIT);</span><br><span class=\"line\">        egl.eglSwapBuffers(display, eglSurface);</span><br><span class=\"line\">        egl.eglDestroySurface(display, eglSurface);</span><br><span class=\"line\">        egl.eglMakeCurrent(display, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_SURFACE, EGL10.EGL_NO_CONTEXT);</span><br><span class=\"line\">        egl.eglDestroyContext(display, context);</span><br><span class=\"line\">        egl.eglTerminate(display);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">openVideo</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mUri == <span class=\"keyword\">null</span> || mSurface == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// not ready for playback just yet, will try again later</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// we shouldn't clear the target state, because somebody might have</span></span><br><span class=\"line\">        <span class=\"comment\">// called start() previously</span></span><br><span class=\"line\">        release(<span class=\"keyword\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mShouldRequestAudioFocus) &#123;</span><br><span class=\"line\">            AudioManager am = (AudioManager) getContext().getApplicationContext().getSystemService(Context.AUDIO_SERVICE);</span><br><span class=\"line\">            am.requestAudioFocus(<span class=\"keyword\">null</span>, AudioManager.STREAM_MUSIC, AudioManager.AUDIOFOCUS_GAIN);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            mMediaPlayer = <span class=\"keyword\">new</span> MediaPlayer();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mAudioSession != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                mMediaPlayer.setAudioSessionId(mAudioSession);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                mAudioSession = mMediaPlayer.getAudioSessionId();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            mMediaPlayer.setOnPreparedListener(mPreparedListener);</span><br><span class=\"line\">            mMediaPlayer.setOnVideoSizeChangedListener(mSizeChangedListener);</span><br><span class=\"line\">            mMediaPlayer.setOnCompletionListener(mCompletionListener);</span><br><span class=\"line\">            mMediaPlayer.setOnErrorListener(mErrorListener);</span><br><span class=\"line\">            mMediaPlayer.setOnInfoListener(mInfoListener);</span><br><span class=\"line\">            mMediaPlayer.setOnBufferingUpdateListener(mBufferingUpdateListener);</span><br><span class=\"line\">            mCurrentBufferPercentage = <span class=\"number\">0</span>;</span><br><span class=\"line\">            mMediaPlayer.setDataSource(getContext().getApplicationContext(), mUri, mHeaders);</span><br><span class=\"line\">            mMediaPlayer.setSurface(mSurface);</span><br><span class=\"line\">            mMediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);</span><br><span class=\"line\">            mMediaPlayer.setScreenOnWhilePlaying(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            mMediaPlayer.prepareAsync();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// we don't set the target state here either, but preserve the</span></span><br><span class=\"line\">            <span class=\"comment\">// target state that was there before.</span></span><br><span class=\"line\">            mCurrentState = STATE_PREPARING;</span><br><span class=\"line\">            attachMediaController();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException ex) &#123;</span><br><span class=\"line\">            Log.w(TAG, <span class=\"string\">\"Unable to open content: \"</span> + mUri, ex);</span><br><span class=\"line\">            mCurrentState = STATE_ERROR;</span><br><span class=\"line\">            mTargetState = STATE_ERROR;</span><br><span class=\"line\">            mErrorListener.onError(mMediaPlayer, MediaPlayer.MEDIA_ERROR_UNKNOWN, <span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IllegalArgumentException ex) &#123;</span><br><span class=\"line\">            Log.w(TAG, <span class=\"string\">\"Unable to open content: \"</span> + mUri, ex);</span><br><span class=\"line\">            mCurrentState = STATE_ERROR;</span><br><span class=\"line\">            mTargetState = STATE_ERROR;</span><br><span class=\"line\">            mErrorListener.onError(mMediaPlayer, MediaPlayer.MEDIA_ERROR_UNKNOWN, <span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setMediaController</span><span class=\"params\">(MediaController controller)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            mMediaController.hide();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        mMediaController = controller;</span><br><span class=\"line\">        attachMediaController();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">attachMediaController</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mMediaPlayer != <span class=\"keyword\">null</span> &amp;&amp; mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            mMediaController.setMediaPlayer(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">            View anchorView = <span class=\"keyword\">this</span>.getParent() <span class=\"keyword\">instanceof</span> View ?</span><br><span class=\"line\">                    (View)<span class=\"keyword\">this</span>.getParent() : <span class=\"keyword\">this</span>;</span><br><span class=\"line\">            mMediaController.setAnchorView(anchorView);</span><br><span class=\"line\">            mMediaController.setEnabled(isInPlaybackState());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    MediaPlayer.OnVideoSizeChangedListener mSizeChangedListener =</span><br><span class=\"line\">            <span class=\"keyword\">new</span> MediaPlayer.OnVideoSizeChangedListener() &#123;</span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onVideoSizeChanged</span><span class=\"params\">(MediaPlayer mp, <span class=\"keyword\">int</span> width, <span class=\"keyword\">int</span> height)</span> </span>&#123;</span><br><span class=\"line\">                    mVideoWidth = mp.getVideoWidth();</span><br><span class=\"line\">                    mVideoHeight = mp.getVideoHeight();</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mVideoWidth != <span class=\"number\">0</span> &amp;&amp; mVideoHeight != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                        getSurfaceTexture().setDefaultBufferSize(mVideoWidth, mVideoHeight);</span><br><span class=\"line\">                        requestLayout();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    MediaPlayer.OnPreparedListener mPreparedListener = <span class=\"keyword\">new</span> MediaPlayer.OnPreparedListener() &#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onPrepared</span><span class=\"params\">(MediaPlayer mp)</span> </span>&#123;</span><br><span class=\"line\">            mCurrentState = STATE_PREPARED;</span><br><span class=\"line\"></span><br><span class=\"line\">            mCanPause = mCanSeekBack = mCanSeekForward = <span class=\"keyword\">true</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mOnPreparedListener != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                mOnPreparedListener.onPrepared(mMediaPlayer);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                mMediaController.setEnabled(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            mVideoWidth = mp.getVideoWidth();</span><br><span class=\"line\">            mVideoHeight = mp.getVideoHeight();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"keyword\">int</span> seekToPosition = mSeekWhenPrepared;  <span class=\"comment\">// mSeekWhenPrepared may be changed after seekTo() call</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (seekToPosition != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                seekTo(seekToPosition);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mVideoWidth != <span class=\"number\">0</span> &amp;&amp; mVideoHeight != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//Log.i(\"@@@@\", \"video size: \" + mVideoWidth +\"/\"+ mVideoHeight);</span></span><br><span class=\"line\">                getSurfaceTexture().setDefaultBufferSize(mVideoWidth, mVideoHeight);</span><br><span class=\"line\">                <span class=\"comment\">// We won't get a \"surface changed\" callback if the surface is already the right size, so</span></span><br><span class=\"line\">                <span class=\"comment\">// start the video here instead of in the callback.</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (mTargetState == STATE_PLAYING) &#123;</span><br><span class=\"line\">                    start();</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        mMediaController.show();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (!isPlaying() &amp;&amp;</span><br><span class=\"line\">                        (seekToPosition != <span class=\"number\">0</span> || getCurrentPosition() &gt; <span class=\"number\">0</span>)) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        <span class=\"comment\">// Show the media controls when we're paused into a video and make 'em stick.</span></span><br><span class=\"line\">                        mMediaController.show(<span class=\"number\">0</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                <span class=\"comment\">// We don't know the video size yet, but should start anyway.</span></span><br><span class=\"line\">                <span class=\"comment\">// The video size might be reported to us later.</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (mTargetState == STATE_PLAYING) &#123;</span><br><span class=\"line\">                    start();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> MediaPlayer.OnCompletionListener mCompletionListener =</span><br><span class=\"line\">            <span class=\"keyword\">new</span> MediaPlayer.OnCompletionListener() &#123;</span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onCompletion</span><span class=\"params\">(MediaPlayer mp)</span> </span>&#123;</span><br><span class=\"line\">                    mCurrentState = STATE_PLAYBACK_COMPLETED;</span><br><span class=\"line\">                    mTargetState = STATE_PLAYBACK_COMPLETED;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        mMediaController.hide();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mOnCompletionListener != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        mOnCompletionListener.onCompletion(mMediaPlayer);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> MediaPlayer.OnInfoListener mInfoListener =</span><br><span class=\"line\">            <span class=\"keyword\">new</span> MediaPlayer.OnInfoListener() &#123;</span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"keyword\">boolean</span> <span class=\"title\">onInfo</span><span class=\"params\">(MediaPlayer mp, <span class=\"keyword\">int</span> arg1, <span class=\"keyword\">int</span> arg2)</span> </span>&#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mOnInfoListener != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        mOnInfoListener.onInfo(mp, arg1, arg2);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> MediaPlayer.OnErrorListener mErrorListener =</span><br><span class=\"line\">            <span class=\"keyword\">new</span> MediaPlayer.OnErrorListener() &#123;</span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onError</span><span class=\"params\">(MediaPlayer mp, <span class=\"keyword\">int</span> framework_err, <span class=\"keyword\">int</span> impl_err)</span> </span>&#123;</span><br><span class=\"line\">                    Log.d(TAG, <span class=\"string\">\"Error: \"</span> + framework_err + <span class=\"string\">\",\"</span> + impl_err);</span><br><span class=\"line\">                    mCurrentState = STATE_ERROR;</span><br><span class=\"line\">                    mTargetState = STATE_ERROR;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        mMediaController.hide();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">/* If an error handler has been supplied, use it and finish. */</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (mOnErrorListener != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (mOnErrorListener.onError(mMediaPlayer, framework_err, impl_err)) &#123;</span><br><span class=\"line\">                            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"comment\">/* Otherwise, pop up an error dialog so the user knows that</span></span><br><span class=\"line\"><span class=\"comment\">                     * something bad has happened. Only try and pop up the dialog</span></span><br><span class=\"line\"><span class=\"comment\">                     * if we're attached to a window. When we're going away and no</span></span><br><span class=\"line\"><span class=\"comment\">                     * longer have a window, don't bother showing the user an error.</span></span><br><span class=\"line\"><span class=\"comment\">                     */</span></span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (getWindowToken() != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        Resources r = getContext().getResources();</span><br><span class=\"line\">                        <span class=\"keyword\">int</span> messageId;</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (framework_err == MediaPlayer.MEDIA_ERROR_NOT_VALID_FOR_PROGRESSIVE_PLAYBACK) &#123;</span><br><span class=\"line\">                            messageId = android.R.string.VideoView_error_text_invalid_progressive_playback;</span><br><span class=\"line\">                        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                            messageId = android.R.string.VideoView_error_text_unknown;</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                        <span class=\"keyword\">new</span> AlertDialog.Builder(getContext())</span><br><span class=\"line\">                                .setMessage(messageId)</span><br><span class=\"line\">                                .setPositiveButton(android.R.string.VideoView_error_button,</span><br><span class=\"line\">                                        <span class=\"keyword\">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class=\"line\">                                            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(DialogInterface dialog, <span class=\"keyword\">int</span> whichButton)</span> </span>&#123;</span><br><span class=\"line\">                                                <span class=\"comment\">/* If we get here, there is no onError listener, so</span></span><br><span class=\"line\"><span class=\"comment\">                                                 * at least inform them that the video is over.</span></span><br><span class=\"line\"><span class=\"comment\">                                                 */</span></span><br><span class=\"line\">                                                <span class=\"keyword\">if</span> (mOnCompletionListener != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                                                    mOnCompletionListener.onCompletion(mMediaPlayer);</span><br><span class=\"line\">                                                &#125;</span><br><span class=\"line\">                                            &#125;</span><br><span class=\"line\">                                        &#125;)</span><br><span class=\"line\">                                .setCancelable(<span class=\"keyword\">false</span>)</span><br><span class=\"line\">                                .show();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> MediaPlayer.OnBufferingUpdateListener mBufferingUpdateListener =</span><br><span class=\"line\">            <span class=\"keyword\">new</span> MediaPlayer.OnBufferingUpdateListener() &#123;</span><br><span class=\"line\">                <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onBufferingUpdate</span><span class=\"params\">(MediaPlayer mp, <span class=\"keyword\">int</span> percent)</span> </span>&#123;</span><br><span class=\"line\">                    mCurrentBufferPercentage = percent;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Register a callback to be invoked when the media file</span></span><br><span class=\"line\"><span class=\"comment\">     * is loaded and ready to go.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> l The callback that will be run</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOnPreparedListener</span><span class=\"params\">(MediaPlayer.OnPreparedListener l)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        mOnPreparedListener = l;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Register a callback to be invoked when the end of a media file</span></span><br><span class=\"line\"><span class=\"comment\">     * has been reached during playback.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> l The callback that will be run</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOnCompletionListener</span><span class=\"params\">(OnCompletionListener l)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        mOnCompletionListener = l;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Register a callback to be invoked when an error occurs</span></span><br><span class=\"line\"><span class=\"comment\">     * during playback or setup.  If no listener is specified,</span></span><br><span class=\"line\"><span class=\"comment\">     * or if the listener returned false, TextureVideoView will inform</span></span><br><span class=\"line\"><span class=\"comment\">     * the user of any errors.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> l The callback that will be run</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOnErrorListener</span><span class=\"params\">(OnErrorListener l)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        mOnErrorListener = l;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Register a callback to be invoked when an informational event</span></span><br><span class=\"line\"><span class=\"comment\">     * occurs during playback or setup.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> l The callback that will be run</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOnInfoListener</span><span class=\"params\">(OnInfoListener l)</span> </span>&#123;</span><br><span class=\"line\">        mOnInfoListener = l;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    TextureView.SurfaceTextureListener mSurfaceTextureListener = <span class=\"keyword\">new</span> SurfaceTextureListener()</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onSurfaceTextureSizeChanged</span><span class=\"params\">(<span class=\"keyword\">final</span> SurfaceTexture surface, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> width, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> height)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">boolean</span> isValidState =  (mTargetState == STATE_PLAYING);</span><br><span class=\"line\">            <span class=\"keyword\">boolean</span> hasValidSize = (width &gt; <span class=\"number\">0</span> &amp;&amp; height &gt; <span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mMediaPlayer != <span class=\"keyword\">null</span> &amp;&amp; isValidState &amp;&amp; hasValidSize) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (mSeekWhenPrepared != <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                    seekTo(mSeekWhenPrepared);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                start();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onSurfaceTextureAvailable</span><span class=\"params\">(<span class=\"keyword\">final</span> SurfaceTexture surface, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> width, <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> height)</span> </span>&#123;</span><br><span class=\"line\">            mSurface = <span class=\"keyword\">new</span> Surface(surface);</span><br><span class=\"line\">            openVideo();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onSurfaceTextureDestroyed</span><span class=\"params\">(<span class=\"keyword\">final</span> SurfaceTexture surface)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// after we return from this we can't use the surface any more</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mSurface != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                mSurface.release();</span><br><span class=\"line\">                mSurface = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mMediaController != <span class=\"keyword\">null</span>) mMediaController.hide();</span><br><span class=\"line\">            release(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onSurfaceTextureUpdated</span><span class=\"params\">(<span class=\"keyword\">final</span> SurfaceTexture surface)</span> </span>&#123;</span><br><span class=\"line\">            <span class=\"comment\">// do nothing</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">     * release the media player in any state</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">release</span><span class=\"params\">(<span class=\"keyword\">boolean</span> cleartargetstate)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mMediaPlayer != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            mMediaPlayer.reset();</span><br><span class=\"line\">            mMediaPlayer.release();</span><br><span class=\"line\">            mMediaPlayer = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            mCurrentState = STATE_IDLE;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (cleartargetstate) &#123;</span><br><span class=\"line\">                mTargetState  = STATE_IDLE;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mShouldRequestAudioFocus) &#123;</span><br><span class=\"line\">                AudioManager am = (AudioManager) getContext().getApplicationContext().getSystemService(Context.AUDIO_SERVICE);</span><br><span class=\"line\">                am.abandonAudioFocus(<span class=\"keyword\">null</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouchEvent</span><span class=\"params\">(MotionEvent ev)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isInPlaybackState() &amp;&amp; mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            toggleMediaControlsVisiblity();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTrackballEvent</span><span class=\"params\">(MotionEvent ev)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isInPlaybackState() &amp;&amp; mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            toggleMediaControlsVisiblity();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onKeyDown</span><span class=\"params\">(<span class=\"keyword\">int</span> keyCode, KeyEvent event)</span></span></span><br><span class=\"line\"><span class=\"function\">    </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> isKeyCodeSupported = keyCode != KeyEvent.KEYCODE_BACK &amp;&amp;</span><br><span class=\"line\">                keyCode != KeyEvent.KEYCODE_VOLUME_UP &amp;&amp;</span><br><span class=\"line\">                keyCode != KeyEvent.KEYCODE_VOLUME_DOWN &amp;&amp;</span><br><span class=\"line\">                keyCode != KeyEvent.KEYCODE_VOLUME_MUTE &amp;&amp;</span><br><span class=\"line\">                keyCode != KeyEvent.KEYCODE_MENU &amp;&amp;</span><br><span class=\"line\">                keyCode != KeyEvent.KEYCODE_CALL &amp;&amp;</span><br><span class=\"line\">                keyCode != KeyEvent.KEYCODE_ENDCALL;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isInPlaybackState() &amp;&amp; isKeyCodeSupported &amp;&amp; mMediaController != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (keyCode == KeyEvent.KEYCODE_HEADSETHOOK ||</span><br><span class=\"line\">                    keyCode == KeyEvent.KEYCODE_MEDIA_PLAY_PAUSE) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (mMediaPlayer.isPlaying()) &#123;</span><br><span class=\"line\">                    pause();</span><br><span class=\"line\">                    mMediaController.show();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    start();</span><br><span class=\"line\">                    mMediaController.hide();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (keyCode == KeyEvent.KEYCODE_MEDIA_PLAY) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (!mMediaPlayer.isPlaying()) &#123;</span><br><span class=\"line\">                    start();</span><br><span class=\"line\">                    mMediaController.hide();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (keyCode == KeyEvent.KEYCODE_MEDIA_STOP</span><br><span class=\"line\">                    || keyCode == KeyEvent.KEYCODE_MEDIA_PAUSE) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (mMediaPlayer.isPlaying()) &#123;</span><br><span class=\"line\">                    pause();</span><br><span class=\"line\">                    mMediaController.show();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                toggleMediaControlsVisiblity();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">super</span>.onKeyDown(keyCode, event);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">toggleMediaControlsVisiblity</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mMediaController.isShowing()) &#123;</span><br><span class=\"line\">            mMediaController.hide();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            mMediaController.show();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">start</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isInPlaybackState()) &#123;</span><br><span class=\"line\">            mMediaPlayer.start();</span><br><span class=\"line\">            mCurrentState = STATE_PLAYING;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        mTargetState = STATE_PLAYING;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">pause</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isInPlaybackState()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mMediaPlayer.isPlaying()) &#123;</span><br><span class=\"line\">                mMediaPlayer.pause();</span><br><span class=\"line\">                mCurrentState = STATE_PAUSED;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        mTargetState = STATE_PAUSED;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">suspend</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        release(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">resume</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        openVideo();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getDuration</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isInPlaybackState()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> mMediaPlayer.getDuration();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getCurrentPosition</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isInPlaybackState()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> mMediaPlayer.getCurrentPosition();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">seekTo</span><span class=\"params\">(<span class=\"keyword\">int</span> msec)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isInPlaybackState()) &#123;</span><br><span class=\"line\">            mMediaPlayer.seekTo(msec);</span><br><span class=\"line\">            mSeekWhenPrepared = <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            mSeekWhenPrepared = msec;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isPlaying</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> isInPlaybackState() &amp;&amp; mMediaPlayer.isPlaying();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getBufferPercentage</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mMediaPlayer != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> mCurrentBufferPercentage;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isInPlaybackState</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (mMediaPlayer != <span class=\"keyword\">null</span> &amp;&amp;</span><br><span class=\"line\">                mCurrentState != STATE_ERROR &amp;&amp;</span><br><span class=\"line\">                mCurrentState != STATE_IDLE &amp;&amp;</span><br><span class=\"line\">                mCurrentState != STATE_PREPARING);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">canPause</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mCanPause;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">canSeekBackward</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mCanSeekBack;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">canSeekForward</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mCanSeekForward;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getAudioSessionId</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mAudioSession == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            MediaPlayer foo = <span class=\"keyword\">new</span> MediaPlayer();</span><br><span class=\"line\">            mAudioSession = foo.getAudioSessionId();</span><br><span class=\"line\">            foo.release();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mAudioSession;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Sets the request audio focus flag. If enabled, &#123;<span class=\"doctag\">@link</span> TextureVideoView&#125; will request</span></span><br><span class=\"line\"><span class=\"comment\">     * audio focus when opening a video by calling &#123;<span class=\"doctag\">@link</span> AudioManager&#125;. This flag</span></span><br><span class=\"line\"><span class=\"comment\">     * should be set before calling &#123;<span class=\"doctag\">@link</span> TextureVideoView#setVideoPath(String)&#125; or</span></span><br><span class=\"line\"><span class=\"comment\">     * &#123;<span class=\"doctag\">@link</span> TextureVideoView#setVideoURI(Uri)&#125;. By default, &#123;<span class=\"doctag\">@link</span> TextureVideoView&#125; will</span></span><br><span class=\"line\"><span class=\"comment\">     * request audio focus.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> shouldRequestAudioFocus  If &#123;<span class=\"doctag\">@code</span> true&#125;, &#123;<span class=\"doctag\">@link</span> TextureVideoView&#125; will request</span></span><br><span class=\"line\"><span class=\"comment\">     * audio focus before opening a video, else audio focus is not requested</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setShouldRequestAudioFocus</span><span class=\"params\">(<span class=\"keyword\">boolean</span> shouldRequestAudioFocus)</span> </span>&#123;</span><br><span class=\"line\">        mShouldRequestAudioFocus = shouldRequestAudioFocus;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Returns the current state of the audio focus request flag.</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> &#123;<span class=\"doctag\">@code</span> true&#125;, if &#123;<span class=\"doctag\">@link</span> TextureVideoView&#125; will request</span></span><br><span class=\"line\"><span class=\"comment\">     * audio focus before opening a video, else &#123;<span class=\"doctag\">@code</span> false&#125;</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">shouldRequestAudioFocus</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mShouldRequestAudioFocus;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用时调用setVideoPath传入视频的地址即可，其他方法也和VideoView大体一致。</p>"},{"title":"属性动画大集合","date":"2017-11-12T04:18:15.000Z","_content":"\n### 属性动画思维导图\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsonhp7d3dj21k31431a2.jpg)\n<!-- more -->\n\n### ViewPropertyAnimator\n1. 动画带by和不带by的不同\n    - 带有 By() 后缀的是增量版本的方法，每次调用会在控件在原有值的基础上改变by方法中的数。\n### ObjectAnimator\n1. 如果是自定义控件，需要添加 setter / getter 方法\n2. 用 ObjectAnimator.ofXXX() 创建 ObjectAnimator 对象；\n### Interpolator\n1. AccelerateDecelerateInterpolator\n    * 先加速再减速\n2. LinearInterpolator\n    * 匀速\n3. AccelerateInterpolator\n    * 加速\n4. DecelerateInterpolator\n    * 减速\n5. AnticipateInterpolator\n    * 先回拉一下再进行正常动画轨迹\n6. OvershootInterpolator\n    * 动画会超过目标值一些，然后再弹回来\n7. AnticipateOvershootInterpolator\n    * 开始前回拉，最后超过一些然后回弹\n8. BounceInterpolator\n    * 在目标值处弹跳\n9. CycleInterpolator\n    * 回弹的次数由曲线的周期决定\n10. PathInterpolator\n    * 定制的方式是使用一个 Path 对象来绘制出你要的动画完成度 / 时间完成度曲线\n11. FastOutLinearInInterpolator\n    * 贝塞尔曲线加速运动\n12. FastOutSlowInInterpolator\n    * 贝塞尔曲线先加速再减速\n13. LinearOutSlowInInterpolator\n    * 贝塞尔曲线持续减速\n##$ ValueAnimator\n1. ViewPropertyAnimator 和 ObjectAnimator 的内部实现其实都是 ValueAnimator，ObjectAnimator 更是本来就是 ValueAnimator 的子类\n### 概要: 通用功能\n1. setDuration\n2. setInterpolator\n### 设置监听器\n1. setListener\n    * onAnimationStart\n    * onAnimationEnd\n    * onAnimationCancel\n    * 就算动画被取消，onAnimationEnd() 也会被调用，onAnimationCancel() 会先于 onAnimationEnd() 被调用\n2. setUpdateListener\n    * onAnimationUpdate\n3. withStartAction/EndAction\n    * withStartAction() / withEndAction() 是一次性的，在动画执行结束后就自动弃掉了，就算之后再重用 ViewPropertyAnimator 来做别的动画，用它们设置的回调也不会再被调用。而  set/addListener() 所设置的 AnimatorListener 是持续有效的，当动画重复执行时，回调总会被调用。\n    * withEndAction() 设置的回调只有在动画正常结束时才会被调用，而在动画被取消时不会被执行。这点和 AnimatorListener.onAnimationEnd() 的行为是不一致的。\n### 概要: 移除监听\n    * set[Update]Listener(null)\n### PropertyValuesHolder\n1. 直接用连写的方式来在一个动画中同时改变多个属性\n### 设置监听器\n1. addListener\n    * onAnimationStart\n    * onAnimationEnd\n    *  onAnimationCancel\n    * onAnimationRepeat\n2. addUpdateListener\n    * onAnimationUpdate\n3. addPauseListener\n4. 概要: 移除监听\n    * remove[Update/Pause]Listener()\n### TypeEvaluator\n1. ArgbEvaluator\n2. 自定义 Evaluator\n3. PointFEvaluator\n    * ofObject()\n4. ofMultiFloat\n5. ofMultiInt\n### AnimatorSet\n### PropertyValuesHolder\n### PropertyValuesHolders.ofKeyframe() 把同一个属性拆分\n","source":"_posts/自定义控件-属性动画.md","raw":"---\ntitle: 属性动画大集合\ntags:\n  - 自定义控件\n  - 属性动画\ncategories:\n  - 自定义控件\ndate: 2017-11-12 12:18:15\n---\n\n### 属性动画思维导图\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsonhp7d3dj21k31431a2.jpg)\n<!-- more -->\n\n### ViewPropertyAnimator\n1. 动画带by和不带by的不同\n    - 带有 By() 后缀的是增量版本的方法，每次调用会在控件在原有值的基础上改变by方法中的数。\n### ObjectAnimator\n1. 如果是自定义控件，需要添加 setter / getter 方法\n2. 用 ObjectAnimator.ofXXX() 创建 ObjectAnimator 对象；\n### Interpolator\n1. AccelerateDecelerateInterpolator\n    * 先加速再减速\n2. LinearInterpolator\n    * 匀速\n3. AccelerateInterpolator\n    * 加速\n4. DecelerateInterpolator\n    * 减速\n5. AnticipateInterpolator\n    * 先回拉一下再进行正常动画轨迹\n6. OvershootInterpolator\n    * 动画会超过目标值一些，然后再弹回来\n7. AnticipateOvershootInterpolator\n    * 开始前回拉，最后超过一些然后回弹\n8. BounceInterpolator\n    * 在目标值处弹跳\n9. CycleInterpolator\n    * 回弹的次数由曲线的周期决定\n10. PathInterpolator\n    * 定制的方式是使用一个 Path 对象来绘制出你要的动画完成度 / 时间完成度曲线\n11. FastOutLinearInInterpolator\n    * 贝塞尔曲线加速运动\n12. FastOutSlowInInterpolator\n    * 贝塞尔曲线先加速再减速\n13. LinearOutSlowInInterpolator\n    * 贝塞尔曲线持续减速\n##$ ValueAnimator\n1. ViewPropertyAnimator 和 ObjectAnimator 的内部实现其实都是 ValueAnimator，ObjectAnimator 更是本来就是 ValueAnimator 的子类\n### 概要: 通用功能\n1. setDuration\n2. setInterpolator\n### 设置监听器\n1. setListener\n    * onAnimationStart\n    * onAnimationEnd\n    * onAnimationCancel\n    * 就算动画被取消，onAnimationEnd() 也会被调用，onAnimationCancel() 会先于 onAnimationEnd() 被调用\n2. setUpdateListener\n    * onAnimationUpdate\n3. withStartAction/EndAction\n    * withStartAction() / withEndAction() 是一次性的，在动画执行结束后就自动弃掉了，就算之后再重用 ViewPropertyAnimator 来做别的动画，用它们设置的回调也不会再被调用。而  set/addListener() 所设置的 AnimatorListener 是持续有效的，当动画重复执行时，回调总会被调用。\n    * withEndAction() 设置的回调只有在动画正常结束时才会被调用，而在动画被取消时不会被执行。这点和 AnimatorListener.onAnimationEnd() 的行为是不一致的。\n### 概要: 移除监听\n    * set[Update]Listener(null)\n### PropertyValuesHolder\n1. 直接用连写的方式来在一个动画中同时改变多个属性\n### 设置监听器\n1. addListener\n    * onAnimationStart\n    * onAnimationEnd\n    *  onAnimationCancel\n    * onAnimationRepeat\n2. addUpdateListener\n    * onAnimationUpdate\n3. addPauseListener\n4. 概要: 移除监听\n    * remove[Update/Pause]Listener()\n### TypeEvaluator\n1. ArgbEvaluator\n2. 自定义 Evaluator\n3. PointFEvaluator\n    * ofObject()\n4. ofMultiFloat\n5. ofMultiInt\n### AnimatorSet\n### PropertyValuesHolder\n### PropertyValuesHolders.ofKeyframe() 把同一个属性拆分\n","slug":"自定义控件-属性动画","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv54a001r58ughbd596d0","content":"<h3 id=\"属性动画思维导图\"><a class=\"header-anchor\" href=\"#属性动画思维导图\">¶</a>属性动画思维导图</h3>\n<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsonhp7d3dj21k31431a2.jpg\" alt=\"\"></p>\n<a id=\"more\"></a>\n<h3 id=\"viewpropertyanimator\"><a class=\"header-anchor\" href=\"#viewpropertyanimator\">¶</a>ViewPropertyAnimator</h3>\n<ol>\n<li>动画带by和不带by的不同\n<ul>\n<li>带有 By() 后缀的是增量版本的方法，每次调用会在控件在原有值的基础上改变by方法中的数。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"objectanimator\"><a class=\"header-anchor\" href=\"#objectanimator\">¶</a>ObjectAnimator</h3>\n<ol>\n<li>如果是自定义控件，需要添加 setter / getter 方法</li>\n<li>用 ObjectAnimator.ofXXX() 创建 ObjectAnimator 对象；</li>\n</ol>\n<h3 id=\"interpolator\"><a class=\"header-anchor\" href=\"#interpolator\">¶</a>Interpolator</h3>\n<ol>\n<li>AccelerateDecelerateInterpolator\n<ul>\n<li>先加速再减速</li>\n</ul>\n</li>\n<li>LinearInterpolator\n<ul>\n<li>匀速</li>\n</ul>\n</li>\n<li>AccelerateInterpolator\n<ul>\n<li>加速</li>\n</ul>\n</li>\n<li>DecelerateInterpolator\n<ul>\n<li>减速</li>\n</ul>\n</li>\n<li>AnticipateInterpolator\n<ul>\n<li>先回拉一下再进行正常动画轨迹</li>\n</ul>\n</li>\n<li>OvershootInterpolator\n<ul>\n<li>动画会超过目标值一些，然后再弹回来</li>\n</ul>\n</li>\n<li>AnticipateOvershootInterpolator\n<ul>\n<li>开始前回拉，最后超过一些然后回弹</li>\n</ul>\n</li>\n<li>BounceInterpolator\n<ul>\n<li>在目标值处弹跳</li>\n</ul>\n</li>\n<li>CycleInterpolator\n<ul>\n<li>回弹的次数由曲线的周期决定</li>\n</ul>\n</li>\n<li>PathInterpolator\n<ul>\n<li>定制的方式是使用一个 Path 对象来绘制出你要的动画完成度 / 时间完成度曲线</li>\n</ul>\n</li>\n<li>FastOutLinearInInterpolator\n<ul>\n<li>贝塞尔曲线加速运动</li>\n</ul>\n</li>\n<li>FastOutSlowInInterpolator\n<ul>\n<li>贝塞尔曲线先加速再减速</li>\n</ul>\n</li>\n<li>LinearOutSlowInInterpolator\n<ul>\n<li>贝塞尔曲线持续减速\n##$ ValueAnimator</li>\n</ul>\n</li>\n<li>ViewPropertyAnimator 和 ObjectAnimator 的内部实现其实都是 ValueAnimator，ObjectAnimator 更是本来就是 ValueAnimator 的子类</li>\n</ol>\n<h3 id=\"概要-通用功能\"><a class=\"header-anchor\" href=\"#概要-通用功能\">¶</a>概要: 通用功能</h3>\n<ol>\n<li>setDuration</li>\n<li>setInterpolator</li>\n</ol>\n<h3 id=\"设置监听器\"><a class=\"header-anchor\" href=\"#设置监听器\">¶</a>设置监听器</h3>\n<ol>\n<li>setListener\n<ul>\n<li>onAnimationStart</li>\n<li>onAnimationEnd</li>\n<li>onAnimationCancel</li>\n<li>就算动画被取消，onAnimationEnd() 也会被调用，onAnimationCancel() 会先于 onAnimationEnd() 被调用</li>\n</ul>\n</li>\n<li>setUpdateListener\n<ul>\n<li>onAnimationUpdate</li>\n</ul>\n</li>\n<li>withStartAction/EndAction\n<ul>\n<li>withStartAction() / withEndAction() 是一次性的，在动画执行结束后就自动弃掉了，就算之后再重用 ViewPropertyAnimator 来做别的动画，用它们设置的回调也不会再被调用。而  set/addListener() 所设置的 AnimatorListener 是持续有效的，当动画重复执行时，回调总会被调用。</li>\n<li>withEndAction() 设置的回调只有在动画正常结束时才会被调用，而在动画被取消时不会被执行。这点和 AnimatorListener.onAnimationEnd() 的行为是不一致的。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"概要-移除监听\"><a class=\"header-anchor\" href=\"#概要-移除监听\">¶</a>概要: 移除监听</h3>\n<pre><code>* set[Update]Listener(null)\n</code></pre>\n<h3 id=\"propertyvaluesholder\"><a class=\"header-anchor\" href=\"#propertyvaluesholder\">¶</a>PropertyValuesHolder</h3>\n<ol>\n<li>直接用连写的方式来在一个动画中同时改变多个属性</li>\n</ol>\n<h3 id=\"设置监听器-v2\"><a class=\"header-anchor\" href=\"#设置监听器-v2\">¶</a>设置监听器</h3>\n<ol>\n<li>addListener\n<ul>\n<li>onAnimationStart</li>\n<li>onAnimationEnd</li>\n<li>onAnimationCancel</li>\n<li>onAnimationRepeat</li>\n</ul>\n</li>\n<li>addUpdateListener\n<ul>\n<li>onAnimationUpdate</li>\n</ul>\n</li>\n<li>addPauseListener</li>\n<li>概要: 移除监听\n<ul>\n<li>remove[Update/Pause]Listener()</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"typeevaluator\"><a class=\"header-anchor\" href=\"#typeevaluator\">¶</a>TypeEvaluator</h3>\n<ol>\n<li>ArgbEvaluator</li>\n<li>自定义 Evaluator</li>\n<li>PointFEvaluator\n<ul>\n<li>ofObject()</li>\n</ul>\n</li>\n<li>ofMultiFloat</li>\n<li>ofMultiInt</li>\n</ol>\n<h3 id=\"animatorset\"><a class=\"header-anchor\" href=\"#animatorset\">¶</a>AnimatorSet</h3>\n<h3 id=\"propertyvaluesholder-v2\"><a class=\"header-anchor\" href=\"#propertyvaluesholder-v2\">¶</a>PropertyValuesHolder</h3>\n<h3 id=\"propertyvaluesholders-ofkeyframe-把同一个属性拆分\"><a class=\"header-anchor\" href=\"#propertyvaluesholders-ofkeyframe-把同一个属性拆分\">¶</a>PropertyValuesHolders.ofKeyframe() 把同一个属性拆分</h3>\n","site":{"data":{}},"excerpt":"<h3 id=\"属性动画思维导图\"><a class=\"header-anchor\" href=\"#属性动画思维导图\">¶</a>属性动画思维导图</h3>\n<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsonhp7d3dj21k31431a2.jpg\" alt=\"\"></p>","more":"<h3 id=\"viewpropertyanimator\"><a class=\"header-anchor\" href=\"#viewpropertyanimator\">¶</a>ViewPropertyAnimator</h3>\n<ol>\n<li>动画带by和不带by的不同\n<ul>\n<li>带有 By() 后缀的是增量版本的方法，每次调用会在控件在原有值的基础上改变by方法中的数。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"objectanimator\"><a class=\"header-anchor\" href=\"#objectanimator\">¶</a>ObjectAnimator</h3>\n<ol>\n<li>如果是自定义控件，需要添加 setter / getter 方法</li>\n<li>用 ObjectAnimator.ofXXX() 创建 ObjectAnimator 对象；</li>\n</ol>\n<h3 id=\"interpolator\"><a class=\"header-anchor\" href=\"#interpolator\">¶</a>Interpolator</h3>\n<ol>\n<li>AccelerateDecelerateInterpolator\n<ul>\n<li>先加速再减速</li>\n</ul>\n</li>\n<li>LinearInterpolator\n<ul>\n<li>匀速</li>\n</ul>\n</li>\n<li>AccelerateInterpolator\n<ul>\n<li>加速</li>\n</ul>\n</li>\n<li>DecelerateInterpolator\n<ul>\n<li>减速</li>\n</ul>\n</li>\n<li>AnticipateInterpolator\n<ul>\n<li>先回拉一下再进行正常动画轨迹</li>\n</ul>\n</li>\n<li>OvershootInterpolator\n<ul>\n<li>动画会超过目标值一些，然后再弹回来</li>\n</ul>\n</li>\n<li>AnticipateOvershootInterpolator\n<ul>\n<li>开始前回拉，最后超过一些然后回弹</li>\n</ul>\n</li>\n<li>BounceInterpolator\n<ul>\n<li>在目标值处弹跳</li>\n</ul>\n</li>\n<li>CycleInterpolator\n<ul>\n<li>回弹的次数由曲线的周期决定</li>\n</ul>\n</li>\n<li>PathInterpolator\n<ul>\n<li>定制的方式是使用一个 Path 对象来绘制出你要的动画完成度 / 时间完成度曲线</li>\n</ul>\n</li>\n<li>FastOutLinearInInterpolator\n<ul>\n<li>贝塞尔曲线加速运动</li>\n</ul>\n</li>\n<li>FastOutSlowInInterpolator\n<ul>\n<li>贝塞尔曲线先加速再减速</li>\n</ul>\n</li>\n<li>LinearOutSlowInInterpolator\n<ul>\n<li>贝塞尔曲线持续减速\n##$ ValueAnimator</li>\n</ul>\n</li>\n<li>ViewPropertyAnimator 和 ObjectAnimator 的内部实现其实都是 ValueAnimator，ObjectAnimator 更是本来就是 ValueAnimator 的子类</li>\n</ol>\n<h3 id=\"概要-通用功能\"><a class=\"header-anchor\" href=\"#概要-通用功能\">¶</a>概要: 通用功能</h3>\n<ol>\n<li>setDuration</li>\n<li>setInterpolator</li>\n</ol>\n<h3 id=\"设置监听器\"><a class=\"header-anchor\" href=\"#设置监听器\">¶</a>设置监听器</h3>\n<ol>\n<li>setListener\n<ul>\n<li>onAnimationStart</li>\n<li>onAnimationEnd</li>\n<li>onAnimationCancel</li>\n<li>就算动画被取消，onAnimationEnd() 也会被调用，onAnimationCancel() 会先于 onAnimationEnd() 被调用</li>\n</ul>\n</li>\n<li>setUpdateListener\n<ul>\n<li>onAnimationUpdate</li>\n</ul>\n</li>\n<li>withStartAction/EndAction\n<ul>\n<li>withStartAction() / withEndAction() 是一次性的，在动画执行结束后就自动弃掉了，就算之后再重用 ViewPropertyAnimator 来做别的动画，用它们设置的回调也不会再被调用。而  set/addListener() 所设置的 AnimatorListener 是持续有效的，当动画重复执行时，回调总会被调用。</li>\n<li>withEndAction() 设置的回调只有在动画正常结束时才会被调用，而在动画被取消时不会被执行。这点和 AnimatorListener.onAnimationEnd() 的行为是不一致的。</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"概要-移除监听\"><a class=\"header-anchor\" href=\"#概要-移除监听\">¶</a>概要: 移除监听</h3>\n<pre><code>* set[Update]Listener(null)\n</code></pre>\n<h3 id=\"propertyvaluesholder\"><a class=\"header-anchor\" href=\"#propertyvaluesholder\">¶</a>PropertyValuesHolder</h3>\n<ol>\n<li>直接用连写的方式来在一个动画中同时改变多个属性</li>\n</ol>\n<h3 id=\"设置监听器-v2\"><a class=\"header-anchor\" href=\"#设置监听器-v2\">¶</a>设置监听器</h3>\n<ol>\n<li>addListener\n<ul>\n<li>onAnimationStart</li>\n<li>onAnimationEnd</li>\n<li>onAnimationCancel</li>\n<li>onAnimationRepeat</li>\n</ul>\n</li>\n<li>addUpdateListener\n<ul>\n<li>onAnimationUpdate</li>\n</ul>\n</li>\n<li>addPauseListener</li>\n<li>概要: 移除监听\n<ul>\n<li>remove[Update/Pause]Listener()</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"typeevaluator\"><a class=\"header-anchor\" href=\"#typeevaluator\">¶</a>TypeEvaluator</h3>\n<ol>\n<li>ArgbEvaluator</li>\n<li>自定义 Evaluator</li>\n<li>PointFEvaluator\n<ul>\n<li>ofObject()</li>\n</ul>\n</li>\n<li>ofMultiFloat</li>\n<li>ofMultiInt</li>\n</ol>\n<h3 id=\"animatorset\"><a class=\"header-anchor\" href=\"#animatorset\">¶</a>AnimatorSet</h3>\n<h3 id=\"propertyvaluesholder-v2\"><a class=\"header-anchor\" href=\"#propertyvaluesholder-v2\">¶</a>PropertyValuesHolder</h3>\n<h3 id=\"propertyvaluesholders-ofkeyframe-把同一个属性拆分\"><a class=\"header-anchor\" href=\"#propertyvaluesholders-ofkeyframe-把同一个属性拆分\">¶</a>PropertyValuesHolders.ofKeyframe() 把同一个属性拆分</h3>"},{"title":"PathMeasure在项目中的使用","date":"2018-06-10T04:18:15.000Z","_content":"\n### 控件预览\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsop2jaj42j20f10hatbw.jpg)\n<!-- more -->\n上面这个图片是最近项目中要实现的一个效果，圆弧是一个四分之一的半圆，很容易实现；但是黄色圆环部分有一部分是橘色的弧线，并且橘色弧线要和黄色圆环部分完全重合，其实如果通过改变画圆环的角度，也是可以画出橘色部分的弧线的，但是如果黄色的曲线不是圆环，而是贝塞尔曲线或者其他不规则曲线的话，要使得另外一段曲线完全和前面这段曲线某一部分完全重合的话，就需要使用PathMeasure来完成这个操作了。\n\n### PathMeasure相关函数\n1. setPath(Path path,boolean forceClosed)\n    - 将Path和PathMeasure进行绑定.第一个参数是传入一个Path，代表我们需要进行测量的Path，第二个参数代表是否闭合，如果一段Path不是闭合的，但是forceClosed传true的话，就会按照闭合路径来测量这一段Path，比如计算路径长度就是计算的闭合的长度，但是path本身是没有这么长的。如果本来就是闭合path，这个参数就无所谓了。\n2. getLength()\n    - 计算Path的长度\n3. getSegment(float startD, float stopD, Path dst, boolean startWithMoveTo)\n    - 获取一段区间内的path，并生成一个新的对象，用dst来接收；第一个参数是起始长度，第二个参数是终止长度，第四个参数代表是否强制覆盖dst，如果设置为faslse，则每一次调用该方法，dst都会在已有path的基础上添加一段新path，如果设置为true，则dst会重新赋值，之前的path的值就都被覆盖了。\n4. nextContour()\n    - nextContour()方法用的比较少，比较大部分情况下都只会有一个Path而不是多个，毕竟这样会增加Path的复杂度，但是如果真有一个Path，包含了多个Path，那么通过nextContour这个方法，就可以进行切换，同时，默认的API，例如getLength，获取的也是当前的这段Path所对应的长度，而不是所有的Path的长度，同时，nextContour获取Path的顺序，与Path的添加顺序是相同的。\n5. getPosTan (float distance, float[] pos, float[] tan)\n    - 获取某个位置的坐标和正切值，分别赋值给pos和tan。\n\n通过上面的几个方法，我们就能完成今天的demo了。\n\n```java\npublic class CurveView extends View {\n\n    private Paint mPaint;\n    private PathMeasure mPathMeasure;\n    private Path mPath;\n    private Path destPath;\n    private int strokeWidth;\n    private Paint orangePaint;\n    private float width;\n    private float height;\n    private float[] leftTop;\n    private float[] rightBottom;\n    private float[] rightTop;\n    private float[] point1;\n    private float[] point2;\n    private float[] point3;\n    private Paint pointPaint;\n    private Paint jianTouPaint;\n    private float[] pointCurrent;\n    private float[] pointTarget;\n\n    public CurveView(Context context) {\n        super(context);\n        initView();\n    }\n\n    public CurveView(Context context, @Nullable AttributeSet attrs) {\n        super(context, attrs);\n        initView();\n    }\n\n    public CurveView(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        initView();\n    }\n\n    private void initView() {\n        strokeWidth = DensityU.dip2px(getContext(), 15);\n        mPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n        mPaint.setColor(Color.parseColor(\"#ffe48a\"));\n        mPaint.setStrokeWidth(strokeWidth);\n        mPaint.setStyle(Style.STROKE);\n        mPaint.setStrokeCap(Cap.ROUND);\n\n\n        jianTouPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n        jianTouPaint.setColor(Color.parseColor(\"#ffe48a\"));\n        jianTouPaint.setStyle(Style.FILL_AND_STROKE);\n        jianTouPaint.setStrokeWidth(DensityU.dip2px(getContext(), 4));\n        jianTouPaint.setStrokeCap(Cap.ROUND);\n        jianTouPaint.setStrokeJoin(Join.ROUND);\n\n        orangePaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n        orangePaint.setColor(Color.parseColor(\"#ff7f00\"));\n        orangePaint.setStrokeCap(Cap.ROUND);\n        orangePaint.setStrokeWidth(strokeWidth);\n        orangePaint.setStyle(Style.STROKE);\n\n\n        pointPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n        pointPaint.setStyle(Style.STROKE);\n        pointPaint.setStrokeWidth(strokeWidth);\n        pointPaint.setStrokeCap(Cap.ROUND);\n        pointPaint.setColor(Color.RED);\n        mPathMeasure = new PathMeasure();\n        mPath = new Path();\n        destPath = new Path();\n    }\n\n    @Override protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n        super.onSizeChanged(w, h, oldw, oldh);\n        width = w - DensityU.dip2px(getContext(), 36) + strokeWidth / 2f;\n        height = h;\n\n\n        leftTop = new float[]{-(width - strokeWidth / 2f), height - width - width + strokeWidth / 2f};\n        rightBottom = new float[]{width - strokeWidth / 2f, height - strokeWidth / 2f};\n        rightTop = new float[]{rightBottom[0], leftTop[1]};\n        RectF rectF = new RectF(leftTop[0], leftTop[1], rightBottom[0], rightBottom[1]);\n        mPath.addArc(rectF, 0, 88.4f);\n        mPathMeasure.setPath(mPath, false);\n\n\n        float length = mPathMeasure.getLength();\n        point1 = new float[2];\n        point2 = new float[2];\n        point3 = new float[2];\n        pointCurrent = new float[2];\n        pointTarget = new float[2];\n        //通过getPosTan方法，获取三个点的坐标，方便后面画小圆点\n        mPathMeasure.getPosTan(0, point1, null);\n        mPathMeasure.getPosTan(length / 9F * 2f, point2, null);\n        mPathMeasure.getPosTan(length / 7F * 3f, point3, null);\n\n        float currentLength = length - DensityU.dip2px(getContext(), 50);\n        float targetLength = length - DensityU.dip2px(getContext(), 150);\n        mPathMeasure.getPosTan(targetLength, pointTarget, null);\n        mPathMeasure.getPosTan(currentLength, pointCurrent, null);\n\n        //根据起点和终点位置的长度，生成新的Path.\n        mPathMeasure.getSegment(targetLength, currentLength, destPath, true);\n    }\n\n    @Override protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        int widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);\n        setMeasuredDimension(widthSpecSize, (int) (widthSpecSize + DensityU.dip2px(getContext(), 80)- DensityU.dip2px(getContext(), 36) + strokeWidth / 2f));\n    }\n\n    @Override protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        canvas.drawPath(mPath, mPaint);\n\n\n        canvas.drawPath(destPath, orangePaint);\n\n\n        Path path = new Path();\n        path.moveTo(rightTop[0], height - width + strokeWidth / 2f + 5);\n        path.lineTo(rightTop[0], height - width + strokeWidth / 2f + 5 - DensityU.dip2px(getContext(), 60));\n\n\n        canvas.drawPath(path, mPaint);\n        path.reset();\n        //绘制箭头\n        path.moveTo(rightTop[0], height - width + strokeWidth / 2f + 8 - DensityU.dip2px(getContext(), 60));\n        path.lineTo(rightTop[0] - DensityU.dip2px(getContext(), 32), height - width + strokeWidth / 2f - DensityU.dip2px(getContext(), 50));\n        path.lineTo(rightTop[0], height - width + strokeWidth / 2f - DensityU.dip2px(getContext(), 80));\n        path.lineTo(rightTop[0] + DensityU.dip2px(getContext(), 32), height - width + strokeWidth / 2f - DensityU.dip2px(getContext(), 50));\n        path.close();\n        canvas.drawPath(path, jianTouPaint);\n\n\n        pointPaint.setColor(Color.parseColor(\"#FF4D30\"));\n        canvas.drawPoint(point1[0], point1[1], pointPaint);\n        pointPaint.setColor(Color.parseColor(\"#70be1b\"));\n        canvas.drawPoint(point2[0], point2[1], pointPaint);\n        pointPaint.setColor(Color.parseColor(\"#68a8f3\"));\n        canvas.drawPoint(point3[0], point3[1], pointPaint);\n    }\n\n\n    public float[] getPoint1() {\n        return point1;\n    }\n\n    public float[] getPoint2() {\n        return point2;\n    }\n\n    public float[] getPoint3() {\n        return point3;\n    }\n\n    public float[] getPointCurrent() {\n        return pointCurrent;\n    }\n\n    public float[] getPointTarget() {\n        return pointTarget;\n    }\n\n    public int getStrokeWidth() {\n        return strokeWidth;\n    }\n}\n\n```\n这样就完成了我们向上的抛物线箭头。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsopmcun2hj20f40h9wfb.jpg)\n\n控件中还有一些其他的元素，这时候就需要给他们定位了，通过PathMeasure的getPosTan方法，我们是可以获取到所有位置的坐标的。\n\n```java\npublic class CurveLayout extends FrameLayout {\n    public CurveLayout(Context context) {\n        super(context);\n        initView();\n    }\n\n\n    public CurveLayout(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        initView();\n    }\n\n    public CurveLayout(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        initView();\n    }\n\n\n    private void initView() {\n        LayoutInflater.from(getContext()).inflate(R.layout.curve_framelayout, this, true);\n        final CurveView mCurveView = findViewById(R.id.curve_view);\n        final RelativeLayout rlToefl = findViewById(R.id.rl_toefl);\n        final RelativeLayout rlSenior = findViewById(R.id.rl_senior);\n        final RelativeLayout rlJunior = findViewById(R.id.rl_junior);\n\n\n        final LinearLayout llToefl = findViewById(R.id.ll_toefl);\n        final LinearLayout llSenior = findViewById(R.id.ll_senior);\n        final LinearLayout llJunior = findViewById(R.id.ll_junior);\n\n\n        final LinearLayout llTarget = findViewById(R.id.ll_target);\n        final FrameLayout flCurrent = findViewById(R.id.fl_current);\n\n        final FrameLayout flCurrentText = findViewById(R.id.fl_current_text);\n\n        mCurveView.post(new Runnable() {\n            @Override public void run() {\n                rlToefl.setTranslationY(mCurveView.getPoint1()[1] - DensityU.dip2px(getContext(), 30));\n                rlSenior.setTranslationY(mCurveView.getPoint2()[1] - rlSenior.getHeight() + DensityU.dip2px(getContext(), 5));\n                rlJunior.setTranslationY(mCurveView.getPoint3()[1] - rlJunior.getHeight() + DensityU.dip2px(getContext(), 5));\n\n                llToefl.setTranslationY(mCurveView.getPoint1()[1] - DensityU.dip2px(getContext(), 10));\n                llSenior.setTranslationY(mCurveView.getPoint2()[1] - DensityU.dip2px(getContext(), 10));\n                llJunior.setTranslationY(mCurveView.getPoint3()[1] - DensityU.dip2px(getContext(), 10));\n\n                rlToefl.setTranslationX(mCurveView.getPoint1()[0] - getWidth() - DensityU.dip2px(getContext(), 10));\n                rlSenior.setTranslationX(mCurveView.getPoint2()[0] - getWidth() - DensityU.dip2px(getContext(), 10));\n                rlJunior.setTranslationX(mCurveView.getPoint3()[0] - getWidth() - DensityU.dip2px(getContext(), 10));\n\n                llToefl.setTranslationX(mCurveView.getPoint1()[0] + DensityU.dip2px(getContext(), 10));\n                llSenior.setTranslationX(mCurveView.getPoint2()[0] + DensityU.dip2px(getContext(), 20));\n                llJunior.setTranslationX(mCurveView.getPoint3()[0] + DensityU.dip2px(getContext(), 20));\n\n\n                llTarget.setTranslationX(mCurveView.getPointTarget()[0] - llTarget.getWidth() / 2);\n                llTarget.setTranslationY(mCurveView.getPointTarget()[1] - llTarget.getHeight() - DensityU.dip2px(getContext(), 8));\n\n                flCurrent.setTranslationX(mCurveView.getPointCurrent()[0] - flCurrent.getWidth() / 2 - DensityU.dip2px(getContext(), 2));\n                flCurrent.setTranslationY(mCurveView.getPointCurrent()[1] - flCurrent.getHeight() - DensityU.dip2px(getContext(), 3));\n\n\n                flCurrentText.setTranslationX(mCurveView.getPointCurrent()[0] - flCurrent.getWidth() / 2 - DensityU.dip2px(getContext(), 2));\n                flCurrentText.setTranslationY(mCurveView.getPointCurrent()[1] + DensityU.dip2px(getContext(), 13));\n            }\n        });\n    }\n}\n\n```\n\n下面是组合控件用到的一个布局：curve_framelayout\n\n```html\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_marginLeft=\"10dp\"\n    tools:showIn=\"@layout/activity_main\">\n\n    <lieeber.com.guihua.CurveView\n        android:id=\"@+id/curve_view\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"20dp\"\n        android:layout_marginRight=\"15dp\"/>\n\n    <RelativeLayout\n        android:id=\"@+id/rl_toefl\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"right\">\n\n        <TextView\n            android:id=\"@+id/tv_toefl_num\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"8.8\"\n            android:textColor=\"#ff0000\"\n            android:textSize=\"30sp\"/>\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_alignBottom=\"@+id/tv_toefl_num\"\n            android:layout_marginBottom=\"7dp\"\n            android:layout_toRightOf=\"@+id/tv_toefl_num\"\n            android:text=\"万小学生学到托福难度课程\"\n            android:textColor=\"#ff0000\"\n            android:textSize=\"14sp\"\n            android:textStyle=\"bold\"/>\n\n        <RelativeLayout\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_below=\"@+id/tv_toefl_num\"\n            android:gravity=\"center_vertical\">\n\n            <com.facebook.drawee.view.SimpleDraweeView\n                android:id=\"@+id/iv_avatar\"\n                android:layout_width=\"40dp\"\n                android:layout_height=\"40dp\"\n                android:layout_marginRight=\"5dp\"\n                app:placeholderImage=\"@drawable/small_boy\"\n                app:roundAsCircle=\"true\"/>\n\n            <TextView\n                android:id=\"@+id/tv_desc\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginTop=\"8dp\"\n                android:layout_toRightOf=\"@+id/iv_avatar\"\n                android:text=\"六年级孩子与外教交流托福雅思难度话题\"\n                android:textColor=\"#000000\"\n                android:textSize=\"8sp\"/>\n\n            <TextView\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_below=\"@+id/tv_desc\"\n                android:layout_toRightOf=\"@+id/iv_avatar\"\n                android:text=\"成都泡桐树小学 六年级 牟天恒\"\n                android:textColor=\"#888888\"\n                android:textSize=\"7sp\"/>\n        </RelativeLayout>\n\n\n    </RelativeLayout>\n\n\n    <RelativeLayout\n        android:id=\"@+id/rl_senior\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"right\"\n        tools:layout_gravity=\"right|center_vertical\">\n\n        <TextView\n            android:id=\"@+id/tv_senior_num\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"62\"\n            android:textColor=\"#FF000000\"\n            android:textSize=\"30sp\"\n            android:textStyle=\"bold\"\n            />\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_alignBottom=\"@+id/tv_senior_num\"\n            android:layout_marginBottom=\"7dp\"\n            android:layout_toRightOf=\"@+id/tv_senior_num\"\n            android:text=\"万小学生\"\n            android:textColor=\"#FF000000\"\n            android:textSize=\"10sp\"\n            android:textStyle=\"bold\"/>\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_below=\"@+id/tv_senior_num\"\n            android:text=\"学到高中难度课程\"\n            android:textColor=\"#FF000000\"\n            android:textSize=\"11sp\"\n            android:textStyle=\"bold\"/>\n    </RelativeLayout>\n\n\n    <RelativeLayout\n        android:id=\"@+id/rl_junior\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"right\"\n        tools:layout_gravity=\"right|bottom\">\n\n        <TextView\n            android:id=\"@+id/tv_junior_num\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"218\"\n            android:textColor=\"#FF000000\"\n            android:textSize=\"30sp\"\n            android:textStyle=\"bold\"\n            />\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_alignBottom=\"@+id/tv_junior_num\"\n            android:layout_marginBottom=\"7dp\"\n            android:layout_toRightOf=\"@+id/tv_junior_num\"\n            android:text=\"万小学生\"\n            android:textColor=\"#FF000000\"\n            android:textSize=\"10sp\"\n            android:textStyle=\"bold\"/>\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_below=\"@+id/tv_junior_num\"\n            android:text=\"学到初中难度课程\"\n            android:textColor=\"#FF000000\"\n            android:textSize=\"11sp\"\n            android:textStyle=\"bold\"/>\n    </RelativeLayout>\n\n\n    <LinearLayout\n        android:id=\"@+id/ll_toefl\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"left\"\n        android:orientation=\"vertical\"\n        tools:layout_gravity=\"left\">\n\n        <ImageView\n            android:layout_width=\"39dp\"\n            android:layout_height=\"24dp\"\n            android:layout_gravity=\"center_horizontal\"\n            android:scaleType=\"fitXY\"\n            android:src=\"@drawable/toefl_icon\"/>\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:text=\"托福\"\n            android:textColor=\"#000000\"\n            android:textSize=\"10sp\"/>\n    </LinearLayout>\n\n    <LinearLayout\n        android:id=\"@+id/ll_senior\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"left\"\n        android:orientation=\"vertical\"\n        tools:layout_gravity=\"left|bottom\">\n\n        <ImageView\n            android:layout_width=\"26dp\"\n            android:layout_height=\"28dp\"\n            android:layout_gravity=\"center_horizontal\"\n            android:scaleType=\"fitXY\"\n            android:src=\"@drawable/senior_icon\"/>\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:text=\"高中\"\n            android:textColor=\"#000000\"\n            android:textSize=\"10sp\"/>\n    </LinearLayout>\n\n    <LinearLayout\n        android:id=\"@+id/ll_junior\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"left\"\n        android:orientation=\"vertical\"\n        tools:layout_gravity=\"left|center_vertical\">\n\n        <ImageView\n            android:layout_width=\"30dp\"\n            android:layout_height=\"22dp\"\n            android:layout_gravity=\"center_horizontal\"\n            android:scaleType=\"fitXY\"\n            android:src=\"@drawable/junior_icon\"/>\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:text=\"初中\"\n            android:textColor=\"#000000\"\n            android:textSize=\"10sp\"/>\n    </LinearLayout>\n\n\n    <LinearLayout\n        android:id=\"@+id/ll_target\"\n        android:layout_width=\"44dp\"\n        android:layout_height=\"60dp\"\n        android:background=\"@drawable/drip_orange\"\n        android:gravity=\"center_horizontal\"\n        android:orientation=\"horizontal\"\n        android:paddingTop=\"9dp\"\n        tools:layout_marginTop=\"100dp\">\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"第\"\n            android:textColor=\"#ffffff\"\n            android:textSize=\"11sp\"/>\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"7\"\n            android:textColor=\"#ffffff\"\n            android:textSize=\"20sp\"\n            android:textStyle=\"bold\"/>\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"阶\"\n            android:textColor=\"#ffffff\"\n            android:textSize=\"11sp\"/>\n    </LinearLayout>\n\n\n    <FrameLayout\n        android:id=\"@+id/fl_current\"\n        android:layout_width=\"34dp\"\n        android:layout_height=\"46dp\"\n        android:background=\"@drawable/drip_yellow\"\n        tools:layout_marginTop=\"180dp\">\n\n        <com.facebook.drawee.view.SimpleDraweeView\n            android:layout_width=\"30dp\"\n            android:layout_height=\"30dp\"\n            android:layout_gravity=\"center_horizontal\"\n            android:layout_marginTop=\"2dp\"\n            app:placeholderImage=\"@drawable/small_boy\"/>\n    </FrameLayout>\n\n\n    <FrameLayout\n        android:id=\"@+id/fl_current_text\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\">\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"当前年级 三年级上\"\n            android:textColor=\"#000000\"\n            android:textSize=\"9sp\"/>\n    </FrameLayout>\n</FrameLayout>\n```\n\n","source":"_posts/自定义控件-PathMeasure的使用.md","raw":"---\ntitle: PathMeasure在项目中的使用\ntags:\n  - 自定义控件\n  - PathMeasure\ncategories:\n  - 自定义控件\ndate: 2018-6-10 12:18:15\n---\n\n### 控件预览\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsop2jaj42j20f10hatbw.jpg)\n<!-- more -->\n上面这个图片是最近项目中要实现的一个效果，圆弧是一个四分之一的半圆，很容易实现；但是黄色圆环部分有一部分是橘色的弧线，并且橘色弧线要和黄色圆环部分完全重合，其实如果通过改变画圆环的角度，也是可以画出橘色部分的弧线的，但是如果黄色的曲线不是圆环，而是贝塞尔曲线或者其他不规则曲线的话，要使得另外一段曲线完全和前面这段曲线某一部分完全重合的话，就需要使用PathMeasure来完成这个操作了。\n\n### PathMeasure相关函数\n1. setPath(Path path,boolean forceClosed)\n    - 将Path和PathMeasure进行绑定.第一个参数是传入一个Path，代表我们需要进行测量的Path，第二个参数代表是否闭合，如果一段Path不是闭合的，但是forceClosed传true的话，就会按照闭合路径来测量这一段Path，比如计算路径长度就是计算的闭合的长度，但是path本身是没有这么长的。如果本来就是闭合path，这个参数就无所谓了。\n2. getLength()\n    - 计算Path的长度\n3. getSegment(float startD, float stopD, Path dst, boolean startWithMoveTo)\n    - 获取一段区间内的path，并生成一个新的对象，用dst来接收；第一个参数是起始长度，第二个参数是终止长度，第四个参数代表是否强制覆盖dst，如果设置为faslse，则每一次调用该方法，dst都会在已有path的基础上添加一段新path，如果设置为true，则dst会重新赋值，之前的path的值就都被覆盖了。\n4. nextContour()\n    - nextContour()方法用的比较少，比较大部分情况下都只会有一个Path而不是多个，毕竟这样会增加Path的复杂度，但是如果真有一个Path，包含了多个Path，那么通过nextContour这个方法，就可以进行切换，同时，默认的API，例如getLength，获取的也是当前的这段Path所对应的长度，而不是所有的Path的长度，同时，nextContour获取Path的顺序，与Path的添加顺序是相同的。\n5. getPosTan (float distance, float[] pos, float[] tan)\n    - 获取某个位置的坐标和正切值，分别赋值给pos和tan。\n\n通过上面的几个方法，我们就能完成今天的demo了。\n\n```java\npublic class CurveView extends View {\n\n    private Paint mPaint;\n    private PathMeasure mPathMeasure;\n    private Path mPath;\n    private Path destPath;\n    private int strokeWidth;\n    private Paint orangePaint;\n    private float width;\n    private float height;\n    private float[] leftTop;\n    private float[] rightBottom;\n    private float[] rightTop;\n    private float[] point1;\n    private float[] point2;\n    private float[] point3;\n    private Paint pointPaint;\n    private Paint jianTouPaint;\n    private float[] pointCurrent;\n    private float[] pointTarget;\n\n    public CurveView(Context context) {\n        super(context);\n        initView();\n    }\n\n    public CurveView(Context context, @Nullable AttributeSet attrs) {\n        super(context, attrs);\n        initView();\n    }\n\n    public CurveView(Context context, @Nullable AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        initView();\n    }\n\n    private void initView() {\n        strokeWidth = DensityU.dip2px(getContext(), 15);\n        mPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n        mPaint.setColor(Color.parseColor(\"#ffe48a\"));\n        mPaint.setStrokeWidth(strokeWidth);\n        mPaint.setStyle(Style.STROKE);\n        mPaint.setStrokeCap(Cap.ROUND);\n\n\n        jianTouPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n        jianTouPaint.setColor(Color.parseColor(\"#ffe48a\"));\n        jianTouPaint.setStyle(Style.FILL_AND_STROKE);\n        jianTouPaint.setStrokeWidth(DensityU.dip2px(getContext(), 4));\n        jianTouPaint.setStrokeCap(Cap.ROUND);\n        jianTouPaint.setStrokeJoin(Join.ROUND);\n\n        orangePaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n        orangePaint.setColor(Color.parseColor(\"#ff7f00\"));\n        orangePaint.setStrokeCap(Cap.ROUND);\n        orangePaint.setStrokeWidth(strokeWidth);\n        orangePaint.setStyle(Style.STROKE);\n\n\n        pointPaint = new Paint(Paint.ANTI_ALIAS_FLAG);\n        pointPaint.setStyle(Style.STROKE);\n        pointPaint.setStrokeWidth(strokeWidth);\n        pointPaint.setStrokeCap(Cap.ROUND);\n        pointPaint.setColor(Color.RED);\n        mPathMeasure = new PathMeasure();\n        mPath = new Path();\n        destPath = new Path();\n    }\n\n    @Override protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n        super.onSizeChanged(w, h, oldw, oldh);\n        width = w - DensityU.dip2px(getContext(), 36) + strokeWidth / 2f;\n        height = h;\n\n\n        leftTop = new float[]{-(width - strokeWidth / 2f), height - width - width + strokeWidth / 2f};\n        rightBottom = new float[]{width - strokeWidth / 2f, height - strokeWidth / 2f};\n        rightTop = new float[]{rightBottom[0], leftTop[1]};\n        RectF rectF = new RectF(leftTop[0], leftTop[1], rightBottom[0], rightBottom[1]);\n        mPath.addArc(rectF, 0, 88.4f);\n        mPathMeasure.setPath(mPath, false);\n\n\n        float length = mPathMeasure.getLength();\n        point1 = new float[2];\n        point2 = new float[2];\n        point3 = new float[2];\n        pointCurrent = new float[2];\n        pointTarget = new float[2];\n        //通过getPosTan方法，获取三个点的坐标，方便后面画小圆点\n        mPathMeasure.getPosTan(0, point1, null);\n        mPathMeasure.getPosTan(length / 9F * 2f, point2, null);\n        mPathMeasure.getPosTan(length / 7F * 3f, point3, null);\n\n        float currentLength = length - DensityU.dip2px(getContext(), 50);\n        float targetLength = length - DensityU.dip2px(getContext(), 150);\n        mPathMeasure.getPosTan(targetLength, pointTarget, null);\n        mPathMeasure.getPosTan(currentLength, pointCurrent, null);\n\n        //根据起点和终点位置的长度，生成新的Path.\n        mPathMeasure.getSegment(targetLength, currentLength, destPath, true);\n    }\n\n    @Override protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        int widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);\n        setMeasuredDimension(widthSpecSize, (int) (widthSpecSize + DensityU.dip2px(getContext(), 80)- DensityU.dip2px(getContext(), 36) + strokeWidth / 2f));\n    }\n\n    @Override protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        canvas.drawPath(mPath, mPaint);\n\n\n        canvas.drawPath(destPath, orangePaint);\n\n\n        Path path = new Path();\n        path.moveTo(rightTop[0], height - width + strokeWidth / 2f + 5);\n        path.lineTo(rightTop[0], height - width + strokeWidth / 2f + 5 - DensityU.dip2px(getContext(), 60));\n\n\n        canvas.drawPath(path, mPaint);\n        path.reset();\n        //绘制箭头\n        path.moveTo(rightTop[0], height - width + strokeWidth / 2f + 8 - DensityU.dip2px(getContext(), 60));\n        path.lineTo(rightTop[0] - DensityU.dip2px(getContext(), 32), height - width + strokeWidth / 2f - DensityU.dip2px(getContext(), 50));\n        path.lineTo(rightTop[0], height - width + strokeWidth / 2f - DensityU.dip2px(getContext(), 80));\n        path.lineTo(rightTop[0] + DensityU.dip2px(getContext(), 32), height - width + strokeWidth / 2f - DensityU.dip2px(getContext(), 50));\n        path.close();\n        canvas.drawPath(path, jianTouPaint);\n\n\n        pointPaint.setColor(Color.parseColor(\"#FF4D30\"));\n        canvas.drawPoint(point1[0], point1[1], pointPaint);\n        pointPaint.setColor(Color.parseColor(\"#70be1b\"));\n        canvas.drawPoint(point2[0], point2[1], pointPaint);\n        pointPaint.setColor(Color.parseColor(\"#68a8f3\"));\n        canvas.drawPoint(point3[0], point3[1], pointPaint);\n    }\n\n\n    public float[] getPoint1() {\n        return point1;\n    }\n\n    public float[] getPoint2() {\n        return point2;\n    }\n\n    public float[] getPoint3() {\n        return point3;\n    }\n\n    public float[] getPointCurrent() {\n        return pointCurrent;\n    }\n\n    public float[] getPointTarget() {\n        return pointTarget;\n    }\n\n    public int getStrokeWidth() {\n        return strokeWidth;\n    }\n}\n\n```\n这样就完成了我们向上的抛物线箭头。\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsopmcun2hj20f40h9wfb.jpg)\n\n控件中还有一些其他的元素，这时候就需要给他们定位了，通过PathMeasure的getPosTan方法，我们是可以获取到所有位置的坐标的。\n\n```java\npublic class CurveLayout extends FrameLayout {\n    public CurveLayout(Context context) {\n        super(context);\n        initView();\n    }\n\n\n    public CurveLayout(Context context, AttributeSet attrs) {\n        super(context, attrs);\n        initView();\n    }\n\n    public CurveLayout(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        initView();\n    }\n\n\n    private void initView() {\n        LayoutInflater.from(getContext()).inflate(R.layout.curve_framelayout, this, true);\n        final CurveView mCurveView = findViewById(R.id.curve_view);\n        final RelativeLayout rlToefl = findViewById(R.id.rl_toefl);\n        final RelativeLayout rlSenior = findViewById(R.id.rl_senior);\n        final RelativeLayout rlJunior = findViewById(R.id.rl_junior);\n\n\n        final LinearLayout llToefl = findViewById(R.id.ll_toefl);\n        final LinearLayout llSenior = findViewById(R.id.ll_senior);\n        final LinearLayout llJunior = findViewById(R.id.ll_junior);\n\n\n        final LinearLayout llTarget = findViewById(R.id.ll_target);\n        final FrameLayout flCurrent = findViewById(R.id.fl_current);\n\n        final FrameLayout flCurrentText = findViewById(R.id.fl_current_text);\n\n        mCurveView.post(new Runnable() {\n            @Override public void run() {\n                rlToefl.setTranslationY(mCurveView.getPoint1()[1] - DensityU.dip2px(getContext(), 30));\n                rlSenior.setTranslationY(mCurveView.getPoint2()[1] - rlSenior.getHeight() + DensityU.dip2px(getContext(), 5));\n                rlJunior.setTranslationY(mCurveView.getPoint3()[1] - rlJunior.getHeight() + DensityU.dip2px(getContext(), 5));\n\n                llToefl.setTranslationY(mCurveView.getPoint1()[1] - DensityU.dip2px(getContext(), 10));\n                llSenior.setTranslationY(mCurveView.getPoint2()[1] - DensityU.dip2px(getContext(), 10));\n                llJunior.setTranslationY(mCurveView.getPoint3()[1] - DensityU.dip2px(getContext(), 10));\n\n                rlToefl.setTranslationX(mCurveView.getPoint1()[0] - getWidth() - DensityU.dip2px(getContext(), 10));\n                rlSenior.setTranslationX(mCurveView.getPoint2()[0] - getWidth() - DensityU.dip2px(getContext(), 10));\n                rlJunior.setTranslationX(mCurveView.getPoint3()[0] - getWidth() - DensityU.dip2px(getContext(), 10));\n\n                llToefl.setTranslationX(mCurveView.getPoint1()[0] + DensityU.dip2px(getContext(), 10));\n                llSenior.setTranslationX(mCurveView.getPoint2()[0] + DensityU.dip2px(getContext(), 20));\n                llJunior.setTranslationX(mCurveView.getPoint3()[0] + DensityU.dip2px(getContext(), 20));\n\n\n                llTarget.setTranslationX(mCurveView.getPointTarget()[0] - llTarget.getWidth() / 2);\n                llTarget.setTranslationY(mCurveView.getPointTarget()[1] - llTarget.getHeight() - DensityU.dip2px(getContext(), 8));\n\n                flCurrent.setTranslationX(mCurveView.getPointCurrent()[0] - flCurrent.getWidth() / 2 - DensityU.dip2px(getContext(), 2));\n                flCurrent.setTranslationY(mCurveView.getPointCurrent()[1] - flCurrent.getHeight() - DensityU.dip2px(getContext(), 3));\n\n\n                flCurrentText.setTranslationX(mCurveView.getPointCurrent()[0] - flCurrent.getWidth() / 2 - DensityU.dip2px(getContext(), 2));\n                flCurrentText.setTranslationY(mCurveView.getPointCurrent()[1] + DensityU.dip2px(getContext(), 13));\n            }\n        });\n    }\n}\n\n```\n\n下面是组合控件用到的一个布局：curve_framelayout\n\n```html\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\n    xmlns:tools=\"http://schemas.android.com/tools\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\"\n    android:layout_marginLeft=\"10dp\"\n    tools:showIn=\"@layout/activity_main\">\n\n    <lieeber.com.guihua.CurveView\n        android:id=\"@+id/curve_view\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_marginBottom=\"20dp\"\n        android:layout_marginRight=\"15dp\"/>\n\n    <RelativeLayout\n        android:id=\"@+id/rl_toefl\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"right\">\n\n        <TextView\n            android:id=\"@+id/tv_toefl_num\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"8.8\"\n            android:textColor=\"#ff0000\"\n            android:textSize=\"30sp\"/>\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_alignBottom=\"@+id/tv_toefl_num\"\n            android:layout_marginBottom=\"7dp\"\n            android:layout_toRightOf=\"@+id/tv_toefl_num\"\n            android:text=\"万小学生学到托福难度课程\"\n            android:textColor=\"#ff0000\"\n            android:textSize=\"14sp\"\n            android:textStyle=\"bold\"/>\n\n        <RelativeLayout\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_below=\"@+id/tv_toefl_num\"\n            android:gravity=\"center_vertical\">\n\n            <com.facebook.drawee.view.SimpleDraweeView\n                android:id=\"@+id/iv_avatar\"\n                android:layout_width=\"40dp\"\n                android:layout_height=\"40dp\"\n                android:layout_marginRight=\"5dp\"\n                app:placeholderImage=\"@drawable/small_boy\"\n                app:roundAsCircle=\"true\"/>\n\n            <TextView\n                android:id=\"@+id/tv_desc\"\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_marginTop=\"8dp\"\n                android:layout_toRightOf=\"@+id/iv_avatar\"\n                android:text=\"六年级孩子与外教交流托福雅思难度话题\"\n                android:textColor=\"#000000\"\n                android:textSize=\"8sp\"/>\n\n            <TextView\n                android:layout_width=\"wrap_content\"\n                android:layout_height=\"wrap_content\"\n                android:layout_below=\"@+id/tv_desc\"\n                android:layout_toRightOf=\"@+id/iv_avatar\"\n                android:text=\"成都泡桐树小学 六年级 牟天恒\"\n                android:textColor=\"#888888\"\n                android:textSize=\"7sp\"/>\n        </RelativeLayout>\n\n\n    </RelativeLayout>\n\n\n    <RelativeLayout\n        android:id=\"@+id/rl_senior\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"right\"\n        tools:layout_gravity=\"right|center_vertical\">\n\n        <TextView\n            android:id=\"@+id/tv_senior_num\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"62\"\n            android:textColor=\"#FF000000\"\n            android:textSize=\"30sp\"\n            android:textStyle=\"bold\"\n            />\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_alignBottom=\"@+id/tv_senior_num\"\n            android:layout_marginBottom=\"7dp\"\n            android:layout_toRightOf=\"@+id/tv_senior_num\"\n            android:text=\"万小学生\"\n            android:textColor=\"#FF000000\"\n            android:textSize=\"10sp\"\n            android:textStyle=\"bold\"/>\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_below=\"@+id/tv_senior_num\"\n            android:text=\"学到高中难度课程\"\n            android:textColor=\"#FF000000\"\n            android:textSize=\"11sp\"\n            android:textStyle=\"bold\"/>\n    </RelativeLayout>\n\n\n    <RelativeLayout\n        android:id=\"@+id/rl_junior\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"right\"\n        tools:layout_gravity=\"right|bottom\">\n\n        <TextView\n            android:id=\"@+id/tv_junior_num\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"218\"\n            android:textColor=\"#FF000000\"\n            android:textSize=\"30sp\"\n            android:textStyle=\"bold\"\n            />\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_alignBottom=\"@+id/tv_junior_num\"\n            android:layout_marginBottom=\"7dp\"\n            android:layout_toRightOf=\"@+id/tv_junior_num\"\n            android:text=\"万小学生\"\n            android:textColor=\"#FF000000\"\n            android:textSize=\"10sp\"\n            android:textStyle=\"bold\"/>\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_below=\"@+id/tv_junior_num\"\n            android:text=\"学到初中难度课程\"\n            android:textColor=\"#FF000000\"\n            android:textSize=\"11sp\"\n            android:textStyle=\"bold\"/>\n    </RelativeLayout>\n\n\n    <LinearLayout\n        android:id=\"@+id/ll_toefl\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"left\"\n        android:orientation=\"vertical\"\n        tools:layout_gravity=\"left\">\n\n        <ImageView\n            android:layout_width=\"39dp\"\n            android:layout_height=\"24dp\"\n            android:layout_gravity=\"center_horizontal\"\n            android:scaleType=\"fitXY\"\n            android:src=\"@drawable/toefl_icon\"/>\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:text=\"托福\"\n            android:textColor=\"#000000\"\n            android:textSize=\"10sp\"/>\n    </LinearLayout>\n\n    <LinearLayout\n        android:id=\"@+id/ll_senior\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"left\"\n        android:orientation=\"vertical\"\n        tools:layout_gravity=\"left|bottom\">\n\n        <ImageView\n            android:layout_width=\"26dp\"\n            android:layout_height=\"28dp\"\n            android:layout_gravity=\"center_horizontal\"\n            android:scaleType=\"fitXY\"\n            android:src=\"@drawable/senior_icon\"/>\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:text=\"高中\"\n            android:textColor=\"#000000\"\n            android:textSize=\"10sp\"/>\n    </LinearLayout>\n\n    <LinearLayout\n        android:id=\"@+id/ll_junior\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"left\"\n        android:orientation=\"vertical\"\n        tools:layout_gravity=\"left|center_vertical\">\n\n        <ImageView\n            android:layout_width=\"30dp\"\n            android:layout_height=\"22dp\"\n            android:layout_gravity=\"center_horizontal\"\n            android:scaleType=\"fitXY\"\n            android:src=\"@drawable/junior_icon\"/>\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:text=\"初中\"\n            android:textColor=\"#000000\"\n            android:textSize=\"10sp\"/>\n    </LinearLayout>\n\n\n    <LinearLayout\n        android:id=\"@+id/ll_target\"\n        android:layout_width=\"44dp\"\n        android:layout_height=\"60dp\"\n        android:background=\"@drawable/drip_orange\"\n        android:gravity=\"center_horizontal\"\n        android:orientation=\"horizontal\"\n        android:paddingTop=\"9dp\"\n        tools:layout_marginTop=\"100dp\">\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"第\"\n            android:textColor=\"#ffffff\"\n            android:textSize=\"11sp\"/>\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"7\"\n            android:textColor=\"#ffffff\"\n            android:textSize=\"20sp\"\n            android:textStyle=\"bold\"/>\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"阶\"\n            android:textColor=\"#ffffff\"\n            android:textSize=\"11sp\"/>\n    </LinearLayout>\n\n\n    <FrameLayout\n        android:id=\"@+id/fl_current\"\n        android:layout_width=\"34dp\"\n        android:layout_height=\"46dp\"\n        android:background=\"@drawable/drip_yellow\"\n        tools:layout_marginTop=\"180dp\">\n\n        <com.facebook.drawee.view.SimpleDraweeView\n            android:layout_width=\"30dp\"\n            android:layout_height=\"30dp\"\n            android:layout_gravity=\"center_horizontal\"\n            android:layout_marginTop=\"2dp\"\n            app:placeholderImage=\"@drawable/small_boy\"/>\n    </FrameLayout>\n\n\n    <FrameLayout\n        android:id=\"@+id/fl_current_text\"\n        android:layout_width=\"wrap_content\"\n        android:layout_height=\"wrap_content\">\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:text=\"当前年级 三年级上\"\n            android:textColor=\"#000000\"\n            android:textSize=\"9sp\"/>\n    </FrameLayout>\n</FrameLayout>\n```\n\n","slug":"自定义控件-PathMeasure的使用","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv54b001u58ugu6h53mx7","content":"<h3 id=\"控件预览\"><a class=\"header-anchor\" href=\"#控件预览\">¶</a>控件预览</h3>\n<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsop2jaj42j20f10hatbw.jpg\" alt=\"\"></p>\n<a id=\"more\"></a>\n<p>上面这个图片是最近项目中要实现的一个效果，圆弧是一个四分之一的半圆，很容易实现；但是黄色圆环部分有一部分是橘色的弧线，并且橘色弧线要和黄色圆环部分完全重合，其实如果通过改变画圆环的角度，也是可以画出橘色部分的弧线的，但是如果黄色的曲线不是圆环，而是贝塞尔曲线或者其他不规则曲线的话，要使得另外一段曲线完全和前面这段曲线某一部分完全重合的话，就需要使用PathMeasure来完成这个操作了。</p>\n<h3 id=\"pathmeasure相关函数\"><a class=\"header-anchor\" href=\"#pathmeasure相关函数\">¶</a>PathMeasure相关函数</h3>\n<ol>\n<li>setPath(Path path,boolean forceClosed)\n<ul>\n<li>将Path和PathMeasure进行绑定.第一个参数是传入一个Path，代表我们需要进行测量的Path，第二个参数代表是否闭合，如果一段Path不是闭合的，但是forceClosed传true的话，就会按照闭合路径来测量这一段Path，比如计算路径长度就是计算的闭合的长度，但是path本身是没有这么长的。如果本来就是闭合path，这个参数就无所谓了。</li>\n</ul>\n</li>\n<li>getLength()\n<ul>\n<li>计算Path的长度</li>\n</ul>\n</li>\n<li>getSegment(float startD, float stopD, Path dst, boolean startWithMoveTo)\n<ul>\n<li>获取一段区间内的path，并生成一个新的对象，用dst来接收；第一个参数是起始长度，第二个参数是终止长度，第四个参数代表是否强制覆盖dst，如果设置为faslse，则每一次调用该方法，dst都会在已有path的基础上添加一段新path，如果设置为true，则dst会重新赋值，之前的path的值就都被覆盖了。</li>\n</ul>\n</li>\n<li>nextContour()\n<ul>\n<li>nextContour()方法用的比较少，比较大部分情况下都只会有一个Path而不是多个，毕竟这样会增加Path的复杂度，但是如果真有一个Path，包含了多个Path，那么通过nextContour这个方法，就可以进行切换，同时，默认的API，例如getLength，获取的也是当前的这段Path所对应的长度，而不是所有的Path的长度，同时，nextContour获取Path的顺序，与Path的添加顺序是相同的。</li>\n</ul>\n</li>\n<li>getPosTan (float distance, float[] pos, float[] tan)\n<ul>\n<li>获取某个位置的坐标和正切值，分别赋值给pos和tan。</li>\n</ul>\n</li>\n</ol>\n<p>通过上面的几个方法，我们就能完成今天的demo了。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CurveView</span> <span class=\"keyword\">extends</span> <span class=\"title\">View</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Paint mPaint;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> PathMeasure mPathMeasure;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Path mPath;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Path destPath;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> strokeWidth;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Paint orangePaint;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span> width;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span> height;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>[] leftTop;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>[] rightBottom;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>[] rightTop;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>[] point1;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>[] point2;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>[] point3;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Paint pointPaint;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Paint jianTouPaint;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>[] pointCurrent;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>[] pointTarget;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CurveView</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context);</span><br><span class=\"line\">        initView();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CurveView</span><span class=\"params\">(Context context, @Nullable AttributeSet attrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs);</span><br><span class=\"line\">        initView();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CurveView</span><span class=\"params\">(Context context, @Nullable AttributeSet attrs, <span class=\"keyword\">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs, defStyleAttr);</span><br><span class=\"line\">        initView();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">initView</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        strokeWidth = DensityU.dip2px(getContext(), <span class=\"number\">15</span>);</span><br><span class=\"line\">        mPaint = <span class=\"keyword\">new</span> Paint(Paint.ANTI_ALIAS_FLAG);</span><br><span class=\"line\">        mPaint.setColor(Color.parseColor(<span class=\"string\">\"#ffe48a\"</span>));</span><br><span class=\"line\">        mPaint.setStrokeWidth(strokeWidth);</span><br><span class=\"line\">        mPaint.setStyle(Style.STROKE);</span><br><span class=\"line\">        mPaint.setStrokeCap(Cap.ROUND);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        jianTouPaint = <span class=\"keyword\">new</span> Paint(Paint.ANTI_ALIAS_FLAG);</span><br><span class=\"line\">        jianTouPaint.setColor(Color.parseColor(<span class=\"string\">\"#ffe48a\"</span>));</span><br><span class=\"line\">        jianTouPaint.setStyle(Style.FILL_AND_STROKE);</span><br><span class=\"line\">        jianTouPaint.setStrokeWidth(DensityU.dip2px(getContext(), <span class=\"number\">4</span>));</span><br><span class=\"line\">        jianTouPaint.setStrokeCap(Cap.ROUND);</span><br><span class=\"line\">        jianTouPaint.setStrokeJoin(Join.ROUND);</span><br><span class=\"line\"></span><br><span class=\"line\">        orangePaint = <span class=\"keyword\">new</span> Paint(Paint.ANTI_ALIAS_FLAG);</span><br><span class=\"line\">        orangePaint.setColor(Color.parseColor(<span class=\"string\">\"#ff7f00\"</span>));</span><br><span class=\"line\">        orangePaint.setStrokeCap(Cap.ROUND);</span><br><span class=\"line\">        orangePaint.setStrokeWidth(strokeWidth);</span><br><span class=\"line\">        orangePaint.setStyle(Style.STROKE);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        pointPaint = <span class=\"keyword\">new</span> Paint(Paint.ANTI_ALIAS_FLAG);</span><br><span class=\"line\">        pointPaint.setStyle(Style.STROKE);</span><br><span class=\"line\">        pointPaint.setStrokeWidth(strokeWidth);</span><br><span class=\"line\">        pointPaint.setStrokeCap(Cap.ROUND);</span><br><span class=\"line\">        pointPaint.setColor(Color.RED);</span><br><span class=\"line\">        mPathMeasure = <span class=\"keyword\">new</span> PathMeasure();</span><br><span class=\"line\">        mPath = <span class=\"keyword\">new</span> Path();</span><br><span class=\"line\">        destPath = <span class=\"keyword\">new</span> Path();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onSizeChanged</span><span class=\"params\">(<span class=\"keyword\">int</span> w, <span class=\"keyword\">int</span> h, <span class=\"keyword\">int</span> oldw, <span class=\"keyword\">int</span> oldh)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class=\"line\">        width = w - DensityU.dip2px(getContext(), <span class=\"number\">36</span>) + strokeWidth / <span class=\"number\">2f</span>;</span><br><span class=\"line\">        height = h;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        leftTop = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[]&#123;-(width - strokeWidth / <span class=\"number\">2f</span>), height - width - width + strokeWidth / <span class=\"number\">2f</span>&#125;;</span><br><span class=\"line\">        rightBottom = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[]&#123;width - strokeWidth / <span class=\"number\">2f</span>, height - strokeWidth / <span class=\"number\">2f</span>&#125;;</span><br><span class=\"line\">        rightTop = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[]&#123;rightBottom[<span class=\"number\">0</span>], leftTop[<span class=\"number\">1</span>]&#125;;</span><br><span class=\"line\">        RectF rectF = <span class=\"keyword\">new</span> RectF(leftTop[<span class=\"number\">0</span>], leftTop[<span class=\"number\">1</span>], rightBottom[<span class=\"number\">0</span>], rightBottom[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        mPath.addArc(rectF, <span class=\"number\">0</span>, <span class=\"number\">88.4f</span>);</span><br><span class=\"line\">        mPathMeasure.setPath(mPath, <span class=\"keyword\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">float</span> length = mPathMeasure.getLength();</span><br><span class=\"line\">        point1 = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">        point2 = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">        point3 = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">        pointCurrent = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">        pointTarget = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">        <span class=\"comment\">//通过getPosTan方法，获取三个点的坐标，方便后面画小圆点</span></span><br><span class=\"line\">        mPathMeasure.getPosTan(<span class=\"number\">0</span>, point1, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">        mPathMeasure.getPosTan(length / <span class=\"number\">9F</span> * <span class=\"number\">2f</span>, point2, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">        mPathMeasure.getPosTan(length / <span class=\"number\">7F</span> * <span class=\"number\">3f</span>, point3, <span class=\"keyword\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">float</span> currentLength = length - DensityU.dip2px(getContext(), <span class=\"number\">50</span>);</span><br><span class=\"line\">        <span class=\"keyword\">float</span> targetLength = length - DensityU.dip2px(getContext(), <span class=\"number\">150</span>);</span><br><span class=\"line\">        mPathMeasure.getPosTan(targetLength, pointTarget, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">        mPathMeasure.getPosTan(currentLength, pointCurrent, <span class=\"keyword\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//根据起点和终点位置的长度，生成新的Path.</span></span><br><span class=\"line\">        mPathMeasure.getSegment(targetLength, currentLength, destPath, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onMeasure</span><span class=\"params\">(<span class=\"keyword\">int</span> widthMeasureSpec, <span class=\"keyword\">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);</span><br><span class=\"line\">        setMeasuredDimension(widthSpecSize, (<span class=\"keyword\">int</span>) (widthSpecSize + DensityU.dip2px(getContext(), <span class=\"number\">80</span>)- DensityU.dip2px(getContext(), <span class=\"number\">36</span>) + strokeWidth / <span class=\"number\">2f</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDraw</span><span class=\"params\">(Canvas canvas)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onDraw(canvas);</span><br><span class=\"line\">        canvas.drawPath(mPath, mPaint);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        canvas.drawPath(destPath, orangePaint);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        Path path = <span class=\"keyword\">new</span> Path();</span><br><span class=\"line\">        path.moveTo(rightTop[<span class=\"number\">0</span>], height - width + strokeWidth / <span class=\"number\">2f</span> + <span class=\"number\">5</span>);</span><br><span class=\"line\">        path.lineTo(rightTop[<span class=\"number\">0</span>], height - width + strokeWidth / <span class=\"number\">2f</span> + <span class=\"number\">5</span> - DensityU.dip2px(getContext(), <span class=\"number\">60</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        canvas.drawPath(path, mPaint);</span><br><span class=\"line\">        path.reset();</span><br><span class=\"line\">        <span class=\"comment\">//绘制箭头</span></span><br><span class=\"line\">        path.moveTo(rightTop[<span class=\"number\">0</span>], height - width + strokeWidth / <span class=\"number\">2f</span> + <span class=\"number\">8</span> - DensityU.dip2px(getContext(), <span class=\"number\">60</span>));</span><br><span class=\"line\">        path.lineTo(rightTop[<span class=\"number\">0</span>] - DensityU.dip2px(getContext(), <span class=\"number\">32</span>), height - width + strokeWidth / <span class=\"number\">2f</span> - DensityU.dip2px(getContext(), <span class=\"number\">50</span>));</span><br><span class=\"line\">        path.lineTo(rightTop[<span class=\"number\">0</span>], height - width + strokeWidth / <span class=\"number\">2f</span> - DensityU.dip2px(getContext(), <span class=\"number\">80</span>));</span><br><span class=\"line\">        path.lineTo(rightTop[<span class=\"number\">0</span>] + DensityU.dip2px(getContext(), <span class=\"number\">32</span>), height - width + strokeWidth / <span class=\"number\">2f</span> - DensityU.dip2px(getContext(), <span class=\"number\">50</span>));</span><br><span class=\"line\">        path.close();</span><br><span class=\"line\">        canvas.drawPath(path, jianTouPaint);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        pointPaint.setColor(Color.parseColor(<span class=\"string\">\"#FF4D30\"</span>));</span><br><span class=\"line\">        canvas.drawPoint(point1[<span class=\"number\">0</span>], point1[<span class=\"number\">1</span>], pointPaint);</span><br><span class=\"line\">        pointPaint.setColor(Color.parseColor(<span class=\"string\">\"#70be1b\"</span>));</span><br><span class=\"line\">        canvas.drawPoint(point2[<span class=\"number\">0</span>], point2[<span class=\"number\">1</span>], pointPaint);</span><br><span class=\"line\">        pointPaint.setColor(Color.parseColor(<span class=\"string\">\"#68a8f3\"</span>));</span><br><span class=\"line\">        canvas.drawPoint(point3[<span class=\"number\">0</span>], point3[<span class=\"number\">1</span>], pointPaint);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">float</span>[] getPoint1() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> point1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">float</span>[] getPoint2() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> point2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">float</span>[] getPoint3() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> point3;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">float</span>[] getPointCurrent() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> pointCurrent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">float</span>[] getPointTarget() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> pointTarget;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getStrokeWidth</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> strokeWidth;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样就完成了我们向上的抛物线箭头。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsopmcun2hj20f40h9wfb.jpg\" alt=\"\"></p>\n<p>控件中还有一些其他的元素，这时候就需要给他们定位了，通过PathMeasure的getPosTan方法，我们是可以获取到所有位置的坐标的。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CurveLayout</span> <span class=\"keyword\">extends</span> <span class=\"title\">FrameLayout</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CurveLayout</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context);</span><br><span class=\"line\">        initView();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CurveLayout</span><span class=\"params\">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs);</span><br><span class=\"line\">        initView();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CurveLayout</span><span class=\"params\">(Context context, AttributeSet attrs, <span class=\"keyword\">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs, defStyleAttr);</span><br><span class=\"line\">        initView();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">initView</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        LayoutInflater.from(getContext()).inflate(R.layout.curve_framelayout, <span class=\"keyword\">this</span>, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">        <span class=\"keyword\">final</span> CurveView mCurveView = findViewById(R.id.curve_view);</span><br><span class=\"line\">        <span class=\"keyword\">final</span> RelativeLayout rlToefl = findViewById(R.id.rl_toefl);</span><br><span class=\"line\">        <span class=\"keyword\">final</span> RelativeLayout rlSenior = findViewById(R.id.rl_senior);</span><br><span class=\"line\">        <span class=\"keyword\">final</span> RelativeLayout rlJunior = findViewById(R.id.rl_junior);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">final</span> LinearLayout llToefl = findViewById(R.id.ll_toefl);</span><br><span class=\"line\">        <span class=\"keyword\">final</span> LinearLayout llSenior = findViewById(R.id.ll_senior);</span><br><span class=\"line\">        <span class=\"keyword\">final</span> LinearLayout llJunior = findViewById(R.id.ll_junior);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">final</span> LinearLayout llTarget = findViewById(R.id.ll_target);</span><br><span class=\"line\">        <span class=\"keyword\">final</span> FrameLayout flCurrent = findViewById(R.id.fl_current);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">final</span> FrameLayout flCurrentText = findViewById(R.id.fl_current_text);</span><br><span class=\"line\"></span><br><span class=\"line\">        mCurveView.post(<span class=\"keyword\">new</span> Runnable() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                rlToefl.setTranslationY(mCurveView.getPoint1()[<span class=\"number\">1</span>] - DensityU.dip2px(getContext(), <span class=\"number\">30</span>));</span><br><span class=\"line\">                rlSenior.setTranslationY(mCurveView.getPoint2()[<span class=\"number\">1</span>] - rlSenior.getHeight() + DensityU.dip2px(getContext(), <span class=\"number\">5</span>));</span><br><span class=\"line\">                rlJunior.setTranslationY(mCurveView.getPoint3()[<span class=\"number\">1</span>] - rlJunior.getHeight() + DensityU.dip2px(getContext(), <span class=\"number\">5</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">                llToefl.setTranslationY(mCurveView.getPoint1()[<span class=\"number\">1</span>] - DensityU.dip2px(getContext(), <span class=\"number\">10</span>));</span><br><span class=\"line\">                llSenior.setTranslationY(mCurveView.getPoint2()[<span class=\"number\">1</span>] - DensityU.dip2px(getContext(), <span class=\"number\">10</span>));</span><br><span class=\"line\">                llJunior.setTranslationY(mCurveView.getPoint3()[<span class=\"number\">1</span>] - DensityU.dip2px(getContext(), <span class=\"number\">10</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">                rlToefl.setTranslationX(mCurveView.getPoint1()[<span class=\"number\">0</span>] - getWidth() - DensityU.dip2px(getContext(), <span class=\"number\">10</span>));</span><br><span class=\"line\">                rlSenior.setTranslationX(mCurveView.getPoint2()[<span class=\"number\">0</span>] - getWidth() - DensityU.dip2px(getContext(), <span class=\"number\">10</span>));</span><br><span class=\"line\">                rlJunior.setTranslationX(mCurveView.getPoint3()[<span class=\"number\">0</span>] - getWidth() - DensityU.dip2px(getContext(), <span class=\"number\">10</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">                llToefl.setTranslationX(mCurveView.getPoint1()[<span class=\"number\">0</span>] + DensityU.dip2px(getContext(), <span class=\"number\">10</span>));</span><br><span class=\"line\">                llSenior.setTranslationX(mCurveView.getPoint2()[<span class=\"number\">0</span>] + DensityU.dip2px(getContext(), <span class=\"number\">20</span>));</span><br><span class=\"line\">                llJunior.setTranslationX(mCurveView.getPoint3()[<span class=\"number\">0</span>] + DensityU.dip2px(getContext(), <span class=\"number\">20</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                llTarget.setTranslationX(mCurveView.getPointTarget()[<span class=\"number\">0</span>] - llTarget.getWidth() / <span class=\"number\">2</span>);</span><br><span class=\"line\">                llTarget.setTranslationY(mCurveView.getPointTarget()[<span class=\"number\">1</span>] - llTarget.getHeight() - DensityU.dip2px(getContext(), <span class=\"number\">8</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">                flCurrent.setTranslationX(mCurveView.getPointCurrent()[<span class=\"number\">0</span>] - flCurrent.getWidth() / <span class=\"number\">2</span> - DensityU.dip2px(getContext(), <span class=\"number\">2</span>));</span><br><span class=\"line\">                flCurrent.setTranslationY(mCurveView.getPointCurrent()[<span class=\"number\">1</span>] - flCurrent.getHeight() - DensityU.dip2px(getContext(), <span class=\"number\">3</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                flCurrentText.setTranslationX(mCurveView.getPointCurrent()[<span class=\"number\">0</span>] - flCurrent.getWidth() / <span class=\"number\">2</span> - DensityU.dip2px(getContext(), <span class=\"number\">2</span>));</span><br><span class=\"line\">                flCurrentText.setTranslationY(mCurveView.getPointCurrent()[<span class=\"number\">1</span>] + DensityU.dip2px(getContext(), <span class=\"number\">13</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下面是组合控件用到的一个布局：curve_framelayout</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">FrameLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:app</span>=<span class=\"string\">\"http://schemas.android.com/apk/res-auto\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:tools</span>=<span class=\"string\">\"http://schemas.android.com/tools\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_marginLeft</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">tools:showIn</span>=<span class=\"string\">\"@layout/activity_main\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">lieeber.com.guihua.CurveView</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/curve_view\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_marginBottom</span>=<span class=\"string\">\"20dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_marginRight</span>=<span class=\"string\">\"15dp\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/rl_toefl\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"right\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tv_toefl_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"8.8\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#ff0000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"30sp\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_alignBottom</span>=<span class=\"string\">\"@+id/tv_toefl_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_marginBottom</span>=<span class=\"string\">\"7dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_toRightOf</span>=<span class=\"string\">\"@+id/tv_toefl_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"万小学生学到托福难度课程\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#ff0000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"14sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textStyle</span>=<span class=\"string\">\"bold\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_below</span>=<span class=\"string\">\"@+id/tv_toefl_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center_vertical\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">com.facebook.drawee.view.SimpleDraweeView</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/iv_avatar\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"40dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"40dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_marginRight</span>=<span class=\"string\">\"5dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">app:placeholderImage</span>=<span class=\"string\">\"@drawable/small_boy\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">app:roundAsCircle</span>=<span class=\"string\">\"true\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tv_desc\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_marginTop</span>=<span class=\"string\">\"8dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_toRightOf</span>=<span class=\"string\">\"@+id/iv_avatar\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"六年级孩子与外教交流托福雅思难度话题\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"8sp\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_below</span>=<span class=\"string\">\"@+id/tv_desc\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_toRightOf</span>=<span class=\"string\">\"@+id/iv_avatar\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"成都泡桐树小学 六年级 牟天恒\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#888888\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"7sp\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/rl_senior\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"right\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">tools:layout_gravity</span>=<span class=\"string\">\"right|center_vertical\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tv_senior_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"62\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#FF000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"30sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textStyle</span>=<span class=\"string\">\"bold\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_alignBottom</span>=<span class=\"string\">\"@+id/tv_senior_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_marginBottom</span>=<span class=\"string\">\"7dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_toRightOf</span>=<span class=\"string\">\"@+id/tv_senior_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"万小学生\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#FF000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"10sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textStyle</span>=<span class=\"string\">\"bold\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_below</span>=<span class=\"string\">\"@+id/tv_senior_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"学到高中难度课程\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#FF000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"11sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textStyle</span>=<span class=\"string\">\"bold\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/rl_junior\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"right\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">tools:layout_gravity</span>=<span class=\"string\">\"right|bottom\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tv_junior_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"218\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#FF000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"30sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textStyle</span>=<span class=\"string\">\"bold\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_alignBottom</span>=<span class=\"string\">\"@+id/tv_junior_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_marginBottom</span>=<span class=\"string\">\"7dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_toRightOf</span>=<span class=\"string\">\"@+id/tv_junior_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"万小学生\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#FF000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"10sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textStyle</span>=<span class=\"string\">\"bold\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_below</span>=<span class=\"string\">\"@+id/tv_junior_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"学到初中难度课程\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#FF000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"11sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textStyle</span>=<span class=\"string\">\"bold\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/ll_toefl\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"left\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">tools:layout_gravity</span>=<span class=\"string\">\"left\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ImageView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"39dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"24dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:scaleType</span>=<span class=\"string\">\"fitXY\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:src</span>=<span class=\"string\">\"@drawable/toefl_icon\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"托福\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"10sp\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/ll_senior\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"left\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">tools:layout_gravity</span>=<span class=\"string\">\"left|bottom\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ImageView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"26dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"28dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:scaleType</span>=<span class=\"string\">\"fitXY\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:src</span>=<span class=\"string\">\"@drawable/senior_icon\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"高中\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"10sp\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/ll_junior\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"left\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">tools:layout_gravity</span>=<span class=\"string\">\"left|center_vertical\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ImageView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"22dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:scaleType</span>=<span class=\"string\">\"fitXY\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:src</span>=<span class=\"string\">\"@drawable/junior_icon\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"初中\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"10sp\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/ll_target\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"44dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"60dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/drip_orange\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:paddingTop</span>=<span class=\"string\">\"9dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">tools:layout_marginTop</span>=<span class=\"string\">\"100dp\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"第\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#ffffff\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"11sp\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"7\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#ffffff\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"20sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textStyle</span>=<span class=\"string\">\"bold\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"阶\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#ffffff\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"11sp\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">FrameLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/fl_current\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"34dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"46dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/drip_yellow\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">tools:layout_marginTop</span>=<span class=\"string\">\"180dp\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">com.facebook.drawee.view.SimpleDraweeView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_marginTop</span>=<span class=\"string\">\"2dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">app:placeholderImage</span>=<span class=\"string\">\"@drawable/small_boy\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">FrameLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">FrameLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/fl_current_text\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"当前年级 三年级上\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"9sp\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">FrameLayout</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h3 id=\"控件预览\"><a class=\"header-anchor\" href=\"#控件预览\">¶</a>控件预览</h3>\n<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsop2jaj42j20f10hatbw.jpg\" alt=\"\"></p>","more":"<p>上面这个图片是最近项目中要实现的一个效果，圆弧是一个四分之一的半圆，很容易实现；但是黄色圆环部分有一部分是橘色的弧线，并且橘色弧线要和黄色圆环部分完全重合，其实如果通过改变画圆环的角度，也是可以画出橘色部分的弧线的，但是如果黄色的曲线不是圆环，而是贝塞尔曲线或者其他不规则曲线的话，要使得另外一段曲线完全和前面这段曲线某一部分完全重合的话，就需要使用PathMeasure来完成这个操作了。</p>\n<h3 id=\"pathmeasure相关函数\"><a class=\"header-anchor\" href=\"#pathmeasure相关函数\">¶</a>PathMeasure相关函数</h3>\n<ol>\n<li>setPath(Path path,boolean forceClosed)\n<ul>\n<li>将Path和PathMeasure进行绑定.第一个参数是传入一个Path，代表我们需要进行测量的Path，第二个参数代表是否闭合，如果一段Path不是闭合的，但是forceClosed传true的话，就会按照闭合路径来测量这一段Path，比如计算路径长度就是计算的闭合的长度，但是path本身是没有这么长的。如果本来就是闭合path，这个参数就无所谓了。</li>\n</ul>\n</li>\n<li>getLength()\n<ul>\n<li>计算Path的长度</li>\n</ul>\n</li>\n<li>getSegment(float startD, float stopD, Path dst, boolean startWithMoveTo)\n<ul>\n<li>获取一段区间内的path，并生成一个新的对象，用dst来接收；第一个参数是起始长度，第二个参数是终止长度，第四个参数代表是否强制覆盖dst，如果设置为faslse，则每一次调用该方法，dst都会在已有path的基础上添加一段新path，如果设置为true，则dst会重新赋值，之前的path的值就都被覆盖了。</li>\n</ul>\n</li>\n<li>nextContour()\n<ul>\n<li>nextContour()方法用的比较少，比较大部分情况下都只会有一个Path而不是多个，毕竟这样会增加Path的复杂度，但是如果真有一个Path，包含了多个Path，那么通过nextContour这个方法，就可以进行切换，同时，默认的API，例如getLength，获取的也是当前的这段Path所对应的长度，而不是所有的Path的长度，同时，nextContour获取Path的顺序，与Path的添加顺序是相同的。</li>\n</ul>\n</li>\n<li>getPosTan (float distance, float[] pos, float[] tan)\n<ul>\n<li>获取某个位置的坐标和正切值，分别赋值给pos和tan。</li>\n</ul>\n</li>\n</ol>\n<p>通过上面的几个方法，我们就能完成今天的demo了。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CurveView</span> <span class=\"keyword\">extends</span> <span class=\"title\">View</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Paint mPaint;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> PathMeasure mPathMeasure;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Path mPath;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Path destPath;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> strokeWidth;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Paint orangePaint;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span> width;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span> height;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>[] leftTop;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>[] rightBottom;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>[] rightTop;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>[] point1;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>[] point2;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>[] point3;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Paint pointPaint;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Paint jianTouPaint;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>[] pointCurrent;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>[] pointTarget;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CurveView</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context);</span><br><span class=\"line\">        initView();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CurveView</span><span class=\"params\">(Context context, @Nullable AttributeSet attrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs);</span><br><span class=\"line\">        initView();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CurveView</span><span class=\"params\">(Context context, @Nullable AttributeSet attrs, <span class=\"keyword\">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs, defStyleAttr);</span><br><span class=\"line\">        initView();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">initView</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        strokeWidth = DensityU.dip2px(getContext(), <span class=\"number\">15</span>);</span><br><span class=\"line\">        mPaint = <span class=\"keyword\">new</span> Paint(Paint.ANTI_ALIAS_FLAG);</span><br><span class=\"line\">        mPaint.setColor(Color.parseColor(<span class=\"string\">\"#ffe48a\"</span>));</span><br><span class=\"line\">        mPaint.setStrokeWidth(strokeWidth);</span><br><span class=\"line\">        mPaint.setStyle(Style.STROKE);</span><br><span class=\"line\">        mPaint.setStrokeCap(Cap.ROUND);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        jianTouPaint = <span class=\"keyword\">new</span> Paint(Paint.ANTI_ALIAS_FLAG);</span><br><span class=\"line\">        jianTouPaint.setColor(Color.parseColor(<span class=\"string\">\"#ffe48a\"</span>));</span><br><span class=\"line\">        jianTouPaint.setStyle(Style.FILL_AND_STROKE);</span><br><span class=\"line\">        jianTouPaint.setStrokeWidth(DensityU.dip2px(getContext(), <span class=\"number\">4</span>));</span><br><span class=\"line\">        jianTouPaint.setStrokeCap(Cap.ROUND);</span><br><span class=\"line\">        jianTouPaint.setStrokeJoin(Join.ROUND);</span><br><span class=\"line\"></span><br><span class=\"line\">        orangePaint = <span class=\"keyword\">new</span> Paint(Paint.ANTI_ALIAS_FLAG);</span><br><span class=\"line\">        orangePaint.setColor(Color.parseColor(<span class=\"string\">\"#ff7f00\"</span>));</span><br><span class=\"line\">        orangePaint.setStrokeCap(Cap.ROUND);</span><br><span class=\"line\">        orangePaint.setStrokeWidth(strokeWidth);</span><br><span class=\"line\">        orangePaint.setStyle(Style.STROKE);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        pointPaint = <span class=\"keyword\">new</span> Paint(Paint.ANTI_ALIAS_FLAG);</span><br><span class=\"line\">        pointPaint.setStyle(Style.STROKE);</span><br><span class=\"line\">        pointPaint.setStrokeWidth(strokeWidth);</span><br><span class=\"line\">        pointPaint.setStrokeCap(Cap.ROUND);</span><br><span class=\"line\">        pointPaint.setColor(Color.RED);</span><br><span class=\"line\">        mPathMeasure = <span class=\"keyword\">new</span> PathMeasure();</span><br><span class=\"line\">        mPath = <span class=\"keyword\">new</span> Path();</span><br><span class=\"line\">        destPath = <span class=\"keyword\">new</span> Path();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onSizeChanged</span><span class=\"params\">(<span class=\"keyword\">int</span> w, <span class=\"keyword\">int</span> h, <span class=\"keyword\">int</span> oldw, <span class=\"keyword\">int</span> oldh)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class=\"line\">        width = w - DensityU.dip2px(getContext(), <span class=\"number\">36</span>) + strokeWidth / <span class=\"number\">2f</span>;</span><br><span class=\"line\">        height = h;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        leftTop = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[]&#123;-(width - strokeWidth / <span class=\"number\">2f</span>), height - width - width + strokeWidth / <span class=\"number\">2f</span>&#125;;</span><br><span class=\"line\">        rightBottom = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[]&#123;width - strokeWidth / <span class=\"number\">2f</span>, height - strokeWidth / <span class=\"number\">2f</span>&#125;;</span><br><span class=\"line\">        rightTop = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[]&#123;rightBottom[<span class=\"number\">0</span>], leftTop[<span class=\"number\">1</span>]&#125;;</span><br><span class=\"line\">        RectF rectF = <span class=\"keyword\">new</span> RectF(leftTop[<span class=\"number\">0</span>], leftTop[<span class=\"number\">1</span>], rightBottom[<span class=\"number\">0</span>], rightBottom[<span class=\"number\">1</span>]);</span><br><span class=\"line\">        mPath.addArc(rectF, <span class=\"number\">0</span>, <span class=\"number\">88.4f</span>);</span><br><span class=\"line\">        mPathMeasure.setPath(mPath, <span class=\"keyword\">false</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">float</span> length = mPathMeasure.getLength();</span><br><span class=\"line\">        point1 = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">        point2 = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">        point3 = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">        pointCurrent = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">        pointTarget = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[<span class=\"number\">2</span>];</span><br><span class=\"line\">        <span class=\"comment\">//通过getPosTan方法，获取三个点的坐标，方便后面画小圆点</span></span><br><span class=\"line\">        mPathMeasure.getPosTan(<span class=\"number\">0</span>, point1, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">        mPathMeasure.getPosTan(length / <span class=\"number\">9F</span> * <span class=\"number\">2f</span>, point2, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">        mPathMeasure.getPosTan(length / <span class=\"number\">7F</span> * <span class=\"number\">3f</span>, point3, <span class=\"keyword\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">float</span> currentLength = length - DensityU.dip2px(getContext(), <span class=\"number\">50</span>);</span><br><span class=\"line\">        <span class=\"keyword\">float</span> targetLength = length - DensityU.dip2px(getContext(), <span class=\"number\">150</span>);</span><br><span class=\"line\">        mPathMeasure.getPosTan(targetLength, pointTarget, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">        mPathMeasure.getPosTan(currentLength, pointCurrent, <span class=\"keyword\">null</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//根据起点和终点位置的长度，生成新的Path.</span></span><br><span class=\"line\">        mPathMeasure.getSegment(targetLength, currentLength, destPath, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onMeasure</span><span class=\"params\">(<span class=\"keyword\">int</span> widthMeasureSpec, <span class=\"keyword\">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);</span><br><span class=\"line\">        setMeasuredDimension(widthSpecSize, (<span class=\"keyword\">int</span>) (widthSpecSize + DensityU.dip2px(getContext(), <span class=\"number\">80</span>)- DensityU.dip2px(getContext(), <span class=\"number\">36</span>) + strokeWidth / <span class=\"number\">2f</span>));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDraw</span><span class=\"params\">(Canvas canvas)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onDraw(canvas);</span><br><span class=\"line\">        canvas.drawPath(mPath, mPaint);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        canvas.drawPath(destPath, orangePaint);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        Path path = <span class=\"keyword\">new</span> Path();</span><br><span class=\"line\">        path.moveTo(rightTop[<span class=\"number\">0</span>], height - width + strokeWidth / <span class=\"number\">2f</span> + <span class=\"number\">5</span>);</span><br><span class=\"line\">        path.lineTo(rightTop[<span class=\"number\">0</span>], height - width + strokeWidth / <span class=\"number\">2f</span> + <span class=\"number\">5</span> - DensityU.dip2px(getContext(), <span class=\"number\">60</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        canvas.drawPath(path, mPaint);</span><br><span class=\"line\">        path.reset();</span><br><span class=\"line\">        <span class=\"comment\">//绘制箭头</span></span><br><span class=\"line\">        path.moveTo(rightTop[<span class=\"number\">0</span>], height - width + strokeWidth / <span class=\"number\">2f</span> + <span class=\"number\">8</span> - DensityU.dip2px(getContext(), <span class=\"number\">60</span>));</span><br><span class=\"line\">        path.lineTo(rightTop[<span class=\"number\">0</span>] - DensityU.dip2px(getContext(), <span class=\"number\">32</span>), height - width + strokeWidth / <span class=\"number\">2f</span> - DensityU.dip2px(getContext(), <span class=\"number\">50</span>));</span><br><span class=\"line\">        path.lineTo(rightTop[<span class=\"number\">0</span>], height - width + strokeWidth / <span class=\"number\">2f</span> - DensityU.dip2px(getContext(), <span class=\"number\">80</span>));</span><br><span class=\"line\">        path.lineTo(rightTop[<span class=\"number\">0</span>] + DensityU.dip2px(getContext(), <span class=\"number\">32</span>), height - width + strokeWidth / <span class=\"number\">2f</span> - DensityU.dip2px(getContext(), <span class=\"number\">50</span>));</span><br><span class=\"line\">        path.close();</span><br><span class=\"line\">        canvas.drawPath(path, jianTouPaint);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        pointPaint.setColor(Color.parseColor(<span class=\"string\">\"#FF4D30\"</span>));</span><br><span class=\"line\">        canvas.drawPoint(point1[<span class=\"number\">0</span>], point1[<span class=\"number\">1</span>], pointPaint);</span><br><span class=\"line\">        pointPaint.setColor(Color.parseColor(<span class=\"string\">\"#70be1b\"</span>));</span><br><span class=\"line\">        canvas.drawPoint(point2[<span class=\"number\">0</span>], point2[<span class=\"number\">1</span>], pointPaint);</span><br><span class=\"line\">        pointPaint.setColor(Color.parseColor(<span class=\"string\">\"#68a8f3\"</span>));</span><br><span class=\"line\">        canvas.drawPoint(point3[<span class=\"number\">0</span>], point3[<span class=\"number\">1</span>], pointPaint);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">float</span>[] getPoint1() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> point1;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">float</span>[] getPoint2() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> point2;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">float</span>[] getPoint3() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> point3;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">float</span>[] getPointCurrent() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> pointCurrent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">float</span>[] getPointTarget() &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> pointTarget;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getStrokeWidth</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> strokeWidth;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>这样就完成了我们向上的抛物线箭头。\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsopmcun2hj20f40h9wfb.jpg\" alt=\"\"></p>\n<p>控件中还有一些其他的元素，这时候就需要给他们定位了，通过PathMeasure的getPosTan方法，我们是可以获取到所有位置的坐标的。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CurveLayout</span> <span class=\"keyword\">extends</span> <span class=\"title\">FrameLayout</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CurveLayout</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context);</span><br><span class=\"line\">        initView();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CurveLayout</span><span class=\"params\">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs);</span><br><span class=\"line\">        initView();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">CurveLayout</span><span class=\"params\">(Context context, AttributeSet attrs, <span class=\"keyword\">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs, defStyleAttr);</span><br><span class=\"line\">        initView();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">initView</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        LayoutInflater.from(getContext()).inflate(R.layout.curve_framelayout, <span class=\"keyword\">this</span>, <span class=\"keyword\">true</span>);</span><br><span class=\"line\">        <span class=\"keyword\">final</span> CurveView mCurveView = findViewById(R.id.curve_view);</span><br><span class=\"line\">        <span class=\"keyword\">final</span> RelativeLayout rlToefl = findViewById(R.id.rl_toefl);</span><br><span class=\"line\">        <span class=\"keyword\">final</span> RelativeLayout rlSenior = findViewById(R.id.rl_senior);</span><br><span class=\"line\">        <span class=\"keyword\">final</span> RelativeLayout rlJunior = findViewById(R.id.rl_junior);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">final</span> LinearLayout llToefl = findViewById(R.id.ll_toefl);</span><br><span class=\"line\">        <span class=\"keyword\">final</span> LinearLayout llSenior = findViewById(R.id.ll_senior);</span><br><span class=\"line\">        <span class=\"keyword\">final</span> LinearLayout llJunior = findViewById(R.id.ll_junior);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">final</span> LinearLayout llTarget = findViewById(R.id.ll_target);</span><br><span class=\"line\">        <span class=\"keyword\">final</span> FrameLayout flCurrent = findViewById(R.id.fl_current);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">final</span> FrameLayout flCurrentText = findViewById(R.id.fl_current_text);</span><br><span class=\"line\"></span><br><span class=\"line\">        mCurveView.post(<span class=\"keyword\">new</span> Runnable() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">run</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">                rlToefl.setTranslationY(mCurveView.getPoint1()[<span class=\"number\">1</span>] - DensityU.dip2px(getContext(), <span class=\"number\">30</span>));</span><br><span class=\"line\">                rlSenior.setTranslationY(mCurveView.getPoint2()[<span class=\"number\">1</span>] - rlSenior.getHeight() + DensityU.dip2px(getContext(), <span class=\"number\">5</span>));</span><br><span class=\"line\">                rlJunior.setTranslationY(mCurveView.getPoint3()[<span class=\"number\">1</span>] - rlJunior.getHeight() + DensityU.dip2px(getContext(), <span class=\"number\">5</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">                llToefl.setTranslationY(mCurveView.getPoint1()[<span class=\"number\">1</span>] - DensityU.dip2px(getContext(), <span class=\"number\">10</span>));</span><br><span class=\"line\">                llSenior.setTranslationY(mCurveView.getPoint2()[<span class=\"number\">1</span>] - DensityU.dip2px(getContext(), <span class=\"number\">10</span>));</span><br><span class=\"line\">                llJunior.setTranslationY(mCurveView.getPoint3()[<span class=\"number\">1</span>] - DensityU.dip2px(getContext(), <span class=\"number\">10</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">                rlToefl.setTranslationX(mCurveView.getPoint1()[<span class=\"number\">0</span>] - getWidth() - DensityU.dip2px(getContext(), <span class=\"number\">10</span>));</span><br><span class=\"line\">                rlSenior.setTranslationX(mCurveView.getPoint2()[<span class=\"number\">0</span>] - getWidth() - DensityU.dip2px(getContext(), <span class=\"number\">10</span>));</span><br><span class=\"line\">                rlJunior.setTranslationX(mCurveView.getPoint3()[<span class=\"number\">0</span>] - getWidth() - DensityU.dip2px(getContext(), <span class=\"number\">10</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">                llToefl.setTranslationX(mCurveView.getPoint1()[<span class=\"number\">0</span>] + DensityU.dip2px(getContext(), <span class=\"number\">10</span>));</span><br><span class=\"line\">                llSenior.setTranslationX(mCurveView.getPoint2()[<span class=\"number\">0</span>] + DensityU.dip2px(getContext(), <span class=\"number\">20</span>));</span><br><span class=\"line\">                llJunior.setTranslationX(mCurveView.getPoint3()[<span class=\"number\">0</span>] + DensityU.dip2px(getContext(), <span class=\"number\">20</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                llTarget.setTranslationX(mCurveView.getPointTarget()[<span class=\"number\">0</span>] - llTarget.getWidth() / <span class=\"number\">2</span>);</span><br><span class=\"line\">                llTarget.setTranslationY(mCurveView.getPointTarget()[<span class=\"number\">1</span>] - llTarget.getHeight() - DensityU.dip2px(getContext(), <span class=\"number\">8</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">                flCurrent.setTranslationX(mCurveView.getPointCurrent()[<span class=\"number\">0</span>] - flCurrent.getWidth() / <span class=\"number\">2</span> - DensityU.dip2px(getContext(), <span class=\"number\">2</span>));</span><br><span class=\"line\">                flCurrent.setTranslationY(mCurveView.getPointCurrent()[<span class=\"number\">1</span>] - flCurrent.getHeight() - DensityU.dip2px(getContext(), <span class=\"number\">3</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">                flCurrentText.setTranslationX(mCurveView.getPointCurrent()[<span class=\"number\">0</span>] - flCurrent.getWidth() / <span class=\"number\">2</span> - DensityU.dip2px(getContext(), <span class=\"number\">2</span>));</span><br><span class=\"line\">                flCurrentText.setTranslationY(mCurveView.getPointCurrent()[<span class=\"number\">1</span>] + DensityU.dip2px(getContext(), <span class=\"number\">13</span>));</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>下面是组合控件用到的一个布局：curve_framelayout</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br><span class=\"line\">293</span><br><span class=\"line\">294</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">FrameLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:app</span>=<span class=\"string\">\"http://schemas.android.com/apk/res-auto\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:tools</span>=<span class=\"string\">\"http://schemas.android.com/tools\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_marginLeft</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">tools:showIn</span>=<span class=\"string\">\"@layout/activity_main\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">lieeber.com.guihua.CurveView</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/curve_view\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_marginBottom</span>=<span class=\"string\">\"20dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_marginRight</span>=<span class=\"string\">\"15dp\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/rl_toefl\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"right\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tv_toefl_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"8.8\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#ff0000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"30sp\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_alignBottom</span>=<span class=\"string\">\"@+id/tv_toefl_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_marginBottom</span>=<span class=\"string\">\"7dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_toRightOf</span>=<span class=\"string\">\"@+id/tv_toefl_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"万小学生学到托福难度课程\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#ff0000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"14sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textStyle</span>=<span class=\"string\">\"bold\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_below</span>=<span class=\"string\">\"@+id/tv_toefl_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center_vertical\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">com.facebook.drawee.view.SimpleDraweeView</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/iv_avatar\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"40dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"40dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_marginRight</span>=<span class=\"string\">\"5dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">app:placeholderImage</span>=<span class=\"string\">\"@drawable/small_boy\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">app:roundAsCircle</span>=<span class=\"string\">\"true\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tv_desc\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_marginTop</span>=<span class=\"string\">\"8dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_toRightOf</span>=<span class=\"string\">\"@+id/iv_avatar\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"六年级孩子与外教交流托福雅思难度话题\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"8sp\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_below</span>=<span class=\"string\">\"@+id/tv_desc\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_toRightOf</span>=<span class=\"string\">\"@+id/iv_avatar\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:text</span>=<span class=\"string\">\"成都泡桐树小学 六年级 牟天恒\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#888888\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"7sp\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/rl_senior\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"right\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">tools:layout_gravity</span>=<span class=\"string\">\"right|center_vertical\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tv_senior_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"62\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#FF000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"30sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textStyle</span>=<span class=\"string\">\"bold\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_alignBottom</span>=<span class=\"string\">\"@+id/tv_senior_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_marginBottom</span>=<span class=\"string\">\"7dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_toRightOf</span>=<span class=\"string\">\"@+id/tv_senior_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"万小学生\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#FF000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"10sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textStyle</span>=<span class=\"string\">\"bold\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_below</span>=<span class=\"string\">\"@+id/tv_senior_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"学到高中难度课程\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#FF000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"11sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textStyle</span>=<span class=\"string\">\"bold\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/rl_junior\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"right\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">tools:layout_gravity</span>=<span class=\"string\">\"right|bottom\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tv_junior_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"218\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#FF000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"30sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textStyle</span>=<span class=\"string\">\"bold\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            /&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_alignBottom</span>=<span class=\"string\">\"@+id/tv_junior_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_marginBottom</span>=<span class=\"string\">\"7dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_toRightOf</span>=<span class=\"string\">\"@+id/tv_junior_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"万小学生\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#FF000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"10sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textStyle</span>=<span class=\"string\">\"bold\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_below</span>=<span class=\"string\">\"@+id/tv_junior_num\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"学到初中难度课程\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#FF000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"11sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textStyle</span>=<span class=\"string\">\"bold\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/ll_toefl\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"left\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">tools:layout_gravity</span>=<span class=\"string\">\"left\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ImageView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"39dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"24dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:scaleType</span>=<span class=\"string\">\"fitXY\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:src</span>=<span class=\"string\">\"@drawable/toefl_icon\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"托福\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"10sp\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/ll_senior\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"left\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">tools:layout_gravity</span>=<span class=\"string\">\"left|bottom\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ImageView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"26dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"28dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:scaleType</span>=<span class=\"string\">\"fitXY\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:src</span>=<span class=\"string\">\"@drawable/senior_icon\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"高中\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"10sp\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/ll_junior\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"left\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">tools:layout_gravity</span>=<span class=\"string\">\"left|center_vertical\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">ImageView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"22dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:scaleType</span>=<span class=\"string\">\"fitXY\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:src</span>=<span class=\"string\">\"@drawable/junior_icon\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"初中\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"10sp\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/ll_target\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"44dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"60dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/drip_orange\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:paddingTop</span>=<span class=\"string\">\"9dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">tools:layout_marginTop</span>=<span class=\"string\">\"100dp\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"第\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#ffffff\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"11sp\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"7\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#ffffff\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"20sp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textStyle</span>=<span class=\"string\">\"bold\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"阶\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#ffffff\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"11sp\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">FrameLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/fl_current\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"34dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"46dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/drip_yellow\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">tools:layout_marginTop</span>=<span class=\"string\">\"180dp\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">com.facebook.drawee.view.SimpleDraweeView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_marginTop</span>=<span class=\"string\">\"2dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">app:placeholderImage</span>=<span class=\"string\">\"@drawable/small_boy\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">FrameLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">FrameLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/fl_current_text\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"当前年级 三年级上\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textColor</span>=<span class=\"string\">\"#000000\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:textSize</span>=<span class=\"string\">\"9sp\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">FrameLayout</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>"},{"title":"Canvas对绘制的辅助","date":"2017-10-02T04:18:15.000Z","_content":"\n### Canvas对绘制的辅助思维导图\n\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fson1xokr8j222e0sg7bj.jpg)\n<!-- more -->\n### 范围裁切\n1. clipRect\n2. clipPath\n### 几何变换\n1. 使用 Canvas 来做常见的二维变换\n    * translate 平移\n    * rotate 旋转\n    * scale 缩放\n    * skew 错切\n2. 使用 Matrix 来做变换\n    * 使用 Matrix 来做常见变换\n        * 创建 Matrix 对象\n        * 调用 Matrix 的 pre/postTranslate/Rotate/Scale/Skew() 方法来设置几何变换\n        * 使用 Canvas.setMatrix(matrix) 或 Canvas.concat(matrix) 来把几何变换应用到 Canvas\n    * 使用 Matrix 来做自定义变换\n        * Matrix.setPolyToPoly\n3. 使用 Camera 来做三维变换\n    * Camera.rotate*() 三维旋转\n        * rotateX(deg) rotateY(deg) rotateZ(deg) rotate(x, y, z)\n        * Camera 和 Canvas 一样也需要保存和恢复状态才能正常绘制\n    * Camera.translate\n    * Camera.setLocation(x, y, z) 设置虚拟相机的位置\n        * 它的参数的单位不是像素，而是 inch，英寸","source":"_posts/自定义控件-Canvas对绘制的辅助.md","raw":"---\ntitle: Canvas对绘制的辅助\ntags:\n  - 自定义控件\n  - Canvas\ncategories:\n  - 自定义控件\ndate: 2017-10-02 12:18:15\n---\n\n### Canvas对绘制的辅助思维导图\n\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fson1xokr8j222e0sg7bj.jpg)\n<!-- more -->\n### 范围裁切\n1. clipRect\n2. clipPath\n### 几何变换\n1. 使用 Canvas 来做常见的二维变换\n    * translate 平移\n    * rotate 旋转\n    * scale 缩放\n    * skew 错切\n2. 使用 Matrix 来做变换\n    * 使用 Matrix 来做常见变换\n        * 创建 Matrix 对象\n        * 调用 Matrix 的 pre/postTranslate/Rotate/Scale/Skew() 方法来设置几何变换\n        * 使用 Canvas.setMatrix(matrix) 或 Canvas.concat(matrix) 来把几何变换应用到 Canvas\n    * 使用 Matrix 来做自定义变换\n        * Matrix.setPolyToPoly\n3. 使用 Camera 来做三维变换\n    * Camera.rotate*() 三维旋转\n        * rotateX(deg) rotateY(deg) rotateZ(deg) rotate(x, y, z)\n        * Camera 和 Canvas 一样也需要保存和恢复状态才能正常绘制\n    * Camera.translate\n    * Camera.setLocation(x, y, z) 设置虚拟相机的位置\n        * 它的参数的单位不是像素，而是 inch，英寸","slug":"自定义控件-Canvas对绘制的辅助","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv54d001z58ugbzpy3p75","content":"<h3 id=\"canvas对绘制的辅助思维导图\"><a class=\"header-anchor\" href=\"#canvas对绘制的辅助思维导图\">¶</a>Canvas对绘制的辅助思维导图</h3>\n<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fson1xokr8j222e0sg7bj.jpg\" alt=\"\"></p>\n<a id=\"more\"></a>\n<h3 id=\"范围裁切\"><a class=\"header-anchor\" href=\"#范围裁切\">¶</a>范围裁切</h3>\n<ol>\n<li>clipRect</li>\n<li>clipPath</li>\n</ol>\n<h3 id=\"几何变换\"><a class=\"header-anchor\" href=\"#几何变换\">¶</a>几何变换</h3>\n<ol>\n<li>使用 Canvas 来做常见的二维变换\n<ul>\n<li>translate 平移</li>\n<li>rotate 旋转</li>\n<li>scale 缩放</li>\n<li>skew 错切</li>\n</ul>\n</li>\n<li>使用 Matrix 来做变换\n<ul>\n<li>使用 Matrix 来做常见变换\n<ul>\n<li>创建 Matrix 对象</li>\n<li>调用 Matrix 的 pre/postTranslate/Rotate/Scale/Skew() 方法来设置几何变换</li>\n<li>使用 Canvas.setMatrix(matrix) 或 Canvas.concat(matrix) 来把几何变换应用到 Canvas</li>\n</ul>\n</li>\n<li>使用 Matrix 来做自定义变换\n<ul>\n<li>Matrix.setPolyToPoly</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>使用 Camera 来做三维变换\n<ul>\n<li>Camera.rotate*() 三维旋转\n<ul>\n<li>rotateX(deg) rotateY(deg) rotateZ(deg) rotate(x, y, z)</li>\n<li>Camera 和 Canvas 一样也需要保存和恢复状态才能正常绘制</li>\n</ul>\n</li>\n<li>Camera.translate</li>\n<li>Camera.setLocation(x, y, z) 设置虚拟相机的位置\n<ul>\n<li>它的参数的单位不是像素，而是 inch，英寸</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h3 id=\"canvas对绘制的辅助思维导图\"><a class=\"header-anchor\" href=\"#canvas对绘制的辅助思维导图\">¶</a>Canvas对绘制的辅助思维导图</h3>\n<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fson1xokr8j222e0sg7bj.jpg\" alt=\"\"></p>","more":"<h3 id=\"范围裁切\"><a class=\"header-anchor\" href=\"#范围裁切\">¶</a>范围裁切</h3>\n<ol>\n<li>clipRect</li>\n<li>clipPath</li>\n</ol>\n<h3 id=\"几何变换\"><a class=\"header-anchor\" href=\"#几何变换\">¶</a>几何变换</h3>\n<ol>\n<li>使用 Canvas 来做常见的二维变换\n<ul>\n<li>translate 平移</li>\n<li>rotate 旋转</li>\n<li>scale 缩放</li>\n<li>skew 错切</li>\n</ul>\n</li>\n<li>使用 Matrix 来做变换\n<ul>\n<li>使用 Matrix 来做常见变换\n<ul>\n<li>创建 Matrix 对象</li>\n<li>调用 Matrix 的 pre/postTranslate/Rotate/Scale/Skew() 方法来设置几何变换</li>\n<li>使用 Canvas.setMatrix(matrix) 或 Canvas.concat(matrix) 来把几何变换应用到 Canvas</li>\n</ul>\n</li>\n<li>使用 Matrix 来做自定义变换\n<ul>\n<li>Matrix.setPolyToPoly</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>使用 Camera 来做三维变换\n<ul>\n<li>Camera.rotate*() 三维旋转\n<ul>\n<li>rotateX(deg) rotateY(deg) rotateZ(deg) rotate(x, y, z)</li>\n<li>Camera 和 Canvas 一样也需要保存和恢复状态才能正常绘制</li>\n</ul>\n</li>\n<li>Camera.translate</li>\n<li>Camera.setLocation(x, y, z) 设置虚拟相机的位置\n<ul>\n<li>它的参数的单位不是像素，而是 inch，英寸</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>"},{"title":"文字的绘制","date":"2017-10-02T04:18:15.000Z","_content":"\n### 文字的绘制思维导图\n\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fson861mekj20zk0s3tgf.jpg)\n<!-- more -->\n### Canvas 绘制文字的方式\n1. drawText\n2. drawTextRun\n    * 可以设置文字的上下文（汉字和英文用不到）\n    * 设置文字的方向\n3. drawTextOnPath\n    * 沿着一条 Path 来绘制文字\n4. StaticLayout\n    * 解决换行的问题\n###  Paint 对文字绘制的辅助\n1. 设置显示效果类\n    *  setTextSize：设置文字大小\n    * setTypeface：设置字体\n    * setFakeBoldText：是否使用伪粗体\n    * setStrikeThruText：是否加删除线\n    * setUnderlineText：是否加下划线\n    * setTextSkewX：设置文字横向错切角度，即文字倾斜度\n    * setTextScaleX：设置文字横向放缩\n    * setLetterSpacing：设置字符间距\n    * setFontFeatureSettings：用 CSS 的 font-feature-settings 的方式来设置文字\n    * setTextAlign：设置文字的对齐方式。一共有三个值：LEFT CETNER 和 RIGHT。默认值为 LEFT。\n    * setTextLocale/setTextLocales：设置绘制所使用的 Locale\n    * setHinting：通过向字体中加入 hinting 信息，让矢量字体在尺寸过小的时候得到针对性的修正，从而提高显示效果\n    * setElegantTextHeight\n        * 把「大高个」文字的高度恢复为原始高度；\n        * 增大每行文字的上下边界，来容纳被加高了的文字。\n    * setSubpixelText：是否开启次像素级的抗锯齿\n    * setLinearText\n2. 测量文字尺寸类\n    * getFontSpacing：* 获取推荐的行距。\n    * getFontMetrics\n        * 获取 Paint 的 FontMetrics\n            * baseline：* 文字显示的基准线\n            * ascent / descent：限制普通字符的顶部和底部范围\n            * top / bottom：限制所有字形（ glyph ）的顶部和底部范围\n            * leading：上行的 bottom 线和下行的 top 线的距离\n        * ascent 和 descent 这两个值还可以通过 Paint.ascent() 和 Paint.descent()\n    * getTextBounds：获取文字的显示范围\n    * measureText：测量文字的宽度并返回\n    * getTextWidths：获取字符串中每个字符的宽度，并把结果填入参数 widths\n    * breakText\n    * 光标相关\n        * getRunAdvance：对于一段文字，计算出某个字符处光标的 x 坐标。 start end 是文字的起始和结束坐标；contextStart contextEnd 是上下文的起始和结束坐标；isRtl 是文字的方向；offset 是字数的偏移，即计算第几个字符处的光标。\n        * getOffsetForAdvance：给出一个位置的像素值，计算出文字中最接近这个位置的字符偏移量（即第几个字符最接近这个坐标）。\n    * hasGlyph：检查指定的字符串中是否是一个单独的字形。\n","source":"_posts/自定义控件-文字的绘制.md","raw":"---\ntitle: 文字的绘制\ntags:\n  - 自定义控件\n  - Canvas\n  - Paint\ncategories:\n  - 自定义控件\ndate: 2017-10-02 12:18:15\n---\n\n### 文字的绘制思维导图\n\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fson861mekj20zk0s3tgf.jpg)\n<!-- more -->\n### Canvas 绘制文字的方式\n1. drawText\n2. drawTextRun\n    * 可以设置文字的上下文（汉字和英文用不到）\n    * 设置文字的方向\n3. drawTextOnPath\n    * 沿着一条 Path 来绘制文字\n4. StaticLayout\n    * 解决换行的问题\n###  Paint 对文字绘制的辅助\n1. 设置显示效果类\n    *  setTextSize：设置文字大小\n    * setTypeface：设置字体\n    * setFakeBoldText：是否使用伪粗体\n    * setStrikeThruText：是否加删除线\n    * setUnderlineText：是否加下划线\n    * setTextSkewX：设置文字横向错切角度，即文字倾斜度\n    * setTextScaleX：设置文字横向放缩\n    * setLetterSpacing：设置字符间距\n    * setFontFeatureSettings：用 CSS 的 font-feature-settings 的方式来设置文字\n    * setTextAlign：设置文字的对齐方式。一共有三个值：LEFT CETNER 和 RIGHT。默认值为 LEFT。\n    * setTextLocale/setTextLocales：设置绘制所使用的 Locale\n    * setHinting：通过向字体中加入 hinting 信息，让矢量字体在尺寸过小的时候得到针对性的修正，从而提高显示效果\n    * setElegantTextHeight\n        * 把「大高个」文字的高度恢复为原始高度；\n        * 增大每行文字的上下边界，来容纳被加高了的文字。\n    * setSubpixelText：是否开启次像素级的抗锯齿\n    * setLinearText\n2. 测量文字尺寸类\n    * getFontSpacing：* 获取推荐的行距。\n    * getFontMetrics\n        * 获取 Paint 的 FontMetrics\n            * baseline：* 文字显示的基准线\n            * ascent / descent：限制普通字符的顶部和底部范围\n            * top / bottom：限制所有字形（ glyph ）的顶部和底部范围\n            * leading：上行的 bottom 线和下行的 top 线的距离\n        * ascent 和 descent 这两个值还可以通过 Paint.ascent() 和 Paint.descent()\n    * getTextBounds：获取文字的显示范围\n    * measureText：测量文字的宽度并返回\n    * getTextWidths：获取字符串中每个字符的宽度，并把结果填入参数 widths\n    * breakText\n    * 光标相关\n        * getRunAdvance：对于一段文字，计算出某个字符处光标的 x 坐标。 start end 是文字的起始和结束坐标；contextStart contextEnd 是上下文的起始和结束坐标；isRtl 是文字的方向；offset 是字数的偏移，即计算第几个字符处的光标。\n        * getOffsetForAdvance：给出一个位置的像素值，计算出文字中最接近这个位置的字符偏移量（即第几个字符最接近这个坐标）。\n    * hasGlyph：检查指定的字符串中是否是一个单独的字形。\n","slug":"自定义控件-文字的绘制","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv54e002158ugu5b6j4q0","content":"<h3 id=\"文字的绘制思维导图\"><a class=\"header-anchor\" href=\"#文字的绘制思维导图\">¶</a>文字的绘制思维导图</h3>\n<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fson861mekj20zk0s3tgf.jpg\" alt=\"\"></p>\n<a id=\"more\"></a>\n<h3 id=\"canvas-绘制文字的方式\"><a class=\"header-anchor\" href=\"#canvas-绘制文字的方式\">¶</a>Canvas 绘制文字的方式</h3>\n<ol>\n<li>drawText</li>\n<li>drawTextRun\n<ul>\n<li>可以设置文字的上下文（汉字和英文用不到）</li>\n<li>设置文字的方向</li>\n</ul>\n</li>\n<li>drawTextOnPath\n<ul>\n<li>沿着一条 Path 来绘制文字</li>\n</ul>\n</li>\n<li>StaticLayout\n<ul>\n<li>解决换行的问题</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"paint-对文字绘制的辅助\"><a class=\"header-anchor\" href=\"#paint-对文字绘制的辅助\">¶</a>Paint 对文字绘制的辅助</h3>\n<ol>\n<li>设置显示效果类\n<ul>\n<li>setTextSize：设置文字大小</li>\n<li>setTypeface：设置字体</li>\n<li>setFakeBoldText：是否使用伪粗体</li>\n<li>setStrikeThruText：是否加删除线</li>\n<li>setUnderlineText：是否加下划线</li>\n<li>setTextSkewX：设置文字横向错切角度，即文字倾斜度</li>\n<li>setTextScaleX：设置文字横向放缩</li>\n<li>setLetterSpacing：设置字符间距</li>\n<li>setFontFeatureSettings：用 CSS 的 font-feature-settings 的方式来设置文字</li>\n<li>setTextAlign：设置文字的对齐方式。一共有三个值：LEFT CETNER 和 RIGHT。默认值为 LEFT。</li>\n<li>setTextLocale/setTextLocales：设置绘制所使用的 Locale</li>\n<li>setHinting：通过向字体中加入 hinting 信息，让矢量字体在尺寸过小的时候得到针对性的修正，从而提高显示效果</li>\n<li>setElegantTextHeight\n<ul>\n<li>把「大高个」文字的高度恢复为原始高度；</li>\n<li>增大每行文字的上下边界，来容纳被加高了的文字。</li>\n</ul>\n</li>\n<li>setSubpixelText：是否开启次像素级的抗锯齿</li>\n<li>setLinearText</li>\n</ul>\n</li>\n<li>测量文字尺寸类\n<ul>\n<li>getFontSpacing：* 获取推荐的行距。</li>\n<li>getFontMetrics\n<ul>\n<li>获取 Paint 的 FontMetrics\n<ul>\n<li>baseline：* 文字显示的基准线</li>\n<li>ascent / descent：限制普通字符的顶部和底部范围</li>\n<li>top / bottom：限制所有字形（ glyph ）的顶部和底部范围</li>\n<li>leading：上行的 bottom 线和下行的 top 线的距离</li>\n</ul>\n</li>\n<li>ascent 和 descent 这两个值还可以通过 Paint.ascent() 和 Paint.descent()</li>\n</ul>\n</li>\n<li>getTextBounds：获取文字的显示范围</li>\n<li>measureText：测量文字的宽度并返回</li>\n<li>getTextWidths：获取字符串中每个字符的宽度，并把结果填入参数 widths</li>\n<li>breakText</li>\n<li>光标相关\n<ul>\n<li>getRunAdvance：对于一段文字，计算出某个字符处光标的 x 坐标。 start end 是文字的起始和结束坐标；contextStart contextEnd 是上下文的起始和结束坐标；isRtl 是文字的方向；offset 是字数的偏移，即计算第几个字符处的光标。</li>\n<li>getOffsetForAdvance：给出一个位置的像素值，计算出文字中最接近这个位置的字符偏移量（即第几个字符最接近这个坐标）。</li>\n</ul>\n</li>\n<li>hasGlyph：检查指定的字符串中是否是一个单独的字形。</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h3 id=\"文字的绘制思维导图\"><a class=\"header-anchor\" href=\"#文字的绘制思维导图\">¶</a>文字的绘制思维导图</h3>\n<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fson861mekj20zk0s3tgf.jpg\" alt=\"\"></p>","more":"<h3 id=\"canvas-绘制文字的方式\"><a class=\"header-anchor\" href=\"#canvas-绘制文字的方式\">¶</a>Canvas 绘制文字的方式</h3>\n<ol>\n<li>drawText</li>\n<li>drawTextRun\n<ul>\n<li>可以设置文字的上下文（汉字和英文用不到）</li>\n<li>设置文字的方向</li>\n</ul>\n</li>\n<li>drawTextOnPath\n<ul>\n<li>沿着一条 Path 来绘制文字</li>\n</ul>\n</li>\n<li>StaticLayout\n<ul>\n<li>解决换行的问题</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"paint-对文字绘制的辅助\"><a class=\"header-anchor\" href=\"#paint-对文字绘制的辅助\">¶</a>Paint 对文字绘制的辅助</h3>\n<ol>\n<li>设置显示效果类\n<ul>\n<li>setTextSize：设置文字大小</li>\n<li>setTypeface：设置字体</li>\n<li>setFakeBoldText：是否使用伪粗体</li>\n<li>setStrikeThruText：是否加删除线</li>\n<li>setUnderlineText：是否加下划线</li>\n<li>setTextSkewX：设置文字横向错切角度，即文字倾斜度</li>\n<li>setTextScaleX：设置文字横向放缩</li>\n<li>setLetterSpacing：设置字符间距</li>\n<li>setFontFeatureSettings：用 CSS 的 font-feature-settings 的方式来设置文字</li>\n<li>setTextAlign：设置文字的对齐方式。一共有三个值：LEFT CETNER 和 RIGHT。默认值为 LEFT。</li>\n<li>setTextLocale/setTextLocales：设置绘制所使用的 Locale</li>\n<li>setHinting：通过向字体中加入 hinting 信息，让矢量字体在尺寸过小的时候得到针对性的修正，从而提高显示效果</li>\n<li>setElegantTextHeight\n<ul>\n<li>把「大高个」文字的高度恢复为原始高度；</li>\n<li>增大每行文字的上下边界，来容纳被加高了的文字。</li>\n</ul>\n</li>\n<li>setSubpixelText：是否开启次像素级的抗锯齿</li>\n<li>setLinearText</li>\n</ul>\n</li>\n<li>测量文字尺寸类\n<ul>\n<li>getFontSpacing：* 获取推荐的行距。</li>\n<li>getFontMetrics\n<ul>\n<li>获取 Paint 的 FontMetrics\n<ul>\n<li>baseline：* 文字显示的基准线</li>\n<li>ascent / descent：限制普通字符的顶部和底部范围</li>\n<li>top / bottom：限制所有字形（ glyph ）的顶部和底部范围</li>\n<li>leading：上行的 bottom 线和下行的 top 线的距离</li>\n</ul>\n</li>\n<li>ascent 和 descent 这两个值还可以通过 Paint.ascent() 和 Paint.descent()</li>\n</ul>\n</li>\n<li>getTextBounds：获取文字的显示范围</li>\n<li>measureText：测量文字的宽度并返回</li>\n<li>getTextWidths：获取字符串中每个字符的宽度，并把结果填入参数 widths</li>\n<li>breakText</li>\n<li>光标相关\n<ul>\n<li>getRunAdvance：对于一段文字，计算出某个字符处光标的 x 坐标。 start end 是文字的起始和结束坐标；contextStart contextEnd 是上下文的起始和结束坐标；isRtl 是文字的方向；offset 是字数的偏移，即计算第几个字符处的光标。</li>\n<li>getOffsetForAdvance：给出一个位置的像素值，计算出文字中最接近这个位置的字符偏移量（即第几个字符最接近这个坐标）。</li>\n</ul>\n</li>\n<li>hasGlyph：检查指定的字符串中是否是一个单独的字形。</li>\n</ul>\n</li>\n</ol>"},{"title":"自定义View绘制顺序","date":"2017-11-12T04:18:15.000Z","_content":"\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsonff5trdj20ru0c8dia.jpg)\n<!-- more -->\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsonfmwhs8j20q70e0tcc.jpg)","source":"_posts/自定义控件-自定义View绘制顺序.md","raw":"---\ntitle: 自定义View绘制顺序\ntags:\n  - 自定义控件\ncategories:\n  - 自定义控件\ndate: 2017-11-12 12:18:15\n---\n\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsonff5trdj20ru0c8dia.jpg)\n<!-- more -->\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsonfmwhs8j20q70e0tcc.jpg)","slug":"自定义控件-自定义View绘制顺序","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv54g002558ug7ym35ob9","content":"<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsonff5trdj20ru0c8dia.jpg\" alt=\"\"></p>\n<a id=\"more\"></a>\n<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsonfmwhs8j20q70e0tcc.jpg\" alt=\"\"></p>\n","site":{"data":{}},"excerpt":"<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsonff5trdj20ru0c8dia.jpg\" alt=\"\"></p>","more":"<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsonfmwhs8j20q70e0tcc.jpg\" alt=\"\"></p>"},{"title":"处理机调度和死锁","date":"2017-05-08T04:21:15.000Z","_content":"### 处理机调度的层次\n1. 高级调度\n    1. 高级调度又称为作业调度或长程调度，其主要功能是根据某种算法，把外存上处于后备队列中的那些作业调入内存，也就是说，它的调度对象是作业。\n    2. 作业：作业是一个比程序更为广泛的概念，它不仅包含了通常的程序和数据， 而且还应配有一份作业说明书，系统根据该说明书来对程序的运行进行控制。在批处理系 统中，是以作业为基本单位从外存调入内存的。\n    3. 作业步：在作业运行期间，每个作业都必须经过若干个相对独立， 又相互关联的顺序加工步骤才能得到结果，我们把其中的每一个加工步骤称为一个作业步。\n    4. 作业流：若干个作业进入系统后，被依次存放在外存上，这便形成了输入的作业流。\n    5. 作业控制块JCB：\n        - 为了管理和调度作业，在多道批处理系统中为每个作业设置了一个作业控制块，如同 进程控制块是进程在系统中存在的标志一样，它是作业在系统中存在的标志，其中保存了 系统对作业进行管理和调度所需的全部信息。\n        - 包含内容：作业标识、用户名称、用户帐户、作业类型(CPU 繁忙型、I/O 繁忙型、批 量型、终端型)、作业状态、调度信息(优先级、作业已运行时间)、资源需求(预计运行时间、 要求内存大小、要求 I/O 设备的类型和数量等)、进入系统时间、开始处理时间、作业完成 时间、作业退出时间、资源使用情况等。\n    6. 作业调度\n        - 作业调度的主要功能是根据作业控制块中的信息，审查系统能否满足用户作业的资源需求，以及按照一定的算法，从外存的后备队列中选取某些作业调入内存，并为它们创建 进程、分配必要的资源。然后再将新创建的进程插入就绪队列，准备执行。因此，有时也把作业调度称为接纳调度(Admission Scheduling)。\n        - 决定接纳多少个作业。\n        - 决定接纳哪些作业。\n<!-- more -->\n2. 低级调度\n    1. 通常也把低级调度(Low Level Scheduling)称为进程调度或短程调度(ShortTerm Scheduling)，它所调度的对象是进程(或内核级线程)。\n    2. 低级调度的功能\n        - 保存处理机的现场信息\n        - 按某种算法选取进程\n        - 把处理器分配给进程\n    3. 进程调度中的三个基本机制\n        - 排队器：为了提高进程调度的效率，应事先将系统中所有的就绪进程按照一定的方式排成一个或多个队列，以便调度程序能最快地找到它。\n        - 分派器（分派程序）：分派器把由进程调度程序所选定的进程，从就绪队列中取出该进程，然后进行上下文切换，将处理机分配给它\n        - 上下文切换机制\n    4. 进程调度方式\n        1. 非抢占方式。\n        2. 抢占方式。\n3. 中级调度\n    1. 中级调度来决定把外存上的那些又具备运行条件的就绪进程重新调入内存，并修改其状态为就绪状态，挂在就绪队列上等待进程调度。\n\n\n### 调度队列模型和调度准则\n1. 调度队列模型\n    1. 仅有进程调度的调度队列模型\n        - 任务在给定的时间片内已经完成，该进程便在释放处理机后进入完成状态\n        - 任务在本次分得的时间片内尚未完成，OS便将该任务再放入就绪队列的末尾\n        - 在执行期间，进程因为某事件而被阻塞后，被OS放入阻塞队列\n    2. 具有高级和低级调度的调度队列模型\n        - 就绪队列的形式。在批处理系统中，最常用的是最高优先权优先调度算法，相应地，最常用的就绪队列形式是优先权队列。\n        - 设置多个阻塞队列。\n    3. 同时具有三级调度的调度队列模型\n        - 当在 OS 中引入中级调度后，人们可把进程的就绪状态分为内存就绪(表示进程在内存中就绪)和外存就绪(进程在外存中就绪)。类似地，也可把阻塞状态进一步分成内存阻塞和外存阻塞两种状态。在调出操作的作用下，可使进程状态由内存就绪转为外存就绪，由内存阻塞转为外存阻塞；在中级调度的作用下，又可使外存就绪转为内存就绪。\n2. 选择调度方式和调度算法的若干准则\n    1. 面向用户准则\n        - 周转时间短：对每个用户而言，都希望自己作业的周转时间最短。但作为计算机系统的管理者，则总是希望能使平均周转时间最短，这不仅会有效地提高系统资源的利用率，而且可使大多数用户都感到满意。\n        - 响应时间快：常把响应时间的长短用来评价分时系统的性能，这是选择分时系统中进程调度算法的重要准则之一。\n        - 截止时间的保证：所谓截止时间，是指某任务必须开始执行的最迟时间，或必须完成的最迟时间。对于严格的实时系统，其调度方式和调度算法必须能保证这一点，否则将可能造成难以预料的后果。\n        - 优先权准则：在批处理、分时和实时系统中选择调度算法时，都可遵循优先权准则，以便让某些紧急的作业能得到及时处理。\n    2. 面向系统准则\n        - 系统吞吐量高\n        - 处理剂利用率好\n        - 各类资源的平衡利用\n\n### 调度算法\n1. 先来先服务调度算法\n    1. FCFS 算法比较有利于长作业(进程)，而不利于短作业(进程)。\n2. 短作业(进程)优先调度算法\n    1. SJF 调度算法能有效地降低作业的平均等待时间，提高系统吞吐量。\n    2. 该算法对长作业不利。\n    3. 该算法完全未考虑作业的紧迫程度，因而不能保证紧迫性作业(进程)会被及时处理。\n    4. 由于作业(进程)的长短只是根据用户所提供的估计执行时间而定的，而用户又可能会有意或无意地缩短其作业的估计运行时间，致使该算法不一定能真正做到短作业优先调度。\n3. 高优先权优先调度算法\n    1. 优先权调度算法的类型\n        - 非抢占式优先权算法:系统一旦把处理机分配给就绪队列中优先权最高的进程后，该进程便一直执行下去，直至完成；或因发生某事件使该进程放弃处理机时，系统方可再将处理机重新分配给另一优先权最高的进程。\n       - 抢占式优先权调度算法:在其执行期间，只要又出现了另一个其优先权更高的进程，进程调度程序就立即停止当前进程(原优先权最高的进程)的执行，重新将处理机分配给新到的优先权最高的进程。\n    2. 优先权的类型\n        - 静态优先权\n            - 静态优先权是在创建进程时确定的，且在进程的整个运行期间保持不变。\n            - 确定进程优先权的依据主要有如下三个方面:\n                - 进程类型。通常，系统进程(如接收进程、对换进程、磁盘 I/O 进程)的优先权高于一般用户进程的优先权。\n                - 进程对资源的需求。如进程的估计执行时间及内存需要量的多少，对这些要求少的进程应赋予较高的优先权。\n                - 用户要求。这是由用户进程的紧迫程度及用户所付费用的多少来确定优先权的。\n        - 动态优先权：动态优先权是指在创建进程时所赋予的优先权，是可以随进程的推进或随其等待时间的增加而改变的，以便获得更好的调度性能。\n    3. 高响应比优先调度算法\n        ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsoj1miiytj20ns0h9td0.jpg)\n\n4. 基于时间片的轮转调度算法\n    1. 时间片轮转法\n        - 基本原理：在早期的时间片轮转法中，系统将所有的就绪进程按先来先服务的原则排成一个队列，每次调度时，把 CPU 分配给队首进程，并令其执行一个时间片。\n        - 时间片大小的确定：时间片略大于一次典型的交互所需要的时间。这样可使大多数进程在一个时间片内完成。\n    2. 多级反馈队列调度算法\n        - 应设置多个就绪队列，并为各个队列富裕不同的优先级。\n        - 当一个新进程进入内存后，首先将他放入第一队列的末尾。按 FCFS 原则排队等待 调度。\n        - 仅当第一队列空闲时，调度程序才调度第二队列的进程运行。仅当第 1~(i- 1)队列均空时，才会调度第 i 队列中的进程运行。\n    3. 多级反馈队列调度算法的性能\n        - 多级反馈队列调度算法具有较好的性能，能很好地满足各种类型用户的需要。\n        - 终端型作业用户：由于终端型作业用户所提交的作业大多属于交互型作业，作业通 常较小，系统只要能使这些作业(进程)在第一队列所规定的时间片内完成，便可使终端型作 业用户都感到满意。\n        - 短批处理作业用户：对于很短的批处理型作业，开始时像终端型作业一样，如果仅在第一队列中执行一个时间片即可完成，便可获得与终端型作业一样的响应时间。对于稍长的作业，通常也只需在第二队列和第三队列各执行一个时间片即可完成，其周转时间仍然较短。\n        - 长批处理作业用户。对于长作业，它将依次在第 1，2，...，n 个队列中运行，然后再按轮转方式运行，用户不必担心其作业长期得不到处理。","source":"_posts/计算机操作系统-处理机调度和死锁.md","raw":"---\ntitle: 处理机调度和死锁\ntags:\n  - 处理机调度\ncategories:\n  - 操作系统\ndate: 2017-05-08 12:21:15\n---\n### 处理机调度的层次\n1. 高级调度\n    1. 高级调度又称为作业调度或长程调度，其主要功能是根据某种算法，把外存上处于后备队列中的那些作业调入内存，也就是说，它的调度对象是作业。\n    2. 作业：作业是一个比程序更为广泛的概念，它不仅包含了通常的程序和数据， 而且还应配有一份作业说明书，系统根据该说明书来对程序的运行进行控制。在批处理系 统中，是以作业为基本单位从外存调入内存的。\n    3. 作业步：在作业运行期间，每个作业都必须经过若干个相对独立， 又相互关联的顺序加工步骤才能得到结果，我们把其中的每一个加工步骤称为一个作业步。\n    4. 作业流：若干个作业进入系统后，被依次存放在外存上，这便形成了输入的作业流。\n    5. 作业控制块JCB：\n        - 为了管理和调度作业，在多道批处理系统中为每个作业设置了一个作业控制块，如同 进程控制块是进程在系统中存在的标志一样，它是作业在系统中存在的标志，其中保存了 系统对作业进行管理和调度所需的全部信息。\n        - 包含内容：作业标识、用户名称、用户帐户、作业类型(CPU 繁忙型、I/O 繁忙型、批 量型、终端型)、作业状态、调度信息(优先级、作业已运行时间)、资源需求(预计运行时间、 要求内存大小、要求 I/O 设备的类型和数量等)、进入系统时间、开始处理时间、作业完成 时间、作业退出时间、资源使用情况等。\n    6. 作业调度\n        - 作业调度的主要功能是根据作业控制块中的信息，审查系统能否满足用户作业的资源需求，以及按照一定的算法，从外存的后备队列中选取某些作业调入内存，并为它们创建 进程、分配必要的资源。然后再将新创建的进程插入就绪队列，准备执行。因此，有时也把作业调度称为接纳调度(Admission Scheduling)。\n        - 决定接纳多少个作业。\n        - 决定接纳哪些作业。\n<!-- more -->\n2. 低级调度\n    1. 通常也把低级调度(Low Level Scheduling)称为进程调度或短程调度(ShortTerm Scheduling)，它所调度的对象是进程(或内核级线程)。\n    2. 低级调度的功能\n        - 保存处理机的现场信息\n        - 按某种算法选取进程\n        - 把处理器分配给进程\n    3. 进程调度中的三个基本机制\n        - 排队器：为了提高进程调度的效率，应事先将系统中所有的就绪进程按照一定的方式排成一个或多个队列，以便调度程序能最快地找到它。\n        - 分派器（分派程序）：分派器把由进程调度程序所选定的进程，从就绪队列中取出该进程，然后进行上下文切换，将处理机分配给它\n        - 上下文切换机制\n    4. 进程调度方式\n        1. 非抢占方式。\n        2. 抢占方式。\n3. 中级调度\n    1. 中级调度来决定把外存上的那些又具备运行条件的就绪进程重新调入内存，并修改其状态为就绪状态，挂在就绪队列上等待进程调度。\n\n\n### 调度队列模型和调度准则\n1. 调度队列模型\n    1. 仅有进程调度的调度队列模型\n        - 任务在给定的时间片内已经完成，该进程便在释放处理机后进入完成状态\n        - 任务在本次分得的时间片内尚未完成，OS便将该任务再放入就绪队列的末尾\n        - 在执行期间，进程因为某事件而被阻塞后，被OS放入阻塞队列\n    2. 具有高级和低级调度的调度队列模型\n        - 就绪队列的形式。在批处理系统中，最常用的是最高优先权优先调度算法，相应地，最常用的就绪队列形式是优先权队列。\n        - 设置多个阻塞队列。\n    3. 同时具有三级调度的调度队列模型\n        - 当在 OS 中引入中级调度后，人们可把进程的就绪状态分为内存就绪(表示进程在内存中就绪)和外存就绪(进程在外存中就绪)。类似地，也可把阻塞状态进一步分成内存阻塞和外存阻塞两种状态。在调出操作的作用下，可使进程状态由内存就绪转为外存就绪，由内存阻塞转为外存阻塞；在中级调度的作用下，又可使外存就绪转为内存就绪。\n2. 选择调度方式和调度算法的若干准则\n    1. 面向用户准则\n        - 周转时间短：对每个用户而言，都希望自己作业的周转时间最短。但作为计算机系统的管理者，则总是希望能使平均周转时间最短，这不仅会有效地提高系统资源的利用率，而且可使大多数用户都感到满意。\n        - 响应时间快：常把响应时间的长短用来评价分时系统的性能，这是选择分时系统中进程调度算法的重要准则之一。\n        - 截止时间的保证：所谓截止时间，是指某任务必须开始执行的最迟时间，或必须完成的最迟时间。对于严格的实时系统，其调度方式和调度算法必须能保证这一点，否则将可能造成难以预料的后果。\n        - 优先权准则：在批处理、分时和实时系统中选择调度算法时，都可遵循优先权准则，以便让某些紧急的作业能得到及时处理。\n    2. 面向系统准则\n        - 系统吞吐量高\n        - 处理剂利用率好\n        - 各类资源的平衡利用\n\n### 调度算法\n1. 先来先服务调度算法\n    1. FCFS 算法比较有利于长作业(进程)，而不利于短作业(进程)。\n2. 短作业(进程)优先调度算法\n    1. SJF 调度算法能有效地降低作业的平均等待时间，提高系统吞吐量。\n    2. 该算法对长作业不利。\n    3. 该算法完全未考虑作业的紧迫程度，因而不能保证紧迫性作业(进程)会被及时处理。\n    4. 由于作业(进程)的长短只是根据用户所提供的估计执行时间而定的，而用户又可能会有意或无意地缩短其作业的估计运行时间，致使该算法不一定能真正做到短作业优先调度。\n3. 高优先权优先调度算法\n    1. 优先权调度算法的类型\n        - 非抢占式优先权算法:系统一旦把处理机分配给就绪队列中优先权最高的进程后，该进程便一直执行下去，直至完成；或因发生某事件使该进程放弃处理机时，系统方可再将处理机重新分配给另一优先权最高的进程。\n       - 抢占式优先权调度算法:在其执行期间，只要又出现了另一个其优先权更高的进程，进程调度程序就立即停止当前进程(原优先权最高的进程)的执行，重新将处理机分配给新到的优先权最高的进程。\n    2. 优先权的类型\n        - 静态优先权\n            - 静态优先权是在创建进程时确定的，且在进程的整个运行期间保持不变。\n            - 确定进程优先权的依据主要有如下三个方面:\n                - 进程类型。通常，系统进程(如接收进程、对换进程、磁盘 I/O 进程)的优先权高于一般用户进程的优先权。\n                - 进程对资源的需求。如进程的估计执行时间及内存需要量的多少，对这些要求少的进程应赋予较高的优先权。\n                - 用户要求。这是由用户进程的紧迫程度及用户所付费用的多少来确定优先权的。\n        - 动态优先权：动态优先权是指在创建进程时所赋予的优先权，是可以随进程的推进或随其等待时间的增加而改变的，以便获得更好的调度性能。\n    3. 高响应比优先调度算法\n        ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsoj1miiytj20ns0h9td0.jpg)\n\n4. 基于时间片的轮转调度算法\n    1. 时间片轮转法\n        - 基本原理：在早期的时间片轮转法中，系统将所有的就绪进程按先来先服务的原则排成一个队列，每次调度时，把 CPU 分配给队首进程，并令其执行一个时间片。\n        - 时间片大小的确定：时间片略大于一次典型的交互所需要的时间。这样可使大多数进程在一个时间片内完成。\n    2. 多级反馈队列调度算法\n        - 应设置多个就绪队列，并为各个队列富裕不同的优先级。\n        - 当一个新进程进入内存后，首先将他放入第一队列的末尾。按 FCFS 原则排队等待 调度。\n        - 仅当第一队列空闲时，调度程序才调度第二队列的进程运行。仅当第 1~(i- 1)队列均空时，才会调度第 i 队列中的进程运行。\n    3. 多级反馈队列调度算法的性能\n        - 多级反馈队列调度算法具有较好的性能，能很好地满足各种类型用户的需要。\n        - 终端型作业用户：由于终端型作业用户所提交的作业大多属于交互型作业，作业通 常较小，系统只要能使这些作业(进程)在第一队列所规定的时间片内完成，便可使终端型作 业用户都感到满意。\n        - 短批处理作业用户：对于很短的批处理型作业，开始时像终端型作业一样，如果仅在第一队列中执行一个时间片即可完成，便可获得与终端型作业一样的响应时间。对于稍长的作业，通常也只需在第二队列和第三队列各执行一个时间片即可完成，其周转时间仍然较短。\n        - 长批处理作业用户。对于长作业，它将依次在第 1，2，...，n 个队列中运行，然后再按轮转方式运行，用户不必担心其作业长期得不到处理。","slug":"计算机操作系统-处理机调度和死锁","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv54h002758ug2mf7acbq","content":"<h3 id=\"处理机调度的层次\"><a class=\"header-anchor\" href=\"#处理机调度的层次\">¶</a>处理机调度的层次</h3>\n<ol>\n<li>高级调度\n<ol>\n<li>高级调度又称为作业调度或长程调度，其主要功能是根据某种算法，把外存上处于后备队列中的那些作业调入内存，也就是说，它的调度对象是作业。</li>\n<li>作业：作业是一个比程序更为广泛的概念，它不仅包含了通常的程序和数据， 而且还应配有一份作业说明书，系统根据该说明书来对程序的运行进行控制。在批处理系 统中，是以作业为基本单位从外存调入内存的。</li>\n<li>作业步：在作业运行期间，每个作业都必须经过若干个相对独立， 又相互关联的顺序加工步骤才能得到结果，我们把其中的每一个加工步骤称为一个作业步。</li>\n<li>作业流：若干个作业进入系统后，被依次存放在外存上，这便形成了输入的作业流。</li>\n<li>作业控制块JCB：\n<ul>\n<li>为了管理和调度作业，在多道批处理系统中为每个作业设置了一个作业控制块，如同 进程控制块是进程在系统中存在的标志一样，它是作业在系统中存在的标志，其中保存了 系统对作业进行管理和调度所需的全部信息。</li>\n<li>包含内容：作业标识、用户名称、用户帐户、作业类型(CPU 繁忙型、I/O 繁忙型、批 量型、终端型)、作业状态、调度信息(优先级、作业已运行时间)、资源需求(预计运行时间、 要求内存大小、要求 I/O 设备的类型和数量等)、进入系统时间、开始处理时间、作业完成 时间、作业退出时间、资源使用情况等。</li>\n</ul>\n</li>\n<li>作业调度\n<ul>\n<li>作业调度的主要功能是根据作业控制块中的信息，审查系统能否满足用户作业的资源需求，以及按照一定的算法，从外存的后备队列中选取某些作业调入内存，并为它们创建 进程、分配必要的资源。然后再将新创建的进程插入就绪队列，准备执行。因此，有时也把作业调度称为接纳调度(Admission Scheduling)。</li>\n<li>决定接纳多少个作业。</li>\n<li>决定接纳哪些作业。</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<a id=\"more\"></a>\n<ol start=\"2\">\n<li>低级调度\n<ol>\n<li>通常也把低级调度(Low Level Scheduling)称为进程调度或短程调度(ShortTerm Scheduling)，它所调度的对象是进程(或内核级线程)。</li>\n<li>低级调度的功能\n<ul>\n<li>保存处理机的现场信息</li>\n<li>按某种算法选取进程</li>\n<li>把处理器分配给进程</li>\n</ul>\n</li>\n<li>进程调度中的三个基本机制\n<ul>\n<li>排队器：为了提高进程调度的效率，应事先将系统中所有的就绪进程按照一定的方式排成一个或多个队列，以便调度程序能最快地找到它。</li>\n<li>分派器（分派程序）：分派器把由进程调度程序所选定的进程，从就绪队列中取出该进程，然后进行上下文切换，将处理机分配给它</li>\n<li>上下文切换机制</li>\n</ul>\n</li>\n<li>进程调度方式\n<ol>\n<li>非抢占方式。</li>\n<li>抢占方式。</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>中级调度\n<ol>\n<li>中级调度来决定把外存上的那些又具备运行条件的就绪进程重新调入内存，并修改其状态为就绪状态，挂在就绪队列上等待进程调度。</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"调度队列模型和调度准则\"><a class=\"header-anchor\" href=\"#调度队列模型和调度准则\">¶</a>调度队列模型和调度准则</h3>\n<ol>\n<li>调度队列模型\n<ol>\n<li>仅有进程调度的调度队列模型\n<ul>\n<li>任务在给定的时间片内已经完成，该进程便在释放处理机后进入完成状态</li>\n<li>任务在本次分得的时间片内尚未完成，OS便将该任务再放入就绪队列的末尾</li>\n<li>在执行期间，进程因为某事件而被阻塞后，被OS放入阻塞队列</li>\n</ul>\n</li>\n<li>具有高级和低级调度的调度队列模型\n<ul>\n<li>就绪队列的形式。在批处理系统中，最常用的是最高优先权优先调度算法，相应地，最常用的就绪队列形式是优先权队列。</li>\n<li>设置多个阻塞队列。</li>\n</ul>\n</li>\n<li>同时具有三级调度的调度队列模型\n<ul>\n<li>当在 OS 中引入中级调度后，人们可把进程的就绪状态分为内存就绪(表示进程在内存中就绪)和外存就绪(进程在外存中就绪)。类似地，也可把阻塞状态进一步分成内存阻塞和外存阻塞两种状态。在调出操作的作用下，可使进程状态由内存就绪转为外存就绪，由内存阻塞转为外存阻塞；在中级调度的作用下，又可使外存就绪转为内存就绪。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>选择调度方式和调度算法的若干准则\n<ol>\n<li>面向用户准则\n<ul>\n<li>周转时间短：对每个用户而言，都希望自己作业的周转时间最短。但作为计算机系统的管理者，则总是希望能使平均周转时间最短，这不仅会有效地提高系统资源的利用率，而且可使大多数用户都感到满意。</li>\n<li>响应时间快：常把响应时间的长短用来评价分时系统的性能，这是选择分时系统中进程调度算法的重要准则之一。</li>\n<li>截止时间的保证：所谓截止时间，是指某任务必须开始执行的最迟时间，或必须完成的最迟时间。对于严格的实时系统，其调度方式和调度算法必须能保证这一点，否则将可能造成难以预料的后果。</li>\n<li>优先权准则：在批处理、分时和实时系统中选择调度算法时，都可遵循优先权准则，以便让某些紧急的作业能得到及时处理。</li>\n</ul>\n</li>\n<li>面向系统准则\n<ul>\n<li>系统吞吐量高</li>\n<li>处理剂利用率好</li>\n<li>各类资源的平衡利用</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"调度算法\"><a class=\"header-anchor\" href=\"#调度算法\">¶</a>调度算法</h3>\n<ol>\n<li>\n<p>先来先服务调度算法</p>\n<ol>\n<li>FCFS 算法比较有利于长作业(进程)，而不利于短作业(进程)。</li>\n</ol>\n</li>\n<li>\n<p>短作业(进程)优先调度算法</p>\n<ol>\n<li>SJF 调度算法能有效地降低作业的平均等待时间，提高系统吞吐量。</li>\n<li>该算法对长作业不利。</li>\n<li>该算法完全未考虑作业的紧迫程度，因而不能保证紧迫性作业(进程)会被及时处理。</li>\n<li>由于作业(进程)的长短只是根据用户所提供的估计执行时间而定的，而用户又可能会有意或无意地缩短其作业的估计运行时间，致使该算法不一定能真正做到短作业优先调度。</li>\n</ol>\n</li>\n<li>\n<p>高优先权优先调度算法</p>\n<ol>\n<li>优先权调度算法的类型\n<ul>\n<li>非抢占式优先权算法:系统一旦把处理机分配给就绪队列中优先权最高的进程后，该进程便一直执行下去，直至完成；或因发生某事件使该进程放弃处理机时，系统方可再将处理机重新分配给另一优先权最高的进程。</li>\n<li>抢占式优先权调度算法:在其执行期间，只要又出现了另一个其优先权更高的进程，进程调度程序就立即停止当前进程(原优先权最高的进程)的执行，重新将处理机分配给新到的优先权最高的进程。</li>\n</ul>\n</li>\n<li>优先权的类型\n<ul>\n<li>静态优先权\n<ul>\n<li>静态优先权是在创建进程时确定的，且在进程的整个运行期间保持不变。</li>\n<li>确定进程优先权的依据主要有如下三个方面:\n<ul>\n<li>进程类型。通常，系统进程(如接收进程、对换进程、磁盘 I/O 进程)的优先权高于一般用户进程的优先权。</li>\n<li>进程对资源的需求。如进程的估计执行时间及内存需要量的多少，对这些要求少的进程应赋予较高的优先权。</li>\n<li>用户要求。这是由用户进程的紧迫程度及用户所付费用的多少来确定优先权的。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>动态优先权：动态优先权是指在创建进程时所赋予的优先权，是可以随进程的推进或随其等待时间的增加而改变的，以便获得更好的调度性能。</li>\n</ul>\n</li>\n<li>高响应比优先调度算法\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsoj1miiytj20ns0h9td0.jpg\" alt=\"\"></li>\n</ol>\n</li>\n<li>\n<p>基于时间片的轮转调度算法</p>\n<ol>\n<li>时间片轮转法\n<ul>\n<li>基本原理：在早期的时间片轮转法中，系统将所有的就绪进程按先来先服务的原则排成一个队列，每次调度时，把 CPU 分配给队首进程，并令其执行一个时间片。</li>\n<li>时间片大小的确定：时间片略大于一次典型的交互所需要的时间。这样可使大多数进程在一个时间片内完成。</li>\n</ul>\n</li>\n<li>多级反馈队列调度算法\n<ul>\n<li>应设置多个就绪队列，并为各个队列富裕不同的优先级。</li>\n<li>当一个新进程进入内存后，首先将他放入第一队列的末尾。按 FCFS 原则排队等待 调度。</li>\n<li>仅当第一队列空闲时，调度程序才调度第二队列的进程运行。仅当第 1~(i- 1)队列均空时，才会调度第 i 队列中的进程运行。</li>\n</ul>\n</li>\n<li>多级反馈队列调度算法的性能\n<ul>\n<li>多级反馈队列调度算法具有较好的性能，能很好地满足各种类型用户的需要。</li>\n<li>终端型作业用户：由于终端型作业用户所提交的作业大多属于交互型作业，作业通 常较小，系统只要能使这些作业(进程)在第一队列所规定的时间片内完成，便可使终端型作 业用户都感到满意。</li>\n<li>短批处理作业用户：对于很短的批处理型作业，开始时像终端型作业一样，如果仅在第一队列中执行一个时间片即可完成，便可获得与终端型作业一样的响应时间。对于稍长的作业，通常也只需在第二队列和第三队列各执行一个时间片即可完成，其周转时间仍然较短。</li>\n<li>长批处理作业用户。对于长作业，它将依次在第 1，2，…，n 个队列中运行，然后再按轮转方式运行，用户不必担心其作业长期得不到处理。</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h3 id=\"处理机调度的层次\"><a class=\"header-anchor\" href=\"#处理机调度的层次\">¶</a>处理机调度的层次</h3>\n<ol>\n<li>高级调度\n<ol>\n<li>高级调度又称为作业调度或长程调度，其主要功能是根据某种算法，把外存上处于后备队列中的那些作业调入内存，也就是说，它的调度对象是作业。</li>\n<li>作业：作业是一个比程序更为广泛的概念，它不仅包含了通常的程序和数据， 而且还应配有一份作业说明书，系统根据该说明书来对程序的运行进行控制。在批处理系 统中，是以作业为基本单位从外存调入内存的。</li>\n<li>作业步：在作业运行期间，每个作业都必须经过若干个相对独立， 又相互关联的顺序加工步骤才能得到结果，我们把其中的每一个加工步骤称为一个作业步。</li>\n<li>作业流：若干个作业进入系统后，被依次存放在外存上，这便形成了输入的作业流。</li>\n<li>作业控制块JCB：\n<ul>\n<li>为了管理和调度作业，在多道批处理系统中为每个作业设置了一个作业控制块，如同 进程控制块是进程在系统中存在的标志一样，它是作业在系统中存在的标志，其中保存了 系统对作业进行管理和调度所需的全部信息。</li>\n<li>包含内容：作业标识、用户名称、用户帐户、作业类型(CPU 繁忙型、I/O 繁忙型、批 量型、终端型)、作业状态、调度信息(优先级、作业已运行时间)、资源需求(预计运行时间、 要求内存大小、要求 I/O 设备的类型和数量等)、进入系统时间、开始处理时间、作业完成 时间、作业退出时间、资源使用情况等。</li>\n</ul>\n</li>\n<li>作业调度\n<ul>\n<li>作业调度的主要功能是根据作业控制块中的信息，审查系统能否满足用户作业的资源需求，以及按照一定的算法，从外存的后备队列中选取某些作业调入内存，并为它们创建 进程、分配必要的资源。然后再将新创建的进程插入就绪队列，准备执行。因此，有时也把作业调度称为接纳调度(Admission Scheduling)。</li>\n<li>决定接纳多少个作业。</li>\n<li>决定接纳哪些作业。</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>","more":"<ol start=\"2\">\n<li>低级调度\n<ol>\n<li>通常也把低级调度(Low Level Scheduling)称为进程调度或短程调度(ShortTerm Scheduling)，它所调度的对象是进程(或内核级线程)。</li>\n<li>低级调度的功能\n<ul>\n<li>保存处理机的现场信息</li>\n<li>按某种算法选取进程</li>\n<li>把处理器分配给进程</li>\n</ul>\n</li>\n<li>进程调度中的三个基本机制\n<ul>\n<li>排队器：为了提高进程调度的效率，应事先将系统中所有的就绪进程按照一定的方式排成一个或多个队列，以便调度程序能最快地找到它。</li>\n<li>分派器（分派程序）：分派器把由进程调度程序所选定的进程，从就绪队列中取出该进程，然后进行上下文切换，将处理机分配给它</li>\n<li>上下文切换机制</li>\n</ul>\n</li>\n<li>进程调度方式\n<ol>\n<li>非抢占方式。</li>\n<li>抢占方式。</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>中级调度\n<ol>\n<li>中级调度来决定把外存上的那些又具备运行条件的就绪进程重新调入内存，并修改其状态为就绪状态，挂在就绪队列上等待进程调度。</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"调度队列模型和调度准则\"><a class=\"header-anchor\" href=\"#调度队列模型和调度准则\">¶</a>调度队列模型和调度准则</h3>\n<ol>\n<li>调度队列模型\n<ol>\n<li>仅有进程调度的调度队列模型\n<ul>\n<li>任务在给定的时间片内已经完成，该进程便在释放处理机后进入完成状态</li>\n<li>任务在本次分得的时间片内尚未完成，OS便将该任务再放入就绪队列的末尾</li>\n<li>在执行期间，进程因为某事件而被阻塞后，被OS放入阻塞队列</li>\n</ul>\n</li>\n<li>具有高级和低级调度的调度队列模型\n<ul>\n<li>就绪队列的形式。在批处理系统中，最常用的是最高优先权优先调度算法，相应地，最常用的就绪队列形式是优先权队列。</li>\n<li>设置多个阻塞队列。</li>\n</ul>\n</li>\n<li>同时具有三级调度的调度队列模型\n<ul>\n<li>当在 OS 中引入中级调度后，人们可把进程的就绪状态分为内存就绪(表示进程在内存中就绪)和外存就绪(进程在外存中就绪)。类似地，也可把阻塞状态进一步分成内存阻塞和外存阻塞两种状态。在调出操作的作用下，可使进程状态由内存就绪转为外存就绪，由内存阻塞转为外存阻塞；在中级调度的作用下，又可使外存就绪转为内存就绪。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>选择调度方式和调度算法的若干准则\n<ol>\n<li>面向用户准则\n<ul>\n<li>周转时间短：对每个用户而言，都希望自己作业的周转时间最短。但作为计算机系统的管理者，则总是希望能使平均周转时间最短，这不仅会有效地提高系统资源的利用率，而且可使大多数用户都感到满意。</li>\n<li>响应时间快：常把响应时间的长短用来评价分时系统的性能，这是选择分时系统中进程调度算法的重要准则之一。</li>\n<li>截止时间的保证：所谓截止时间，是指某任务必须开始执行的最迟时间，或必须完成的最迟时间。对于严格的实时系统，其调度方式和调度算法必须能保证这一点，否则将可能造成难以预料的后果。</li>\n<li>优先权准则：在批处理、分时和实时系统中选择调度算法时，都可遵循优先权准则，以便让某些紧急的作业能得到及时处理。</li>\n</ul>\n</li>\n<li>面向系统准则\n<ul>\n<li>系统吞吐量高</li>\n<li>处理剂利用率好</li>\n<li>各类资源的平衡利用</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"调度算法\"><a class=\"header-anchor\" href=\"#调度算法\">¶</a>调度算法</h3>\n<ol>\n<li>\n<p>先来先服务调度算法</p>\n<ol>\n<li>FCFS 算法比较有利于长作业(进程)，而不利于短作业(进程)。</li>\n</ol>\n</li>\n<li>\n<p>短作业(进程)优先调度算法</p>\n<ol>\n<li>SJF 调度算法能有效地降低作业的平均等待时间，提高系统吞吐量。</li>\n<li>该算法对长作业不利。</li>\n<li>该算法完全未考虑作业的紧迫程度，因而不能保证紧迫性作业(进程)会被及时处理。</li>\n<li>由于作业(进程)的长短只是根据用户所提供的估计执行时间而定的，而用户又可能会有意或无意地缩短其作业的估计运行时间，致使该算法不一定能真正做到短作业优先调度。</li>\n</ol>\n</li>\n<li>\n<p>高优先权优先调度算法</p>\n<ol>\n<li>优先权调度算法的类型\n<ul>\n<li>非抢占式优先权算法:系统一旦把处理机分配给就绪队列中优先权最高的进程后，该进程便一直执行下去，直至完成；或因发生某事件使该进程放弃处理机时，系统方可再将处理机重新分配给另一优先权最高的进程。</li>\n<li>抢占式优先权调度算法:在其执行期间，只要又出现了另一个其优先权更高的进程，进程调度程序就立即停止当前进程(原优先权最高的进程)的执行，重新将处理机分配给新到的优先权最高的进程。</li>\n</ul>\n</li>\n<li>优先权的类型\n<ul>\n<li>静态优先权\n<ul>\n<li>静态优先权是在创建进程时确定的，且在进程的整个运行期间保持不变。</li>\n<li>确定进程优先权的依据主要有如下三个方面:\n<ul>\n<li>进程类型。通常，系统进程(如接收进程、对换进程、磁盘 I/O 进程)的优先权高于一般用户进程的优先权。</li>\n<li>进程对资源的需求。如进程的估计执行时间及内存需要量的多少，对这些要求少的进程应赋予较高的优先权。</li>\n<li>用户要求。这是由用户进程的紧迫程度及用户所付费用的多少来确定优先权的。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>动态优先权：动态优先权是指在创建进程时所赋予的优先权，是可以随进程的推进或随其等待时间的增加而改变的，以便获得更好的调度性能。</li>\n</ul>\n</li>\n<li>高响应比优先调度算法\n<img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsoj1miiytj20ns0h9td0.jpg\" alt=\"\"></li>\n</ol>\n</li>\n<li>\n<p>基于时间片的轮转调度算法</p>\n<ol>\n<li>时间片轮转法\n<ul>\n<li>基本原理：在早期的时间片轮转法中，系统将所有的就绪进程按先来先服务的原则排成一个队列，每次调度时，把 CPU 分配给队首进程，并令其执行一个时间片。</li>\n<li>时间片大小的确定：时间片略大于一次典型的交互所需要的时间。这样可使大多数进程在一个时间片内完成。</li>\n</ul>\n</li>\n<li>多级反馈队列调度算法\n<ul>\n<li>应设置多个就绪队列，并为各个队列富裕不同的优先级。</li>\n<li>当一个新进程进入内存后，首先将他放入第一队列的末尾。按 FCFS 原则排队等待 调度。</li>\n<li>仅当第一队列空闲时，调度程序才调度第二队列的进程运行。仅当第 1~(i- 1)队列均空时，才会调度第 i 队列中的进程运行。</li>\n</ul>\n</li>\n<li>多级反馈队列调度算法的性能\n<ul>\n<li>多级反馈队列调度算法具有较好的性能，能很好地满足各种类型用户的需要。</li>\n<li>终端型作业用户：由于终端型作业用户所提交的作业大多属于交互型作业，作业通 常较小，系统只要能使这些作业(进程)在第一队列所规定的时间片内完成，便可使终端型作 业用户都感到满意。</li>\n<li>短批处理作业用户：对于很短的批处理型作业，开始时像终端型作业一样，如果仅在第一队列中执行一个时间片即可完成，便可获得与终端型作业一样的响应时间。对于稍长的作业，通常也只需在第二队列和第三队列各执行一个时间片即可完成，其周转时间仍然较短。</li>\n<li>长批处理作业用户。对于长作业，它将依次在第 1，2，…，n 个队列中运行，然后再按轮转方式运行，用户不必担心其作业长期得不到处理。</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>"},{"title":"自定义绘制","date":"2017-08-30T14:18:15.000Z","_content":"\n### 自定义绘制思维导图\n\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsomf4p6dsj24742doqv6.jpg)\n<!-- more -->\n### Canvas.drawXXX()\n1. drawColor\n1. canvas.drawRGB\n1. canvas.drawARGB\n1. drawCircle\n1. drawRect\n1. drawPoint\n1. drawPoints\n1. drawOval\n1. drawLine\n1. drawLines\n1. drawRoundRect\n1. drawArc\n1. drawPath\n1. drawBitmap\n1. drawBitmapMesh\n    * 可以绘制具有网格拉伸效果的 Bitmap\n1. drawText\n### Paint\n1. 颜色\n    * setColor(int color)\n    * setARGB\n    * setShader\n        * LinearGradient 线性渐变\n            * CLAMP:\n            * MIRROR:\n            * REPEAT:\n            * 概要: 三种着色规则\n        * RadialGradient 辐射渐变\n        * SweepGradient 扫描渐变\n        * BitmapShader\n        * ComposeShader 混合着色器\n            * ComposeShader() 在硬件加速下是不支持两个相同类型的 Shader 的\n    * setColorFilter\n        * LightingColorFilter\n            * 参数里的 mul 和  add 都是和颜色值格式相同的 int 值，其中 mul 用来和目标像素相乘，add 用来和目标像素相加\n        * PorterDuffColorFilter\n            * 使用一个指定的颜色和一种指定的 PorterDuff.Mode 来与绘制对象进行合成\n        * ColorMatrixColorFilter\n    * setXfermode\n        * PorterDuffXfermode\n    * 概要:  PorterDuff.Mode 在 Paint 一共有三处 API\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsomplwiv6j20h705176f.jpg)\n    * 概要: Xfermode注意事项\n        * 使用离屏缓冲\n        * 控制好透明区域\n2. 效果\n    * setTextSize\n    * setPathEffect\n        * DashPathEffect\n            * 使用虚线来绘制线条\n        * CornerPathEffect\n            * 把所有拐角变成圆角\n        * DiscretePathEffect\n            * 把线条进行随机的偏离，让轮廓变得乱七八糟\n                * segmentLength  用来拼接的每个线段的长度\n                * deviation 偏离量\n        * PathDashPathEffect\n            * 使用一个 Path 来绘制「虚线」\n            * 最后一个参数 style，是用来指定拐弯改变的时候 shape 的转换方式\n                * TRANSLATE：位移\n                * ROTATE：旋转\n                * MORPH：变体\n        * SumPathEffect\n            * 分别按照两种 PathEffect 分别对目标进行绘制\n        * ComposePathEffect\n            * 它是先对目标 Path 使用一个 PathEffect，然后再对这个改变后的 Path 使用另一个 PathEffect\n        * PathEffect 在有些情况下不支持硬件加速\n            - Canvas.drawLine() 和 Canvas.drawLines() 方法画直线时，setPathEffect() 是不支持硬件加速的；\n            - PathDashPathEffect 对硬件加速的支持也有问题，所以当使用 PathDashPathEffect 的时候，最好也把硬件加速关了。\n    * setShadowLayer\n        * 在之后的绘制内容下面加一层阴影\n    * setMaskFilter\n        * BlurMaskFilter\n            * 模糊效果的 MaskFilter\n                * NORMAL: 内外都模糊绘制\n                * SOLID: 内部正常绘制，外部模糊\n                * INNER: 内部模糊，外部不绘制\n                * OUTER: 内部不绘制，外部模糊（什么鬼？）\n        * EmbossMaskFilter\n            * 浮雕效果的 MaskFilter\n    * setStyle(Paint.Style style)\n    * setAntiAlias\n    * setStrokeWidth\n    * setStrokeCap\n        * BUTT 平头、ROUND 圆头、SQUARE 方头\n    * setStrokeJoin\n        * MITER 尖角、 BEVEL 平角和 ROUND 圆角\n    * setStrokeMiter\n        * 它用于设置 MITER 型拐角的延长线的最大值\n    * setDither\n        * 设置图像的抖动\n    * setFilterBitmap\n        * 设置是否使用双线性过滤来绘制 Bitmap\n    * getFillPath\n        * getFillPath(src, dst) 会计算出实际 Path，然后把结果保存在 dst 里。\n    * getTextPath\n    * 概要: 色彩优化\n    * 概要: 线条形状\n    * 概要: 获取绘制的 Path\n3. 文字绘制相关\n4. 初始化类\n    * reset\n        * 重置 Paint 的所有属性为默认值。相当于重新 new 一个。\n    * set\n        * 把 src 的所有属性全部复制过来。\n    * setFlags\n        * paint.setFlags(Paint.ANTI_ALIAS_FLAG | Paint.DITHER_FLAG);\n### Path\n1. addXxx\n    * addCircle\n    * addOval\n    * addRect\n    * addRoundRect\n    * addArc\n    * addPath\n2. xxxTo\n    * lineTo/rLineTo\n    * quadTo / rQuadTo\n    * cubicTo / rCubicTo\n    * moveTo / rMoveTo\n    * arcTo\n        * forceMoveTo:true强制移动到新的位置\n3. close()封闭当前子图形\n4. Path.setFillType\n    * EVEN_ODD\n        *  even-odd rule （奇偶原则）：对于平面中的任意一点，向任意方向射出一条射线，这条射线和图形相交的次数（相交才算，相切不算哦）如果是奇数，则这个点被认为在图形内部，是要被涂色的区域；如果是偶数，则这个点被认为在图形外部，是不被涂色的区域。\n    * WINDING （默认值）\n        * 非零环绕数原则\n    * INVERSE_EVEN_ODD\n    * INVERSE_WINDING\n5. setLastPoint\n    * 重置当前path中最后一个点位置，如果在绘制之前调用，效果和moveTo相同\n6. isEmpty\n    * 判断Path是否为空\n7. isRect\n    *  判断Path是否是一个矩形\n8. set\n    * 用新的路径替换到当前路径所有内容\n9. offset\n    * 对当前路径之前的操作进行偏移(不会影响之后的操作)\n10. op\n    * 对两个Path进行布尔运算(即取交集、并集等操作)\n        * DIFFERENCE\n            * Path1中减去Path2后剩下的部分\n        * REVERSE_DIFFERENCE\n            * Path2中减去Path1后剩下的部分\n        * INTERSECT\n            * Path1与Path2相交的部分\n        * UNION\n            * 包含全部Path1和Path2\n        * XOR\n            * 包含Path1与Path2但不包括两者相交的部分\n11. computeBounds\n    * 计算Path的边界\n12. reset, rewind\n    * 清除Path中的内容，reset不保留内部数据结构，但会保留FillType.rewind会保留内部的数据结构，但不保留FillType\n13. transform\n    * 矩阵变换\n### PathMeasure\n1. setPath\n    * 关联一个Path\n2. isClosed\n    * 是否闭合\n3. getLength\n    * 获取Path的长度\n4. nextContour\n    * 跳转到下一个轮廓\n5. getSegment\n    * 截取片段\n6. getPosTan\n    * 用于得到路径上某一长度的位置以及该位置的正切值\n7. getMatrix\n    * 获取指定长度的位置坐标及该点Matrix","source":"_posts/自定义控件-自定义绘制.md","raw":"---\ntitle: 自定义绘制\ntags:\n  - 自定义控件\n  - 自定义绘制\ncategories:\n  - 自定义控件\ndate: 2017-08-30 22:18:15\n---\n\n### 自定义绘制思维导图\n\n![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsomf4p6dsj24742doqv6.jpg)\n<!-- more -->\n### Canvas.drawXXX()\n1. drawColor\n1. canvas.drawRGB\n1. canvas.drawARGB\n1. drawCircle\n1. drawRect\n1. drawPoint\n1. drawPoints\n1. drawOval\n1. drawLine\n1. drawLines\n1. drawRoundRect\n1. drawArc\n1. drawPath\n1. drawBitmap\n1. drawBitmapMesh\n    * 可以绘制具有网格拉伸效果的 Bitmap\n1. drawText\n### Paint\n1. 颜色\n    * setColor(int color)\n    * setARGB\n    * setShader\n        * LinearGradient 线性渐变\n            * CLAMP:\n            * MIRROR:\n            * REPEAT:\n            * 概要: 三种着色规则\n        * RadialGradient 辐射渐变\n        * SweepGradient 扫描渐变\n        * BitmapShader\n        * ComposeShader 混合着色器\n            * ComposeShader() 在硬件加速下是不支持两个相同类型的 Shader 的\n    * setColorFilter\n        * LightingColorFilter\n            * 参数里的 mul 和  add 都是和颜色值格式相同的 int 值，其中 mul 用来和目标像素相乘，add 用来和目标像素相加\n        * PorterDuffColorFilter\n            * 使用一个指定的颜色和一种指定的 PorterDuff.Mode 来与绘制对象进行合成\n        * ColorMatrixColorFilter\n    * setXfermode\n        * PorterDuffXfermode\n    * 概要:  PorterDuff.Mode 在 Paint 一共有三处 API\n        * ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsomplwiv6j20h705176f.jpg)\n    * 概要: Xfermode注意事项\n        * 使用离屏缓冲\n        * 控制好透明区域\n2. 效果\n    * setTextSize\n    * setPathEffect\n        * DashPathEffect\n            * 使用虚线来绘制线条\n        * CornerPathEffect\n            * 把所有拐角变成圆角\n        * DiscretePathEffect\n            * 把线条进行随机的偏离，让轮廓变得乱七八糟\n                * segmentLength  用来拼接的每个线段的长度\n                * deviation 偏离量\n        * PathDashPathEffect\n            * 使用一个 Path 来绘制「虚线」\n            * 最后一个参数 style，是用来指定拐弯改变的时候 shape 的转换方式\n                * TRANSLATE：位移\n                * ROTATE：旋转\n                * MORPH：变体\n        * SumPathEffect\n            * 分别按照两种 PathEffect 分别对目标进行绘制\n        * ComposePathEffect\n            * 它是先对目标 Path 使用一个 PathEffect，然后再对这个改变后的 Path 使用另一个 PathEffect\n        * PathEffect 在有些情况下不支持硬件加速\n            - Canvas.drawLine() 和 Canvas.drawLines() 方法画直线时，setPathEffect() 是不支持硬件加速的；\n            - PathDashPathEffect 对硬件加速的支持也有问题，所以当使用 PathDashPathEffect 的时候，最好也把硬件加速关了。\n    * setShadowLayer\n        * 在之后的绘制内容下面加一层阴影\n    * setMaskFilter\n        * BlurMaskFilter\n            * 模糊效果的 MaskFilter\n                * NORMAL: 内外都模糊绘制\n                * SOLID: 内部正常绘制，外部模糊\n                * INNER: 内部模糊，外部不绘制\n                * OUTER: 内部不绘制，外部模糊（什么鬼？）\n        * EmbossMaskFilter\n            * 浮雕效果的 MaskFilter\n    * setStyle(Paint.Style style)\n    * setAntiAlias\n    * setStrokeWidth\n    * setStrokeCap\n        * BUTT 平头、ROUND 圆头、SQUARE 方头\n    * setStrokeJoin\n        * MITER 尖角、 BEVEL 平角和 ROUND 圆角\n    * setStrokeMiter\n        * 它用于设置 MITER 型拐角的延长线的最大值\n    * setDither\n        * 设置图像的抖动\n    * setFilterBitmap\n        * 设置是否使用双线性过滤来绘制 Bitmap\n    * getFillPath\n        * getFillPath(src, dst) 会计算出实际 Path，然后把结果保存在 dst 里。\n    * getTextPath\n    * 概要: 色彩优化\n    * 概要: 线条形状\n    * 概要: 获取绘制的 Path\n3. 文字绘制相关\n4. 初始化类\n    * reset\n        * 重置 Paint 的所有属性为默认值。相当于重新 new 一个。\n    * set\n        * 把 src 的所有属性全部复制过来。\n    * setFlags\n        * paint.setFlags(Paint.ANTI_ALIAS_FLAG | Paint.DITHER_FLAG);\n### Path\n1. addXxx\n    * addCircle\n    * addOval\n    * addRect\n    * addRoundRect\n    * addArc\n    * addPath\n2. xxxTo\n    * lineTo/rLineTo\n    * quadTo / rQuadTo\n    * cubicTo / rCubicTo\n    * moveTo / rMoveTo\n    * arcTo\n        * forceMoveTo:true强制移动到新的位置\n3. close()封闭当前子图形\n4. Path.setFillType\n    * EVEN_ODD\n        *  even-odd rule （奇偶原则）：对于平面中的任意一点，向任意方向射出一条射线，这条射线和图形相交的次数（相交才算，相切不算哦）如果是奇数，则这个点被认为在图形内部，是要被涂色的区域；如果是偶数，则这个点被认为在图形外部，是不被涂色的区域。\n    * WINDING （默认值）\n        * 非零环绕数原则\n    * INVERSE_EVEN_ODD\n    * INVERSE_WINDING\n5. setLastPoint\n    * 重置当前path中最后一个点位置，如果在绘制之前调用，效果和moveTo相同\n6. isEmpty\n    * 判断Path是否为空\n7. isRect\n    *  判断Path是否是一个矩形\n8. set\n    * 用新的路径替换到当前路径所有内容\n9. offset\n    * 对当前路径之前的操作进行偏移(不会影响之后的操作)\n10. op\n    * 对两个Path进行布尔运算(即取交集、并集等操作)\n        * DIFFERENCE\n            * Path1中减去Path2后剩下的部分\n        * REVERSE_DIFFERENCE\n            * Path2中减去Path1后剩下的部分\n        * INTERSECT\n            * Path1与Path2相交的部分\n        * UNION\n            * 包含全部Path1和Path2\n        * XOR\n            * 包含Path1与Path2但不包括两者相交的部分\n11. computeBounds\n    * 计算Path的边界\n12. reset, rewind\n    * 清除Path中的内容，reset不保留内部数据结构，但会保留FillType.rewind会保留内部的数据结构，但不保留FillType\n13. transform\n    * 矩阵变换\n### PathMeasure\n1. setPath\n    * 关联一个Path\n2. isClosed\n    * 是否闭合\n3. getLength\n    * 获取Path的长度\n4. nextContour\n    * 跳转到下一个轮廓\n5. getSegment\n    * 截取片段\n6. getPosTan\n    * 用于得到路径上某一长度的位置以及该位置的正切值\n7. getMatrix\n    * 获取指定长度的位置坐标及该点Matrix","slug":"自定义控件-自定义绘制","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv54j002c58ugvzkwtjn8","content":"<h3 id=\"自定义绘制思维导图\"><a class=\"header-anchor\" href=\"#自定义绘制思维导图\">¶</a>自定义绘制思维导图</h3>\n<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsomf4p6dsj24742doqv6.jpg\" alt=\"\"></p>\n<a id=\"more\"></a>\n<h3 id=\"canvas-drawxxx\"><a class=\"header-anchor\" href=\"#canvas-drawxxx\">¶</a>Canvas.drawXXX()</h3>\n<ol>\n<li>drawColor</li>\n<li>canvas.drawRGB</li>\n<li>canvas.drawARGB</li>\n<li>drawCircle</li>\n<li>drawRect</li>\n<li>drawPoint</li>\n<li>drawPoints</li>\n<li>drawOval</li>\n<li>drawLine</li>\n<li>drawLines</li>\n<li>drawRoundRect</li>\n<li>drawArc</li>\n<li>drawPath</li>\n<li>drawBitmap</li>\n<li>drawBitmapMesh\n<ul>\n<li>可以绘制具有网格拉伸效果的 Bitmap</li>\n</ul>\n</li>\n<li>drawText</li>\n</ol>\n<h3 id=\"paint\"><a class=\"header-anchor\" href=\"#paint\">¶</a>Paint</h3>\n<ol>\n<li>颜色\n<ul>\n<li>setColor(int color)</li>\n<li>setARGB</li>\n<li>setShader\n<ul>\n<li>LinearGradient 线性渐变\n<ul>\n<li>CLAMP:</li>\n<li>MIRROR:</li>\n<li>REPEAT:</li>\n<li>概要: 三种着色规则</li>\n</ul>\n</li>\n<li>RadialGradient 辐射渐变</li>\n<li>SweepGradient 扫描渐变</li>\n<li>BitmapShader</li>\n<li>ComposeShader 混合着色器\n<ul>\n<li>ComposeShader() 在硬件加速下是不支持两个相同类型的 Shader 的</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>setColorFilter\n<ul>\n<li>LightingColorFilter\n<ul>\n<li>参数里的 mul 和  add 都是和颜色值格式相同的 int 值，其中 mul 用来和目标像素相乘，add 用来和目标像素相加</li>\n</ul>\n</li>\n<li>PorterDuffColorFilter\n<ul>\n<li>使用一个指定的颜色和一种指定的 PorterDuff.Mode 来与绘制对象进行合成</li>\n</ul>\n</li>\n<li>ColorMatrixColorFilter</li>\n</ul>\n</li>\n<li>setXfermode\n<ul>\n<li>PorterDuffXfermode</li>\n</ul>\n</li>\n<li>概要:  PorterDuff.Mode 在 Paint 一共有三处 API\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsomplwiv6j20h705176f.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>概要: Xfermode注意事项\n<ul>\n<li>使用离屏缓冲</li>\n<li>控制好透明区域</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>效果\n<ul>\n<li>setTextSize</li>\n<li>setPathEffect\n<ul>\n<li>DashPathEffect\n<ul>\n<li>使用虚线来绘制线条</li>\n</ul>\n</li>\n<li>CornerPathEffect\n<ul>\n<li>把所有拐角变成圆角</li>\n</ul>\n</li>\n<li>DiscretePathEffect\n<ul>\n<li>把线条进行随机的偏离，让轮廓变得乱七八糟\n<ul>\n<li>segmentLength  用来拼接的每个线段的长度</li>\n<li>deviation 偏离量</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>PathDashPathEffect\n<ul>\n<li>使用一个 Path 来绘制「虚线」</li>\n<li>最后一个参数 style，是用来指定拐弯改变的时候 shape 的转换方式\n<ul>\n<li>TRANSLATE：位移</li>\n<li>ROTATE：旋转</li>\n<li>MORPH：变体</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>SumPathEffect\n<ul>\n<li>分别按照两种 PathEffect 分别对目标进行绘制</li>\n</ul>\n</li>\n<li>ComposePathEffect\n<ul>\n<li>它是先对目标 Path 使用一个 PathEffect，然后再对这个改变后的 Path 使用另一个 PathEffect</li>\n</ul>\n</li>\n<li>PathEffect 在有些情况下不支持硬件加速\n<ul>\n<li>Canvas.drawLine() 和 Canvas.drawLines() 方法画直线时，setPathEffect() 是不支持硬件加速的；</li>\n<li>PathDashPathEffect 对硬件加速的支持也有问题，所以当使用 PathDashPathEffect 的时候，最好也把硬件加速关了。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>setShadowLayer\n<ul>\n<li>在之后的绘制内容下面加一层阴影</li>\n</ul>\n</li>\n<li>setMaskFilter\n<ul>\n<li>BlurMaskFilter\n<ul>\n<li>模糊效果的 MaskFilter\n<ul>\n<li>NORMAL: 内外都模糊绘制</li>\n<li>SOLID: 内部正常绘制，外部模糊</li>\n<li>INNER: 内部模糊，外部不绘制</li>\n<li>OUTER: 内部不绘制，外部模糊（什么鬼？）</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>EmbossMaskFilter\n<ul>\n<li>浮雕效果的 MaskFilter</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>setStyle(Paint.Style style)</li>\n<li>setAntiAlias</li>\n<li>setStrokeWidth</li>\n<li>setStrokeCap\n<ul>\n<li>BUTT 平头、ROUND 圆头、SQUARE 方头</li>\n</ul>\n</li>\n<li>setStrokeJoin\n<ul>\n<li>MITER 尖角、 BEVEL 平角和 ROUND 圆角</li>\n</ul>\n</li>\n<li>setStrokeMiter\n<ul>\n<li>它用于设置 MITER 型拐角的延长线的最大值</li>\n</ul>\n</li>\n<li>setDither\n<ul>\n<li>设置图像的抖动</li>\n</ul>\n</li>\n<li>setFilterBitmap\n<ul>\n<li>设置是否使用双线性过滤来绘制 Bitmap</li>\n</ul>\n</li>\n<li>getFillPath\n<ul>\n<li>getFillPath(src, dst) 会计算出实际 Path，然后把结果保存在 dst 里。</li>\n</ul>\n</li>\n<li>getTextPath</li>\n<li>概要: 色彩优化</li>\n<li>概要: 线条形状</li>\n<li>概要: 获取绘制的 Path</li>\n</ul>\n</li>\n<li>文字绘制相关</li>\n<li>初始化类\n<ul>\n<li>reset\n<ul>\n<li>重置 Paint 的所有属性为默认值。相当于重新 new 一个。</li>\n</ul>\n</li>\n<li>set\n<ul>\n<li>把 src 的所有属性全部复制过来。</li>\n</ul>\n</li>\n<li>setFlags\n<ul>\n<li>paint.setFlags(Paint.ANTI_ALIAS_FLAG | Paint.DITHER_FLAG);</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"path\"><a class=\"header-anchor\" href=\"#path\">¶</a>Path</h3>\n<ol>\n<li>addXxx\n<ul>\n<li>addCircle</li>\n<li>addOval</li>\n<li>addRect</li>\n<li>addRoundRect</li>\n<li>addArc</li>\n<li>addPath</li>\n</ul>\n</li>\n<li>xxxTo\n<ul>\n<li>lineTo/rLineTo</li>\n<li>quadTo / rQuadTo</li>\n<li>cubicTo / rCubicTo</li>\n<li>moveTo / rMoveTo</li>\n<li>arcTo\n<ul>\n<li>forceMoveTo:true强制移动到新的位置</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>close()封闭当前子图形</li>\n<li>Path.setFillType\n<ul>\n<li>EVEN_ODD\n<ul>\n<li>even-odd rule （奇偶原则）：对于平面中的任意一点，向任意方向射出一条射线，这条射线和图形相交的次数（相交才算，相切不算哦）如果是奇数，则这个点被认为在图形内部，是要被涂色的区域；如果是偶数，则这个点被认为在图形外部，是不被涂色的区域。</li>\n</ul>\n</li>\n<li>WINDING （默认值）\n<ul>\n<li>非零环绕数原则</li>\n</ul>\n</li>\n<li>INVERSE_EVEN_ODD</li>\n<li>INVERSE_WINDING</li>\n</ul>\n</li>\n<li>setLastPoint\n<ul>\n<li>重置当前path中最后一个点位置，如果在绘制之前调用，效果和moveTo相同</li>\n</ul>\n</li>\n<li>isEmpty\n<ul>\n<li>判断Path是否为空</li>\n</ul>\n</li>\n<li>isRect\n<ul>\n<li>判断Path是否是一个矩形</li>\n</ul>\n</li>\n<li>set\n<ul>\n<li>用新的路径替换到当前路径所有内容</li>\n</ul>\n</li>\n<li>offset\n<ul>\n<li>对当前路径之前的操作进行偏移(不会影响之后的操作)</li>\n</ul>\n</li>\n<li>op\n<ul>\n<li>对两个Path进行布尔运算(即取交集、并集等操作)\n<ul>\n<li>DIFFERENCE\n<ul>\n<li>Path1中减去Path2后剩下的部分</li>\n</ul>\n</li>\n<li>REVERSE_DIFFERENCE\n<ul>\n<li>Path2中减去Path1后剩下的部分</li>\n</ul>\n</li>\n<li>INTERSECT\n<ul>\n<li>Path1与Path2相交的部分</li>\n</ul>\n</li>\n<li>UNION\n<ul>\n<li>包含全部Path1和Path2</li>\n</ul>\n</li>\n<li>XOR\n<ul>\n<li>包含Path1与Path2但不包括两者相交的部分</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>computeBounds\n<ul>\n<li>计算Path的边界</li>\n</ul>\n</li>\n<li>reset, rewind\n<ul>\n<li>清除Path中的内容，reset不保留内部数据结构，但会保留FillType.rewind会保留内部的数据结构，但不保留FillType</li>\n</ul>\n</li>\n<li>transform\n<ul>\n<li>矩阵变换</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"pathmeasure\"><a class=\"header-anchor\" href=\"#pathmeasure\">¶</a>PathMeasure</h3>\n<ol>\n<li>setPath\n<ul>\n<li>关联一个Path</li>\n</ul>\n</li>\n<li>isClosed\n<ul>\n<li>是否闭合</li>\n</ul>\n</li>\n<li>getLength\n<ul>\n<li>获取Path的长度</li>\n</ul>\n</li>\n<li>nextContour\n<ul>\n<li>跳转到下一个轮廓</li>\n</ul>\n</li>\n<li>getSegment\n<ul>\n<li>截取片段</li>\n</ul>\n</li>\n<li>getPosTan\n<ul>\n<li>用于得到路径上某一长度的位置以及该位置的正切值</li>\n</ul>\n</li>\n<li>getMatrix\n<ul>\n<li>获取指定长度的位置坐标及该点Matrix</li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h3 id=\"自定义绘制思维导图\"><a class=\"header-anchor\" href=\"#自定义绘制思维导图\">¶</a>自定义绘制思维导图</h3>\n<p><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsomf4p6dsj24742doqv6.jpg\" alt=\"\"></p>","more":"<h3 id=\"canvas-drawxxx\"><a class=\"header-anchor\" href=\"#canvas-drawxxx\">¶</a>Canvas.drawXXX()</h3>\n<ol>\n<li>drawColor</li>\n<li>canvas.drawRGB</li>\n<li>canvas.drawARGB</li>\n<li>drawCircle</li>\n<li>drawRect</li>\n<li>drawPoint</li>\n<li>drawPoints</li>\n<li>drawOval</li>\n<li>drawLine</li>\n<li>drawLines</li>\n<li>drawRoundRect</li>\n<li>drawArc</li>\n<li>drawPath</li>\n<li>drawBitmap</li>\n<li>drawBitmapMesh\n<ul>\n<li>可以绘制具有网格拉伸效果的 Bitmap</li>\n</ul>\n</li>\n<li>drawText</li>\n</ol>\n<h3 id=\"paint\"><a class=\"header-anchor\" href=\"#paint\">¶</a>Paint</h3>\n<ol>\n<li>颜色\n<ul>\n<li>setColor(int color)</li>\n<li>setARGB</li>\n<li>setShader\n<ul>\n<li>LinearGradient 线性渐变\n<ul>\n<li>CLAMP:</li>\n<li>MIRROR:</li>\n<li>REPEAT:</li>\n<li>概要: 三种着色规则</li>\n</ul>\n</li>\n<li>RadialGradient 辐射渐变</li>\n<li>SweepGradient 扫描渐变</li>\n<li>BitmapShader</li>\n<li>ComposeShader 混合着色器\n<ul>\n<li>ComposeShader() 在硬件加速下是不支持两个相同类型的 Shader 的</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>setColorFilter\n<ul>\n<li>LightingColorFilter\n<ul>\n<li>参数里的 mul 和  add 都是和颜色值格式相同的 int 值，其中 mul 用来和目标像素相乘，add 用来和目标像素相加</li>\n</ul>\n</li>\n<li>PorterDuffColorFilter\n<ul>\n<li>使用一个指定的颜色和一种指定的 PorterDuff.Mode 来与绘制对象进行合成</li>\n</ul>\n</li>\n<li>ColorMatrixColorFilter</li>\n</ul>\n</li>\n<li>setXfermode\n<ul>\n<li>PorterDuffXfermode</li>\n</ul>\n</li>\n<li>概要:  PorterDuff.Mode 在 Paint 一共有三处 API\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsomplwiv6j20h705176f.jpg\" alt=\"\"></li>\n</ul>\n</li>\n<li>概要: Xfermode注意事项\n<ul>\n<li>使用离屏缓冲</li>\n<li>控制好透明区域</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>效果\n<ul>\n<li>setTextSize</li>\n<li>setPathEffect\n<ul>\n<li>DashPathEffect\n<ul>\n<li>使用虚线来绘制线条</li>\n</ul>\n</li>\n<li>CornerPathEffect\n<ul>\n<li>把所有拐角变成圆角</li>\n</ul>\n</li>\n<li>DiscretePathEffect\n<ul>\n<li>把线条进行随机的偏离，让轮廓变得乱七八糟\n<ul>\n<li>segmentLength  用来拼接的每个线段的长度</li>\n<li>deviation 偏离量</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>PathDashPathEffect\n<ul>\n<li>使用一个 Path 来绘制「虚线」</li>\n<li>最后一个参数 style，是用来指定拐弯改变的时候 shape 的转换方式\n<ul>\n<li>TRANSLATE：位移</li>\n<li>ROTATE：旋转</li>\n<li>MORPH：变体</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>SumPathEffect\n<ul>\n<li>分别按照两种 PathEffect 分别对目标进行绘制</li>\n</ul>\n</li>\n<li>ComposePathEffect\n<ul>\n<li>它是先对目标 Path 使用一个 PathEffect，然后再对这个改变后的 Path 使用另一个 PathEffect</li>\n</ul>\n</li>\n<li>PathEffect 在有些情况下不支持硬件加速\n<ul>\n<li>Canvas.drawLine() 和 Canvas.drawLines() 方法画直线时，setPathEffect() 是不支持硬件加速的；</li>\n<li>PathDashPathEffect 对硬件加速的支持也有问题，所以当使用 PathDashPathEffect 的时候，最好也把硬件加速关了。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>setShadowLayer\n<ul>\n<li>在之后的绘制内容下面加一层阴影</li>\n</ul>\n</li>\n<li>setMaskFilter\n<ul>\n<li>BlurMaskFilter\n<ul>\n<li>模糊效果的 MaskFilter\n<ul>\n<li>NORMAL: 内外都模糊绘制</li>\n<li>SOLID: 内部正常绘制，外部模糊</li>\n<li>INNER: 内部模糊，外部不绘制</li>\n<li>OUTER: 内部不绘制，外部模糊（什么鬼？）</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>EmbossMaskFilter\n<ul>\n<li>浮雕效果的 MaskFilter</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>setStyle(Paint.Style style)</li>\n<li>setAntiAlias</li>\n<li>setStrokeWidth</li>\n<li>setStrokeCap\n<ul>\n<li>BUTT 平头、ROUND 圆头、SQUARE 方头</li>\n</ul>\n</li>\n<li>setStrokeJoin\n<ul>\n<li>MITER 尖角、 BEVEL 平角和 ROUND 圆角</li>\n</ul>\n</li>\n<li>setStrokeMiter\n<ul>\n<li>它用于设置 MITER 型拐角的延长线的最大值</li>\n</ul>\n</li>\n<li>setDither\n<ul>\n<li>设置图像的抖动</li>\n</ul>\n</li>\n<li>setFilterBitmap\n<ul>\n<li>设置是否使用双线性过滤来绘制 Bitmap</li>\n</ul>\n</li>\n<li>getFillPath\n<ul>\n<li>getFillPath(src, dst) 会计算出实际 Path，然后把结果保存在 dst 里。</li>\n</ul>\n</li>\n<li>getTextPath</li>\n<li>概要: 色彩优化</li>\n<li>概要: 线条形状</li>\n<li>概要: 获取绘制的 Path</li>\n</ul>\n</li>\n<li>文字绘制相关</li>\n<li>初始化类\n<ul>\n<li>reset\n<ul>\n<li>重置 Paint 的所有属性为默认值。相当于重新 new 一个。</li>\n</ul>\n</li>\n<li>set\n<ul>\n<li>把 src 的所有属性全部复制过来。</li>\n</ul>\n</li>\n<li>setFlags\n<ul>\n<li>paint.setFlags(Paint.ANTI_ALIAS_FLAG | Paint.DITHER_FLAG);</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"path\"><a class=\"header-anchor\" href=\"#path\">¶</a>Path</h3>\n<ol>\n<li>addXxx\n<ul>\n<li>addCircle</li>\n<li>addOval</li>\n<li>addRect</li>\n<li>addRoundRect</li>\n<li>addArc</li>\n<li>addPath</li>\n</ul>\n</li>\n<li>xxxTo\n<ul>\n<li>lineTo/rLineTo</li>\n<li>quadTo / rQuadTo</li>\n<li>cubicTo / rCubicTo</li>\n<li>moveTo / rMoveTo</li>\n<li>arcTo\n<ul>\n<li>forceMoveTo:true强制移动到新的位置</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>close()封闭当前子图形</li>\n<li>Path.setFillType\n<ul>\n<li>EVEN_ODD\n<ul>\n<li>even-odd rule （奇偶原则）：对于平面中的任意一点，向任意方向射出一条射线，这条射线和图形相交的次数（相交才算，相切不算哦）如果是奇数，则这个点被认为在图形内部，是要被涂色的区域；如果是偶数，则这个点被认为在图形外部，是不被涂色的区域。</li>\n</ul>\n</li>\n<li>WINDING （默认值）\n<ul>\n<li>非零环绕数原则</li>\n</ul>\n</li>\n<li>INVERSE_EVEN_ODD</li>\n<li>INVERSE_WINDING</li>\n</ul>\n</li>\n<li>setLastPoint\n<ul>\n<li>重置当前path中最后一个点位置，如果在绘制之前调用，效果和moveTo相同</li>\n</ul>\n</li>\n<li>isEmpty\n<ul>\n<li>判断Path是否为空</li>\n</ul>\n</li>\n<li>isRect\n<ul>\n<li>判断Path是否是一个矩形</li>\n</ul>\n</li>\n<li>set\n<ul>\n<li>用新的路径替换到当前路径所有内容</li>\n</ul>\n</li>\n<li>offset\n<ul>\n<li>对当前路径之前的操作进行偏移(不会影响之后的操作)</li>\n</ul>\n</li>\n<li>op\n<ul>\n<li>对两个Path进行布尔运算(即取交集、并集等操作)\n<ul>\n<li>DIFFERENCE\n<ul>\n<li>Path1中减去Path2后剩下的部分</li>\n</ul>\n</li>\n<li>REVERSE_DIFFERENCE\n<ul>\n<li>Path2中减去Path1后剩下的部分</li>\n</ul>\n</li>\n<li>INTERSECT\n<ul>\n<li>Path1与Path2相交的部分</li>\n</ul>\n</li>\n<li>UNION\n<ul>\n<li>包含全部Path1和Path2</li>\n</ul>\n</li>\n<li>XOR\n<ul>\n<li>包含Path1与Path2但不包括两者相交的部分</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>computeBounds\n<ul>\n<li>计算Path的边界</li>\n</ul>\n</li>\n<li>reset, rewind\n<ul>\n<li>清除Path中的内容，reset不保留内部数据结构，但会保留FillType.rewind会保留内部的数据结构，但不保留FillType</li>\n</ul>\n</li>\n<li>transform\n<ul>\n<li>矩阵变换</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"pathmeasure\"><a class=\"header-anchor\" href=\"#pathmeasure\">¶</a>PathMeasure</h3>\n<ol>\n<li>setPath\n<ul>\n<li>关联一个Path</li>\n</ul>\n</li>\n<li>isClosed\n<ul>\n<li>是否闭合</li>\n</ul>\n</li>\n<li>getLength\n<ul>\n<li>获取Path的长度</li>\n</ul>\n</li>\n<li>nextContour\n<ul>\n<li>跳转到下一个轮廓</li>\n</ul>\n</li>\n<li>getSegment\n<ul>\n<li>截取片段</li>\n</ul>\n</li>\n<li>getPosTan\n<ul>\n<li>用于得到路径上某一长度的位置以及该位置的正切值</li>\n</ul>\n</li>\n<li>getMatrix\n<ul>\n<li>获取指定长度的位置坐标及该点Matrix</li>\n</ul>\n</li>\n</ol>"},{"title":"自定义画板","date":"2018-02-05T12:39:04.000Z","_content":"买了个ipad pro，发现用proCreate画画挺有意思，于是决定用Andorid实现一个自定义View画板效果。\n\n<!-- more -->\n\n### 运行效果\n\n<img  height=\"400\" align=\"center\" src=\"http://osphuquui.bkt.clouddn.com/drawsomething.gif\"/>\n\n\n### 先贴代码，再分析\n\n#### 继承View，绘制画板\n```java\n/**\n * Created by lieeber on 2017/6/28.\n * 自定义画板，可以更换画笔颜色，粗细，实现了前进，后退，保存到本地等功能。\n */\npublic class DrawSomethingView extends View {\n    private final Paint linePaint;\n    private final Paint paintPaint;\n    private final Path fillPath;\n    private final Paint eraserPaint;\n    private float downX;\n    private float downY;\n    private Path linePath;\n\n    private final int DRAW_LINE = 0;\n    private final int DRAW_FILL = 1;\n    private final int DRAW_PAINT = 2;\n    private final int DRAW_ERASER = 3;\n\n    private int drawStyle = 0;\n\n    private int lineColor = Color.BLACK;\n    private int paintColor = Color.BLUE;\n    private int lineWidth = 20;\n    private float paintWidthProgress = 50;\n    private float lineWidthProgress = 50;\n    private int paintWidth = 70;\n\n    private float eraserWidthProgress = 50;\n    private int eraserWidth = 100;\n\n    public float getEraserWidthProgress() {\n        return eraserWidthProgress;\n    }\n\n    public void setEraserWidthProgress(float eraserWidthProgress) {\n        this.eraserWidthProgress = eraserWidthProgress;\n    }\n\n    public int getEraserWidth() {\n        return eraserWidth;\n    }\n\n    public void setEraserWidth() {\n        eraserPaint.setStrokeWidth(eraserWidth * eraserWidthProgress / 100);\n    }\n\n    public float getPaintWidthProgress() {\n        return paintWidthProgress;\n    }\n\n    public void setPaintWidthProgress(float paintWidthProgress) {\n        this.paintWidthProgress = paintWidthProgress;\n    }\n\n    public float getLineWidthProgress() {\n        return lineWidthProgress;\n    }\n\n    public void setLineWidthProgress(float lineWidthProgress) {\n        this.lineWidthProgress = lineWidthProgress;\n    }\n\n    public int getLineColor() {\n        return lineColor;\n    }\n\n    public void setLineColor(int lineColor) {\n        this.lineColor = lineColor;\n        linePaint.setColor(lineColor);\n    }\n\n    public int getPaintColor() {\n        return paintColor;\n    }\n\n    public void setPaintColor(int paintColor) {\n        this.paintColor = paintColor;\n        paintPaint.setColor(paintColor);\n    }\n\n    public int getLineWidth() {\n        return lineWidth;\n    }\n\n    public void setLineWidth() {\n        linePaint.setStrokeWidth(lineWidth * lineWidthProgress / 100);\n    }\n\n    public int getPaintWidth() {\n        return paintWidth;\n    }\n\n    public void setPaintWidth() {\n        paintPaint.setStrokeWidth(paintWidth * paintWidthProgress / 100);\n    }\n\n    private ArrayList<PathBean> pathlist = new ArrayList<>();\n    private ArrayList<PathBean> deletePathList = new ArrayList<>();\n\n    private final Canvas mCanvas;\n    private Bitmap mBitmap;\n    private int viewWidth;\n    private int viewHeight;\n\n    public DrawSomethingView(Context context, @Nullable AttributeSet attrs) {\n        super(context, attrs);\n        linePaint = new Paint(Paint.ANTI_ALIAS_FLAG | Paint.DITHER_FLAG);\n        linePaint.setStyle(Style.STROKE);\n        linePaint.setColor(lineColor);\n        linePaint.setStrokeWidth(lineWidth * lineWidthProgress / 100);\n        linePaint.setPathEffect(new CornerPathEffect(100f));\n        linePaint.setStrokeCap(Cap.ROUND);\n        linePaint.setStrokeJoin(Join.ROUND);\n\n        paintPaint = new Paint();\n        paintPaint.setStyle(Style.STROKE);\n        paintPaint.setColor(paintColor);\n        paintPaint.setStrokeWidth(paintWidth * paintWidthProgress / 100);\n        paintPaint.setStrokeCap(Cap.ROUND);\n        paintPaint.setPathEffect(new CornerPathEffect(100f));\n        paintPaint.setStrokeJoin(Join.ROUND);\n\n        eraserPaint = new Paint();\n        eraserPaint.setStyle(Style.STROKE);\n        eraserPaint.setAlpha(0);\n        eraserPaint.setXfermode(new PorterDuffXfermode(Mode.CLEAR));\n        eraserPaint.setColor(Color.TRANSPARENT);\n        eraserPaint.setStrokeWidth(eraserWidth * eraserWidthProgress / 100);\n        eraserPaint.setStrokeCap(Cap.ROUND);\n        eraserPaint.setPathEffect(new CornerPathEffect(100f));\n        eraserPaint.setStrokeJoin(Join.ROUND);\n\n        linePath = new Path();\n        fillPath = new Path();\n\n        mCanvas = new Canvas();\n    }\n\n\n    @Override protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n        super.onSizeChanged(w, h, oldw, oldh);\n        viewWidth = w;\n        viewHeight = h;\n        blankBitmap();\n    }\n\n    @Override public boolean onTouchEvent(MotionEvent event) {\n        switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                downX = event.getX();\n                downY = event.getY();\n                linePath = new Path();\n                linePath.moveTo(downX, downY);\n                break;\n            case MotionEvent.ACTION_MOVE:\n                downX = event.getX();\n                downY = event.getY();\n                switch (drawStyle) {\n                    case DRAW_LINE:\n                        linePath.lineTo(downX, downY);\n                        mCanvas.drawPath(linePath, linePaint);\n                        break;\n                    case DRAW_PAINT:\n                        linePath.lineTo(downX, downY);\n                        mCanvas.drawPath(linePath, paintPaint);\n                        break;\n                    case DRAW_ERASER:\n                        linePath.lineTo(downX, downY);\n                        mCanvas.drawPath(linePath, eraserPaint);\n                        break;\n                }\n                invalidate();\n                break;\n            case MotionEvent.ACTION_UP:\n                switch (drawStyle) {\n                    case DRAW_LINE:\n                        pathlist.add(new PathBean(linePath, linePaint, lineWidthProgress * lineWidth / 100, lineColor));\n                        break;\n                    case DRAW_PAINT:\n                        pathlist.add(new PathBean(linePath, paintPaint, paintWidthProgress * paintWidth / 100, paintColor));\n                        break;\n                    case DRAW_ERASER:\n                        pathlist.add(new PathBean(linePath, eraserPaint, eraserWidthProgress * eraserWidth / 100, Color.TRANSPARENT));\n                        break;\n                }\n                deletePathList.clear();\n\n                break;\n        }\n        return true;\n    }\n\n    @Override protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        canvas.drawBitmap(mBitmap, new Matrix(), null);\n    }\n\n    private void blankBitmap() {\n        mBitmap = Bitmap.createBitmap(viewWidth, viewHeight, Config.ARGB_8888);\n        mCanvas.setBitmap(mBitmap);\n//        mCanvas.drawColor(Color.WHITE);\n    }\n\n    public void clear() {\n        pathlist.clear();\n        deletePathList.clear();\n        blankBitmap();\n        invalidate();\n    }\n\n    public void reset() {\n        blankBitmap();\n        if (pathlist.size() > 0) {\n            PathBean pathBean = pathlist.get(pathlist.size() - 1);\n            pathlist.remove(pathBean);\n            deletePathList.add(pathBean);\n        }\n        for (int i = 0; i < pathlist.size(); i++) {\n            pathlist.get(i).paint.setStrokeWidth(pathlist.get(i).width);\n            pathlist.get(i).paint.setColor(pathlist.get(i).color);\n            mCanvas.drawPath(pathlist.get(i).path, pathlist.get(i).paint);\n        }\n        invalidate();\n    }\n\n    public void forward() {\n        if (deletePathList.size() > 0) {\n            PathBean pathBean = deletePathList.get(deletePathList.size() - 1);\n            pathBean.paint.setStrokeWidth(pathBean.width);\n            pathBean.paint.setColor(pathBean.color);\n            mCanvas.drawPath(pathBean.path, pathBean.paint);\n            deletePathList.remove(deletePathList.size() - 1);\n            pathlist.add(pathBean);\n        }\n        invalidate();\n    }\n\n    public void setDrawLine() {\n        drawStyle = DRAW_LINE;\n    }\n\n    public void setDrawPaint() {\n        drawStyle = DRAW_PAINT;\n    }\n\n    public void setEraser() {\n        drawStyle = DRAW_ERASER;\n    }\n\n    public int getlineColor() {\n        return lineColor;\n\n    }\n\n    public void save() {\n        if (ContextCompat.checkSelfPermission(getContext(),\n                Manifest.permission.WRITE_EXTERNAL_STORAGE)\n                == PackageManager.PERMISSION_GRANTED) {\n            //拥有读写文件权限\n            Log.i(TAG,\"拥有读写文件权限\");\n            //获得系统当前时间，并以该时间作为文件名\n            SimpleDateFormat formatter = new SimpleDateFormat(\"yyyyMMddHHmmss\");\n            Date curDate = new Date(System.currentTimeMillis());//获取当前时间\n            String dir = Environment.getExternalStorageDirectory().getAbsolutePath();\n            String str = formatter.format(curDate) + \"paint.png\";\n            File file = new File(dir + \"/\"+str);\n            FileOutputStream fos = null;\n            try {\n                fos = new FileOutputStream(file);\n                Toast.makeText(getContext(), \"保存成功\", Toast.LENGTH_LONG).show();\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n            mBitmap.compress(CompressFormat.PNG, 100, fos);\n            getContext().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(\"file://\" + Environment.getExternalStorageDirectory())));\n            Toast.makeText(getContext(), \"保存成功\", Toast.LENGTH_LONG).show();\n        }else{\n            Log.i(TAG,\"没有读写权限\");\n\n            Toast.makeText(getContext(), \"没有读写权限\", Toast.LENGTH_LONG).show();\n            //没有读写权限\n            if (ActivityCompat.shouldShowRequestPermissionRationale((Activity) getContext(),\n                    Manifest.permission.WRITE_EXTERNAL_STORAGE)){\n                ActivityCompat.requestPermissions((Activity) getContext(),\n                        new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},\n                        140);\n            }else{\n//                showPermissionDialog();\n            }\n        }\n    }\n}\n```\n#### 在Activity中添加逻辑操作\n\n```java\npublic class MainActivity extends AppCompatActivity {\n    private DrawSomethingView myView;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        myView = (DrawSomethingView) findViewById(R.id.myView);\n\n        findViewById(R.id.tvLine).setOnLongClickListener(new OnLongClickListener() {\n            @Override public boolean onLongClick(View v) {\n                SheetUtil sheetUtil = SheetUtil.getInstance();\n                int color = myView.getlineColor();\n                float progress = myView.getLineWidthProgress();\n                sheetUtil.addSheet(MainActivity.this, color, progress);\n                sheetUtil.showSheet();\n                sheetUtil.setSeekBarChangeListener(new SeekBarChangeListener() {\n                    @Override public void onProgress(float progress) {\n                        myView.setLineWidthProgress(progress);\n                        myView.setLineWidth();\n                    }\n\n                    @Override public void onColorChange(int color) {\n                        myView.setLineColor(color);\n                    }\n                });\n                return false;\n            }\n        });\n\n        findViewById(R.id.tvPaint).setOnLongClickListener(new OnLongClickListener() {\n            @Override public boolean onLongClick(View v) {\n                SheetUtil sheetUtil = SheetUtil.getInstance();\n                int color = myView.getPaintColor();\n                float progress = myView.getPaintWidthProgress();\n                sheetUtil.addSheet(MainActivity.this, color, progress);\n                sheetUtil.showSheet();\n                sheetUtil.setSeekBarChangeListener(new SeekBarChangeListener() {\n                    @Override public void onProgress(float progress) {\n                        myView.setPaintWidthProgress(progress);\n                        myView.setPaintWidth();\n                    }\n\n                    @Override public void onColorChange(int color) {\n                        myView.setPaintColor(color);\n                    }\n                });\n                return false;\n            }\n        });\n        findViewById(R.id.tvEraser).setOnLongClickListener(new OnLongClickListener() {\n            @Override public boolean onLongClick(View v) {\n                float progress = myView.getEraserWidthProgress();\n                SheetUtil sheetUtil = SheetUtil.getInstance();\n                sheetUtil.addSheet(MainActivity.this,-1, progress);\n                sheetUtil.showSheet();\n                sheetUtil.setSeekBarChangeListener(new SeekBarChangeListener() {\n                    @Override public void onProgress(float progress) {\n                        myView.setEraserWidthProgress(progress);\n                        myView.setEraserWidth();\n                    }\n\n                    @Override public void onColorChange(int color) {\n                    }\n                });\n                return false;\n            }\n        });\n        findViewById(R.id.tvLine).setSelected(true);\n    }\n\n    public void clear(View view) {\n        myView.clear();\n    }\n\n    public void reset(View view) {\n        myView.reset();\n    }\n\n    public void forward(View view) {\n        myView.forward();\n    }\n\n    public void drawLine(View view) {\n        clearSelect();\n        findViewById(R.id.tvLine).setSelected(true);\n        myView.setDrawLine();\n    }\n\n    public void drawPaint(View view) {\n        clearSelect();\n        findViewById(R.id.tvPaint).setSelected(true);\n        myView.setDrawPaint();\n    }\n\n    public void eraser(View view) {\n        clearSelect();\n        findViewById(R.id.tvEraser).setSelected(true);\n        myView.setEraser();\n    }\n    public  void clearSelect() {\n        findViewById(R.id.tvEraser).setSelected(false);\n        findViewById(R.id.tvLine).setSelected(false);\n        findViewById(R.id.tvPaint).setSelected(false);\n    }\n\n    public void save(View view) {\n        myView.save();\n    }\n}\n```\n\n#### Activity对应布局文件\n```xml\nactivity_main.xml\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <!--<ImageView-->\n    <!--android:layout_width=\"match_parent\"-->\n    <!--android:src=\"@drawable/timg\"-->\n    <!--android:scaleType=\"fitXY\"-->\n\n    <!--android:layout_height=\"match_parent\"/>-->\n    <LinearLayout\n        android:id=\"@+id/ll\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentLeft=\"true\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_alignParentTop=\"true\"\n        android:orientation=\"horizontal\">\n\n        <TextView\n            android:id=\"@+id/tvClear\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"30dp\"\n            android:background=\"@drawable/tv_bg\"\n            android:clickable=\"true\"\n            android:gravity=\"center\"\n            android:onClick=\"clear\"\n            android:paddingLeft=\"10dp\"\n            android:paddingRight=\"10dp\"\n            android:text=\"清除\"/>\n\n        <TextView\n            android:id=\"@+id/tvReset\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"30dp\"\n            android:background=\"@drawable/tv_bg_2\"\n            android:clickable=\"true\"\n            android:gravity=\"center\"\n            android:onClick=\"reset\"\n            android:paddingLeft=\"10dp\"\n            android:paddingRight=\"10dp\"\n            android:text=\"撤销\"/>\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"30dp\"\n            android:background=\"@drawable/tv_bg_3\"\n            android:clickable=\"true\"\n            android:gravity=\"center\"\n            android:onClick=\"forward\"\n            android:paddingLeft=\"10dp\"\n            android:paddingRight=\"10dp\"\n            android:text=\"前进\"/>\n\n        <TextView\n            android:id=\"@+id/tvLine\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"30dp\"\n            android:background=\"@drawable/tv_bg_4\"\n            android:clickable=\"true\"\n            android:gravity=\"center\"\n            android:onClick=\"drawLine\"\n            android:paddingLeft=\"10dp\"\n            android:paddingRight=\"10dp\"\n            android:text=\"线条\"/>\n        <TextView\n            android:id=\"@+id/tvPaint\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"30dp\"\n            android:background=\"@drawable/tv_bg_4\"\n            android:clickable=\"true\"\n            android:gravity=\"center\"\n            android:onClick=\"drawPaint\"\n            android:paddingLeft=\"5dp\"\n            android:paddingRight=\"5dp\"\n            android:text=\"画笔\"/>\n\n        <TextView\n            android:id=\"@+id/tvEraser\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"30dp\"\n            android:background=\"@drawable/tv_bg_4\"\n            android:clickable=\"true\"\n            android:gravity=\"center\"\n            android:onClick=\"eraser\"\n            android:paddingLeft=\"5dp\"\n            android:paddingRight=\"5dp\"\n            android:text=\"橡皮擦\"/>\n\n\n        <TextView\n            android:id=\"@+id/tvSave\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"30dp\"\n            android:background=\"@drawable/tv_bg_2\"\n            android:clickable=\"true\"\n            android:gravity=\"center\"\n            android:onClick=\"save\"\n            android:paddingLeft=\"5dp\"\n            android:paddingRight=\"5dp\"\n            android:text=\"保存\"/>\n    </LinearLayout>\n\n    <studentsdemo.lieeber.com.lbview.views.DrawSomethingView\n        android:id=\"@+id/myView\"\n        android:layout_width=\"match_parent\"\n\n        android:layout_height=\"match_parent\"\n        android:layout_below=\"@+id/ll\"/>\n</RelativeLayout>\n```\n#### 相关资源文件\n```xml\ntv_bg.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n\n    <item android:drawable=\"@color/colorPrimary\" android:state_pressed=\"true\"/>\n    <item android:drawable=\"@color/colorAccent\"/>\n</selector>\n\ntv_bg2.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n\n    <item android:drawable=\"@color/colorPrimary\" android:state_pressed=\"true\"/>\n    <item android:drawable=\"@color/color1\"/>\n</selector>\n\ntv_bg3.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n\n    <item android:drawable=\"@color/colorPrimary\" android:state_pressed=\"true\"/>\n    <item android:drawable=\"@color/color2\"/>\n</selector>\n\ntv_bg4.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n\n    <item  android:state_selected=\"true\">\n        <shape android:shape=\"rectangle\">\n            <corners android:radius=\"3dp\"/>\n            <stroke android:color=\"@color/colorAccent\"/>\n            <stroke android:width=\"1dp\"/>\n        </shape>\n    </item>\n    <item>\n        <shape android:shape=\"rectangle\">\n            <corners android:radius=\"6dp\"/>\n            <stroke android:color=\"#ffffffff\"/>\n            <stroke android:width=\"3dp\"/>\n        </shape>\n    </item>\n</selector>\n```\n#### 自定义弹框\n```java\npublic class SheetUtil {\n    private ViewGroup contentView;\n    private View sheetContent;\n    private static SheetUtil sheetUtil = new SheetUtil();\n    private Activity activity;\n    private View llSheet;\n    private View viewSheetBg;\n    private ColorPickerView colorPickerView;\n    private View colorView;\n    private SeekBar seekBar;\n    private TextView tvProgress;\n\n    public static SheetUtil getInstance() {\n        return sheetUtil;\n    }\n\n    public void addSheet(Activity activity, int originColor, float originProgress) {\n        this.activity = activity;\n        contentView = (ViewGroup) activity.findViewById(android.R.id.content);\n        sheetContent = LayoutInflater.from(activity).inflate(R.layout.setting_dialog, contentView, false);\n        sheetContent.setVisibility(View.GONE);\n        if (contentView.findViewById(R.id.view_sheet_bg) == null) {\n            contentView.addView(sheetContent);\n        }\n\n        viewSheetBg = sheetContent.findViewById(R.id.view_sheet_bg);\n        llSheet = sheetContent.findViewById(R.id.ll_sheet);\n        colorPickerView = (ColorPickerView) sheetContent.findViewById(R.id.color_picker);\n        colorView = sheetContent.findViewById(R.id.colorView);\n        seekBar = (SeekBar) sheetContent.findViewById(R.id.seek_bar);\n        tvProgress = (TextView) sheetContent.findViewById(R.id.tv_progress);\n\n\n        if (originColor == -1) {\n            sheetContent.findViewById(R.id.rl_color_picker).setVisibility(View.GONE);\n        }\n        seekBar.setProgress((int) originProgress);\n        tvProgress.setText((int) originProgress + \"%\");\n        colorView.setBackgroundColor(originColor);\n        colorPickerView.setOnSeekColorListener(new OnSeekColorListener() {\n            @Override public void onSeekColorListener(int color) {\n                colorView.setBackgroundColor(color);\n                if (seekBarChangeListener != null) {\n                    seekBarChangeListener.onColorChange(color);\n                }\n            }\n        });\n\n        viewSheetBg.setOnClickListener(new OnClickListener() {\n            @Override public void onClick(View v) {\n                disMissSheet();\n            }\n        });\n\n        seekBar.setOnSeekBarChangeListener(new OnSeekBarChangeListener() {\n            @Override public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n                System.out.println(progress);\n                if (seekBarChangeListener != null) {\n                    seekBarChangeListener.onProgress(progress);\n                }\n                tvProgress.setText(progress + \"%\");\n\n            }\n\n            @Override public void onStartTrackingTouch(SeekBar seekBar) {\n\n            }\n\n            @Override public void onStopTrackingTouch(SeekBar seekBar) {\n\n            }\n        });\n    }\n\n\n    public void showSheet() {\n        sheetContent.setVisibility(View.VISIBLE);\n        sheetContent.bringToFront();\n\n        llSheet.setTranslationY(activity.getResources().getDisplayMetrics().heightPixels);\n        ValueAnimator alphaAnimator = ValueAnimator.ofFloat(0, 1);\n        alphaAnimator.setInterpolator(new DecelerateInterpolator());\n        alphaAnimator.setDuration(300);\n        alphaAnimator.addUpdateListener(new AnimatorUpdateListener() {\n            @Override public void onAnimationUpdate(ValueAnimator animation) {\n                float alpha = (float) animation.getAnimatedValue();\n                viewSheetBg.setAlpha(alpha);\n            }\n        });\n        alphaAnimator.start();\n        ValueAnimator translationAniamtor = ValueAnimator.ofFloat(activity.getResources().getDisplayMetrics().heightPixels, 0);\n        translationAniamtor.setInterpolator(new DecelerateInterpolator());\n        translationAniamtor.setDuration(300);\n        translationAniamtor.addUpdateListener(new AnimatorUpdateListener() {\n            @Override public void onAnimationUpdate(ValueAnimator animation) {\n                float translationY = (float) animation.getAnimatedValue();\n                llSheet.setTranslationY(translationY);\n            }\n        });\n        translationAniamtor.start();\n\n    }\n\n    public void disMissSheet() {\n        if (viewSheetBg != null && llSheet != null) {\n            disMissSheet(viewSheetBg, llSheet);\n        }\n    }\n\n    private void disMissSheet(final View viewSheetBg, final View llSheet) {\n        ValueAnimator alphaAnimator = ValueAnimator.ofFloat(1, 0);\n        alphaAnimator.setInterpolator(new DecelerateInterpolator());\n        alphaAnimator.setDuration(300);\n        alphaAnimator.addUpdateListener(new AnimatorUpdateListener() {\n            @Override public void onAnimationUpdate(ValueAnimator animation) {\n                float alpha = (float) animation.getAnimatedValue();\n                viewSheetBg.setAlpha(alpha);\n            }\n        });\n        alphaAnimator.start();\n\n        ValueAnimator translationAniamtor = ValueAnimator.ofFloat(0, activity.getResources().getDisplayMetrics().heightPixels);\n        translationAniamtor.setInterpolator(new DecelerateInterpolator());\n        translationAniamtor.setDuration(300);\n        translationAniamtor.addUpdateListener(new AnimatorUpdateListener() {\n            @Override public void onAnimationUpdate(ValueAnimator animation) {\n                float translationY = (float) animation.getAnimatedValue();\n                llSheet.setTranslationY(translationY);\n            }\n        });\n        translationAniamtor.start();\n        translationAniamtor.addListener(new AnimatorListenerAdapter() {\n            @Override\n            public void onAnimationEnd(Animator animation) {\n                contentView.removeView(sheetContent);\n            }\n        });\n    }\n\n    public boolean isShowingSheet() {\n        if (contentView == null) {\n            return false;\n        }\n        if (contentView.findViewById(R.id.view_sheet_bg) == null) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n\n    public interface SeekBarChangeListener {\n        void onProgress(float progress);\n\n        void onColorChange(int color);\n    }\n\n    private SeekBarChangeListener seekBarChangeListener;\n\n    public void setSeekBarChangeListener(SeekBarChangeListener seekBarChangeListener) {\n        this.seekBarChangeListener = seekBarChangeListener;\n    }\n}\n```\n\n#### 自定义弹框对应布局\n```xml\nsetting_dialog.xml\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <View\n        android:id=\"@+id/view_sheet_bg\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:background=\"#88000000\"/>\n\n    <LinearLayout\n        android:id=\"@+id/ll_sheet\"\n        android:layout_width=\"300dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center\"\n        android:background=\"#ffffff\"\n        android:clickable=\"true\"\n        android:orientation=\"vertical\"\n        android:padding=\"20dp\">\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:text=\"粗细\"/>\n\n        <SeekBar\n            android:id=\"@+id/seek_bar\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"10dp\"\n            android:layout_marginTop=\"10dp\"/>\n\n        <TextView\n            android:id=\"@+id/tv_progress\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:layout_marginTop=\"5dp\"\n            android:text=\"50%\"/>\n\n        <RelativeLayout\n            android:id=\"@+id/rl_color_picker\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"20dp\"\n            android:gravity=\"center\">\n\n            <studentsdemo.lieeber.com.lbview.views.ColorPickerView\n                android:id=\"@+id/color_picker\"\n                android:layout_width=\"150dp\"\n                android:layout_height=\"150dp\"\n                android:layout_alignParentLeft=\"true\"/>\n\n            <View\n                android:id=\"@+id/colorView\"\n                android:layout_width=\"20dp\"\n                android:layout_height=\"20dp\"\n                android:layout_centerVertical=\"true\"\n                android:layout_marginLeft=\"40dp\"\n                android:layout_toRightOf=\"@+id/color_picker\"\n                android:background=\"#ff0000\"/>\n        </RelativeLayout>\n    </LinearLayout>\n</FrameLayout>\n```\n\n#### 自定义画笔颜色更改器\n```java\n/**\n * Created by lieeber on 2017/6/28.\n */\npublic class ColorPickerView extends View {\n    private Context context;\n    /**\n     * Currently selected color\n     */\n    private float[] colorHSV = new float[]{0f, 1f, 1f};\n\n    private Paint colorWheelPaint;\n\n    private Paint touchCirclePaint;\n\n    private int radius;\n\n    private int centerX;\n\n    private int centerY;\n\n    private int touchCircleX;\n\n    private int touchCircleY;\n\n    private OnSeekColorListener onSeekColorListener;\n\n    public ColorPickerView(Context context) {\n        this(context, null);\n    }\n\n    public ColorPickerView(Context context, AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public ColorPickerView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        init(context);\n    }\n\n    private void init(Context context) {\n        setLayerType(LAYER_TYPE_SOFTWARE, null);\n        this.context = context;\n        colorWheelPaint = new Paint();\n        colorWheelPaint.setAntiAlias(true);\n\n        touchCirclePaint = new Paint();\n        touchCirclePaint.setStyle(Paint.Style.STROKE);\n        touchCirclePaint.setColor(Color.WHITE);\n        touchCirclePaint.setAntiAlias(true);\n    }\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n\n        int widthSpecMode = MeasureSpec.getMode(widthMeasureSpec);\n        int heightSpecMode = MeasureSpec.getMode(heightMeasureSpec);\n\n        int widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);\n        int heightSpecSize = MeasureSpec.getSize(heightMeasureSpec);\n\n        //处理 wrap_content问题\n        int defaultDimension = dip2px(200);\n\n        if (widthSpecMode == MeasureSpec.AT_MOST && heightSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(defaultDimension, defaultDimension);\n        } else if (widthSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(defaultDimension, heightSpecSize);\n        } else if (heightSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(widthSpecSize, defaultDimension);\n        }\n    }\n    @Override\n    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n        super.onSizeChanged(w, h, oldw, oldh);\n        centerX = w / 2;\n        centerY = h / 2;\n        radius = Math.min(centerX, centerY);\n        createColorWheel();\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        canvas.drawCircle(centerX, centerY, radius, colorWheelPaint);\n        canvas.drawCircle(touchCircleX, touchCircleY, 10, touchCirclePaint);\n    }\n\n    /**\n     * create color wheel\n     */\n    private void createColorWheel() {\n        int colorCount = 30;\n        float colorAngleStep = 360 / 30.0f;\n        int colors[] = new int[colorCount];\n        float hsv[] = new float[]{0f, 1f, 1f};\n        for (int i = 0; i < colors.length; i++) {\n            hsv[0] = (i * colorAngleStep + 180) % 360;\n            colors[i] = Color.HSVToColor(hsv);\n        }\n        SweepGradient sweepGradient = new SweepGradient(centerX, centerY, colors, null);\n        RadialGradient radialGradient = new RadialGradient(centerX, centerY,\n                radius, 0xFFFFFFFF, 0x00FFFFFF, Shader.TileMode.CLAMP);\n        ComposeShader composeShader = new ComposeShader(sweepGradient, radialGradient, PorterDuff.Mode.SRC_OVER);\n        colorWheelPaint.setShader(composeShader);\n    }\n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        ViewParent parent = getParent();\n        if (parent != null)\n            parent.requestDisallowInterceptTouchEvent(true);\n        switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n            case MotionEvent.ACTION_MOVE:\n                int x = (int) event.getX();\n                int y = (int) event.getY();\n                int cx = x - centerX;\n                int cy = y - centerY;\n                double d = Math.sqrt(cx * cx + cy * cy);\n\n                if (d <= radius) {\n                    colorHSV[0] = (float) (Math.toDegrees(Math.atan2(cy, cx)) + 180f);\n                    colorHSV[1] = Math.max(0f, Math.min(1f, (float) (d / radius)));\n                    if (onSeekColorListener != null) {\n                        touchCircleY = y;\n                        touchCircleX = x;\n                        onSeekColorListener.onSeekColorListener(getColor());\n                        postInvalidate();\n                    }\n                }\n                break;\n            case MotionEvent.ACTION_UP:\n                break;\n        }\n        return true;\n    }\n\n    public void setOnSeekColorListener(OnSeekColorListener listener) {\n        this.onSeekColorListener = listener;\n    }\n\n    /**\n     * @param color 0~360\n     */\n    public void setHSVColor(int color) {\n        colorHSV[0] = color;\n        colorWheelPaint.setColor(Color.HSVToColor(colorHSV));\n        postInvalidate();\n    }\n    /**\n     * @param value 0~1.0\n     */\n    public void setHSVValue(float value) {\n        colorHSV[2] = value;\n        colorWheelPaint.setColor(Color.HSVToColor(colorHSV));\n        postInvalidate();\n    }\n\n    /**\n     * @param saturation 0~1.0\n     */\n    public void setHSVSaturation(float saturation) {\n        colorHSV[1] = saturation;\n        colorWheelPaint.setColor(Color.HSVToColor(colorHSV));\n        postInvalidate();\n    }\n\n    public void setColor(int color) {\n        Color.colorToHSV(color, colorHSV);\n    }\n\n    public int getColor() {\n        return Color.HSVToColor(colorHSV);\n    }\n\n\n    @Override\n    protected Parcelable onSaveInstanceState() {\n        Bundle state = new Bundle();\n        state.putFloatArray(\"color\", colorHSV);\n        state.putParcelable(\"super\", super.onSaveInstanceState());\n        return state;\n    }\n\n    @Override\n    protected void onRestoreInstanceState(Parcelable state) {\n        if (state instanceof Bundle) {\n            Bundle bundle = (Bundle) state;\n            colorHSV = bundle.getFloatArray(\"color\");\n            super.onRestoreInstanceState(bundle.getParcelable(\"super\"));\n        } else {\n            super.onRestoreInstanceState(state);\n        }\n    }\n\n    public int dip2px(float dpValue) {\n        final float scale = context.getResources().getDisplayMetrics().density;\n        return (int) (dpValue * scale + 0.5f);\n    }\n    public interface OnSeekColorListener {\n        void onSeekColorListener(int color);\n    }\n}\n```\n\n","source":"_posts/自定义控件-自定义画板.md","raw":"---\ntitle: 自定义画板\ntags:\n  - Android\n  - 自定义控件\ncategories:\n  - 自定义控件\ndate: 2018-02-05 20:39:04\n---\n买了个ipad pro，发现用proCreate画画挺有意思，于是决定用Andorid实现一个自定义View画板效果。\n\n<!-- more -->\n\n### 运行效果\n\n<img  height=\"400\" align=\"center\" src=\"http://osphuquui.bkt.clouddn.com/drawsomething.gif\"/>\n\n\n### 先贴代码，再分析\n\n#### 继承View，绘制画板\n```java\n/**\n * Created by lieeber on 2017/6/28.\n * 自定义画板，可以更换画笔颜色，粗细，实现了前进，后退，保存到本地等功能。\n */\npublic class DrawSomethingView extends View {\n    private final Paint linePaint;\n    private final Paint paintPaint;\n    private final Path fillPath;\n    private final Paint eraserPaint;\n    private float downX;\n    private float downY;\n    private Path linePath;\n\n    private final int DRAW_LINE = 0;\n    private final int DRAW_FILL = 1;\n    private final int DRAW_PAINT = 2;\n    private final int DRAW_ERASER = 3;\n\n    private int drawStyle = 0;\n\n    private int lineColor = Color.BLACK;\n    private int paintColor = Color.BLUE;\n    private int lineWidth = 20;\n    private float paintWidthProgress = 50;\n    private float lineWidthProgress = 50;\n    private int paintWidth = 70;\n\n    private float eraserWidthProgress = 50;\n    private int eraserWidth = 100;\n\n    public float getEraserWidthProgress() {\n        return eraserWidthProgress;\n    }\n\n    public void setEraserWidthProgress(float eraserWidthProgress) {\n        this.eraserWidthProgress = eraserWidthProgress;\n    }\n\n    public int getEraserWidth() {\n        return eraserWidth;\n    }\n\n    public void setEraserWidth() {\n        eraserPaint.setStrokeWidth(eraserWidth * eraserWidthProgress / 100);\n    }\n\n    public float getPaintWidthProgress() {\n        return paintWidthProgress;\n    }\n\n    public void setPaintWidthProgress(float paintWidthProgress) {\n        this.paintWidthProgress = paintWidthProgress;\n    }\n\n    public float getLineWidthProgress() {\n        return lineWidthProgress;\n    }\n\n    public void setLineWidthProgress(float lineWidthProgress) {\n        this.lineWidthProgress = lineWidthProgress;\n    }\n\n    public int getLineColor() {\n        return lineColor;\n    }\n\n    public void setLineColor(int lineColor) {\n        this.lineColor = lineColor;\n        linePaint.setColor(lineColor);\n    }\n\n    public int getPaintColor() {\n        return paintColor;\n    }\n\n    public void setPaintColor(int paintColor) {\n        this.paintColor = paintColor;\n        paintPaint.setColor(paintColor);\n    }\n\n    public int getLineWidth() {\n        return lineWidth;\n    }\n\n    public void setLineWidth() {\n        linePaint.setStrokeWidth(lineWidth * lineWidthProgress / 100);\n    }\n\n    public int getPaintWidth() {\n        return paintWidth;\n    }\n\n    public void setPaintWidth() {\n        paintPaint.setStrokeWidth(paintWidth * paintWidthProgress / 100);\n    }\n\n    private ArrayList<PathBean> pathlist = new ArrayList<>();\n    private ArrayList<PathBean> deletePathList = new ArrayList<>();\n\n    private final Canvas mCanvas;\n    private Bitmap mBitmap;\n    private int viewWidth;\n    private int viewHeight;\n\n    public DrawSomethingView(Context context, @Nullable AttributeSet attrs) {\n        super(context, attrs);\n        linePaint = new Paint(Paint.ANTI_ALIAS_FLAG | Paint.DITHER_FLAG);\n        linePaint.setStyle(Style.STROKE);\n        linePaint.setColor(lineColor);\n        linePaint.setStrokeWidth(lineWidth * lineWidthProgress / 100);\n        linePaint.setPathEffect(new CornerPathEffect(100f));\n        linePaint.setStrokeCap(Cap.ROUND);\n        linePaint.setStrokeJoin(Join.ROUND);\n\n        paintPaint = new Paint();\n        paintPaint.setStyle(Style.STROKE);\n        paintPaint.setColor(paintColor);\n        paintPaint.setStrokeWidth(paintWidth * paintWidthProgress / 100);\n        paintPaint.setStrokeCap(Cap.ROUND);\n        paintPaint.setPathEffect(new CornerPathEffect(100f));\n        paintPaint.setStrokeJoin(Join.ROUND);\n\n        eraserPaint = new Paint();\n        eraserPaint.setStyle(Style.STROKE);\n        eraserPaint.setAlpha(0);\n        eraserPaint.setXfermode(new PorterDuffXfermode(Mode.CLEAR));\n        eraserPaint.setColor(Color.TRANSPARENT);\n        eraserPaint.setStrokeWidth(eraserWidth * eraserWidthProgress / 100);\n        eraserPaint.setStrokeCap(Cap.ROUND);\n        eraserPaint.setPathEffect(new CornerPathEffect(100f));\n        eraserPaint.setStrokeJoin(Join.ROUND);\n\n        linePath = new Path();\n        fillPath = new Path();\n\n        mCanvas = new Canvas();\n    }\n\n\n    @Override protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n        super.onSizeChanged(w, h, oldw, oldh);\n        viewWidth = w;\n        viewHeight = h;\n        blankBitmap();\n    }\n\n    @Override public boolean onTouchEvent(MotionEvent event) {\n        switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n                downX = event.getX();\n                downY = event.getY();\n                linePath = new Path();\n                linePath.moveTo(downX, downY);\n                break;\n            case MotionEvent.ACTION_MOVE:\n                downX = event.getX();\n                downY = event.getY();\n                switch (drawStyle) {\n                    case DRAW_LINE:\n                        linePath.lineTo(downX, downY);\n                        mCanvas.drawPath(linePath, linePaint);\n                        break;\n                    case DRAW_PAINT:\n                        linePath.lineTo(downX, downY);\n                        mCanvas.drawPath(linePath, paintPaint);\n                        break;\n                    case DRAW_ERASER:\n                        linePath.lineTo(downX, downY);\n                        mCanvas.drawPath(linePath, eraserPaint);\n                        break;\n                }\n                invalidate();\n                break;\n            case MotionEvent.ACTION_UP:\n                switch (drawStyle) {\n                    case DRAW_LINE:\n                        pathlist.add(new PathBean(linePath, linePaint, lineWidthProgress * lineWidth / 100, lineColor));\n                        break;\n                    case DRAW_PAINT:\n                        pathlist.add(new PathBean(linePath, paintPaint, paintWidthProgress * paintWidth / 100, paintColor));\n                        break;\n                    case DRAW_ERASER:\n                        pathlist.add(new PathBean(linePath, eraserPaint, eraserWidthProgress * eraserWidth / 100, Color.TRANSPARENT));\n                        break;\n                }\n                deletePathList.clear();\n\n                break;\n        }\n        return true;\n    }\n\n    @Override protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        canvas.drawBitmap(mBitmap, new Matrix(), null);\n    }\n\n    private void blankBitmap() {\n        mBitmap = Bitmap.createBitmap(viewWidth, viewHeight, Config.ARGB_8888);\n        mCanvas.setBitmap(mBitmap);\n//        mCanvas.drawColor(Color.WHITE);\n    }\n\n    public void clear() {\n        pathlist.clear();\n        deletePathList.clear();\n        blankBitmap();\n        invalidate();\n    }\n\n    public void reset() {\n        blankBitmap();\n        if (pathlist.size() > 0) {\n            PathBean pathBean = pathlist.get(pathlist.size() - 1);\n            pathlist.remove(pathBean);\n            deletePathList.add(pathBean);\n        }\n        for (int i = 0; i < pathlist.size(); i++) {\n            pathlist.get(i).paint.setStrokeWidth(pathlist.get(i).width);\n            pathlist.get(i).paint.setColor(pathlist.get(i).color);\n            mCanvas.drawPath(pathlist.get(i).path, pathlist.get(i).paint);\n        }\n        invalidate();\n    }\n\n    public void forward() {\n        if (deletePathList.size() > 0) {\n            PathBean pathBean = deletePathList.get(deletePathList.size() - 1);\n            pathBean.paint.setStrokeWidth(pathBean.width);\n            pathBean.paint.setColor(pathBean.color);\n            mCanvas.drawPath(pathBean.path, pathBean.paint);\n            deletePathList.remove(deletePathList.size() - 1);\n            pathlist.add(pathBean);\n        }\n        invalidate();\n    }\n\n    public void setDrawLine() {\n        drawStyle = DRAW_LINE;\n    }\n\n    public void setDrawPaint() {\n        drawStyle = DRAW_PAINT;\n    }\n\n    public void setEraser() {\n        drawStyle = DRAW_ERASER;\n    }\n\n    public int getlineColor() {\n        return lineColor;\n\n    }\n\n    public void save() {\n        if (ContextCompat.checkSelfPermission(getContext(),\n                Manifest.permission.WRITE_EXTERNAL_STORAGE)\n                == PackageManager.PERMISSION_GRANTED) {\n            //拥有读写文件权限\n            Log.i(TAG,\"拥有读写文件权限\");\n            //获得系统当前时间，并以该时间作为文件名\n            SimpleDateFormat formatter = new SimpleDateFormat(\"yyyyMMddHHmmss\");\n            Date curDate = new Date(System.currentTimeMillis());//获取当前时间\n            String dir = Environment.getExternalStorageDirectory().getAbsolutePath();\n            String str = formatter.format(curDate) + \"paint.png\";\n            File file = new File(dir + \"/\"+str);\n            FileOutputStream fos = null;\n            try {\n                fos = new FileOutputStream(file);\n                Toast.makeText(getContext(), \"保存成功\", Toast.LENGTH_LONG).show();\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n            mBitmap.compress(CompressFormat.PNG, 100, fos);\n            getContext().sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(\"file://\" + Environment.getExternalStorageDirectory())));\n            Toast.makeText(getContext(), \"保存成功\", Toast.LENGTH_LONG).show();\n        }else{\n            Log.i(TAG,\"没有读写权限\");\n\n            Toast.makeText(getContext(), \"没有读写权限\", Toast.LENGTH_LONG).show();\n            //没有读写权限\n            if (ActivityCompat.shouldShowRequestPermissionRationale((Activity) getContext(),\n                    Manifest.permission.WRITE_EXTERNAL_STORAGE)){\n                ActivityCompat.requestPermissions((Activity) getContext(),\n                        new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},\n                        140);\n            }else{\n//                showPermissionDialog();\n            }\n        }\n    }\n}\n```\n#### 在Activity中添加逻辑操作\n\n```java\npublic class MainActivity extends AppCompatActivity {\n    private DrawSomethingView myView;\n\n    @Override\n    protected void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_main);\n        myView = (DrawSomethingView) findViewById(R.id.myView);\n\n        findViewById(R.id.tvLine).setOnLongClickListener(new OnLongClickListener() {\n            @Override public boolean onLongClick(View v) {\n                SheetUtil sheetUtil = SheetUtil.getInstance();\n                int color = myView.getlineColor();\n                float progress = myView.getLineWidthProgress();\n                sheetUtil.addSheet(MainActivity.this, color, progress);\n                sheetUtil.showSheet();\n                sheetUtil.setSeekBarChangeListener(new SeekBarChangeListener() {\n                    @Override public void onProgress(float progress) {\n                        myView.setLineWidthProgress(progress);\n                        myView.setLineWidth();\n                    }\n\n                    @Override public void onColorChange(int color) {\n                        myView.setLineColor(color);\n                    }\n                });\n                return false;\n            }\n        });\n\n        findViewById(R.id.tvPaint).setOnLongClickListener(new OnLongClickListener() {\n            @Override public boolean onLongClick(View v) {\n                SheetUtil sheetUtil = SheetUtil.getInstance();\n                int color = myView.getPaintColor();\n                float progress = myView.getPaintWidthProgress();\n                sheetUtil.addSheet(MainActivity.this, color, progress);\n                sheetUtil.showSheet();\n                sheetUtil.setSeekBarChangeListener(new SeekBarChangeListener() {\n                    @Override public void onProgress(float progress) {\n                        myView.setPaintWidthProgress(progress);\n                        myView.setPaintWidth();\n                    }\n\n                    @Override public void onColorChange(int color) {\n                        myView.setPaintColor(color);\n                    }\n                });\n                return false;\n            }\n        });\n        findViewById(R.id.tvEraser).setOnLongClickListener(new OnLongClickListener() {\n            @Override public boolean onLongClick(View v) {\n                float progress = myView.getEraserWidthProgress();\n                SheetUtil sheetUtil = SheetUtil.getInstance();\n                sheetUtil.addSheet(MainActivity.this,-1, progress);\n                sheetUtil.showSheet();\n                sheetUtil.setSeekBarChangeListener(new SeekBarChangeListener() {\n                    @Override public void onProgress(float progress) {\n                        myView.setEraserWidthProgress(progress);\n                        myView.setEraserWidth();\n                    }\n\n                    @Override public void onColorChange(int color) {\n                    }\n                });\n                return false;\n            }\n        });\n        findViewById(R.id.tvLine).setSelected(true);\n    }\n\n    public void clear(View view) {\n        myView.clear();\n    }\n\n    public void reset(View view) {\n        myView.reset();\n    }\n\n    public void forward(View view) {\n        myView.forward();\n    }\n\n    public void drawLine(View view) {\n        clearSelect();\n        findViewById(R.id.tvLine).setSelected(true);\n        myView.setDrawLine();\n    }\n\n    public void drawPaint(View view) {\n        clearSelect();\n        findViewById(R.id.tvPaint).setSelected(true);\n        myView.setDrawPaint();\n    }\n\n    public void eraser(View view) {\n        clearSelect();\n        findViewById(R.id.tvEraser).setSelected(true);\n        myView.setEraser();\n    }\n    public  void clearSelect() {\n        findViewById(R.id.tvEraser).setSelected(false);\n        findViewById(R.id.tvLine).setSelected(false);\n        findViewById(R.id.tvPaint).setSelected(false);\n    }\n\n    public void save(View view) {\n        myView.save();\n    }\n}\n```\n\n#### Activity对应布局文件\n```xml\nactivity_main.xml\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<RelativeLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <!--<ImageView-->\n    <!--android:layout_width=\"match_parent\"-->\n    <!--android:src=\"@drawable/timg\"-->\n    <!--android:scaleType=\"fitXY\"-->\n\n    <!--android:layout_height=\"match_parent\"/>-->\n    <LinearLayout\n        android:id=\"@+id/ll\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"wrap_content\"\n        android:layout_alignParentLeft=\"true\"\n        android:layout_alignParentStart=\"true\"\n        android:layout_alignParentTop=\"true\"\n        android:orientation=\"horizontal\">\n\n        <TextView\n            android:id=\"@+id/tvClear\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"30dp\"\n            android:background=\"@drawable/tv_bg\"\n            android:clickable=\"true\"\n            android:gravity=\"center\"\n            android:onClick=\"clear\"\n            android:paddingLeft=\"10dp\"\n            android:paddingRight=\"10dp\"\n            android:text=\"清除\"/>\n\n        <TextView\n            android:id=\"@+id/tvReset\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"30dp\"\n            android:background=\"@drawable/tv_bg_2\"\n            android:clickable=\"true\"\n            android:gravity=\"center\"\n            android:onClick=\"reset\"\n            android:paddingLeft=\"10dp\"\n            android:paddingRight=\"10dp\"\n            android:text=\"撤销\"/>\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"30dp\"\n            android:background=\"@drawable/tv_bg_3\"\n            android:clickable=\"true\"\n            android:gravity=\"center\"\n            android:onClick=\"forward\"\n            android:paddingLeft=\"10dp\"\n            android:paddingRight=\"10dp\"\n            android:text=\"前进\"/>\n\n        <TextView\n            android:id=\"@+id/tvLine\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"30dp\"\n            android:background=\"@drawable/tv_bg_4\"\n            android:clickable=\"true\"\n            android:gravity=\"center\"\n            android:onClick=\"drawLine\"\n            android:paddingLeft=\"10dp\"\n            android:paddingRight=\"10dp\"\n            android:text=\"线条\"/>\n        <TextView\n            android:id=\"@+id/tvPaint\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"30dp\"\n            android:background=\"@drawable/tv_bg_4\"\n            android:clickable=\"true\"\n            android:gravity=\"center\"\n            android:onClick=\"drawPaint\"\n            android:paddingLeft=\"5dp\"\n            android:paddingRight=\"5dp\"\n            android:text=\"画笔\"/>\n\n        <TextView\n            android:id=\"@+id/tvEraser\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"30dp\"\n            android:background=\"@drawable/tv_bg_4\"\n            android:clickable=\"true\"\n            android:gravity=\"center\"\n            android:onClick=\"eraser\"\n            android:paddingLeft=\"5dp\"\n            android:paddingRight=\"5dp\"\n            android:text=\"橡皮擦\"/>\n\n\n        <TextView\n            android:id=\"@+id/tvSave\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"30dp\"\n            android:background=\"@drawable/tv_bg_2\"\n            android:clickable=\"true\"\n            android:gravity=\"center\"\n            android:onClick=\"save\"\n            android:paddingLeft=\"5dp\"\n            android:paddingRight=\"5dp\"\n            android:text=\"保存\"/>\n    </LinearLayout>\n\n    <studentsdemo.lieeber.com.lbview.views.DrawSomethingView\n        android:id=\"@+id/myView\"\n        android:layout_width=\"match_parent\"\n\n        android:layout_height=\"match_parent\"\n        android:layout_below=\"@+id/ll\"/>\n</RelativeLayout>\n```\n#### 相关资源文件\n```xml\ntv_bg.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n\n    <item android:drawable=\"@color/colorPrimary\" android:state_pressed=\"true\"/>\n    <item android:drawable=\"@color/colorAccent\"/>\n</selector>\n\ntv_bg2.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n\n    <item android:drawable=\"@color/colorPrimary\" android:state_pressed=\"true\"/>\n    <item android:drawable=\"@color/color1\"/>\n</selector>\n\ntv_bg3.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n\n    <item android:drawable=\"@color/colorPrimary\" android:state_pressed=\"true\"/>\n    <item android:drawable=\"@color/color2\"/>\n</selector>\n\ntv_bg4.xml\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<selector xmlns:android=\"http://schemas.android.com/apk/res/android\">\n\n    <item  android:state_selected=\"true\">\n        <shape android:shape=\"rectangle\">\n            <corners android:radius=\"3dp\"/>\n            <stroke android:color=\"@color/colorAccent\"/>\n            <stroke android:width=\"1dp\"/>\n        </shape>\n    </item>\n    <item>\n        <shape android:shape=\"rectangle\">\n            <corners android:radius=\"6dp\"/>\n            <stroke android:color=\"#ffffffff\"/>\n            <stroke android:width=\"3dp\"/>\n        </shape>\n    </item>\n</selector>\n```\n#### 自定义弹框\n```java\npublic class SheetUtil {\n    private ViewGroup contentView;\n    private View sheetContent;\n    private static SheetUtil sheetUtil = new SheetUtil();\n    private Activity activity;\n    private View llSheet;\n    private View viewSheetBg;\n    private ColorPickerView colorPickerView;\n    private View colorView;\n    private SeekBar seekBar;\n    private TextView tvProgress;\n\n    public static SheetUtil getInstance() {\n        return sheetUtil;\n    }\n\n    public void addSheet(Activity activity, int originColor, float originProgress) {\n        this.activity = activity;\n        contentView = (ViewGroup) activity.findViewById(android.R.id.content);\n        sheetContent = LayoutInflater.from(activity).inflate(R.layout.setting_dialog, contentView, false);\n        sheetContent.setVisibility(View.GONE);\n        if (contentView.findViewById(R.id.view_sheet_bg) == null) {\n            contentView.addView(sheetContent);\n        }\n\n        viewSheetBg = sheetContent.findViewById(R.id.view_sheet_bg);\n        llSheet = sheetContent.findViewById(R.id.ll_sheet);\n        colorPickerView = (ColorPickerView) sheetContent.findViewById(R.id.color_picker);\n        colorView = sheetContent.findViewById(R.id.colorView);\n        seekBar = (SeekBar) sheetContent.findViewById(R.id.seek_bar);\n        tvProgress = (TextView) sheetContent.findViewById(R.id.tv_progress);\n\n\n        if (originColor == -1) {\n            sheetContent.findViewById(R.id.rl_color_picker).setVisibility(View.GONE);\n        }\n        seekBar.setProgress((int) originProgress);\n        tvProgress.setText((int) originProgress + \"%\");\n        colorView.setBackgroundColor(originColor);\n        colorPickerView.setOnSeekColorListener(new OnSeekColorListener() {\n            @Override public void onSeekColorListener(int color) {\n                colorView.setBackgroundColor(color);\n                if (seekBarChangeListener != null) {\n                    seekBarChangeListener.onColorChange(color);\n                }\n            }\n        });\n\n        viewSheetBg.setOnClickListener(new OnClickListener() {\n            @Override public void onClick(View v) {\n                disMissSheet();\n            }\n        });\n\n        seekBar.setOnSeekBarChangeListener(new OnSeekBarChangeListener() {\n            @Override public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {\n                System.out.println(progress);\n                if (seekBarChangeListener != null) {\n                    seekBarChangeListener.onProgress(progress);\n                }\n                tvProgress.setText(progress + \"%\");\n\n            }\n\n            @Override public void onStartTrackingTouch(SeekBar seekBar) {\n\n            }\n\n            @Override public void onStopTrackingTouch(SeekBar seekBar) {\n\n            }\n        });\n    }\n\n\n    public void showSheet() {\n        sheetContent.setVisibility(View.VISIBLE);\n        sheetContent.bringToFront();\n\n        llSheet.setTranslationY(activity.getResources().getDisplayMetrics().heightPixels);\n        ValueAnimator alphaAnimator = ValueAnimator.ofFloat(0, 1);\n        alphaAnimator.setInterpolator(new DecelerateInterpolator());\n        alphaAnimator.setDuration(300);\n        alphaAnimator.addUpdateListener(new AnimatorUpdateListener() {\n            @Override public void onAnimationUpdate(ValueAnimator animation) {\n                float alpha = (float) animation.getAnimatedValue();\n                viewSheetBg.setAlpha(alpha);\n            }\n        });\n        alphaAnimator.start();\n        ValueAnimator translationAniamtor = ValueAnimator.ofFloat(activity.getResources().getDisplayMetrics().heightPixels, 0);\n        translationAniamtor.setInterpolator(new DecelerateInterpolator());\n        translationAniamtor.setDuration(300);\n        translationAniamtor.addUpdateListener(new AnimatorUpdateListener() {\n            @Override public void onAnimationUpdate(ValueAnimator animation) {\n                float translationY = (float) animation.getAnimatedValue();\n                llSheet.setTranslationY(translationY);\n            }\n        });\n        translationAniamtor.start();\n\n    }\n\n    public void disMissSheet() {\n        if (viewSheetBg != null && llSheet != null) {\n            disMissSheet(viewSheetBg, llSheet);\n        }\n    }\n\n    private void disMissSheet(final View viewSheetBg, final View llSheet) {\n        ValueAnimator alphaAnimator = ValueAnimator.ofFloat(1, 0);\n        alphaAnimator.setInterpolator(new DecelerateInterpolator());\n        alphaAnimator.setDuration(300);\n        alphaAnimator.addUpdateListener(new AnimatorUpdateListener() {\n            @Override public void onAnimationUpdate(ValueAnimator animation) {\n                float alpha = (float) animation.getAnimatedValue();\n                viewSheetBg.setAlpha(alpha);\n            }\n        });\n        alphaAnimator.start();\n\n        ValueAnimator translationAniamtor = ValueAnimator.ofFloat(0, activity.getResources().getDisplayMetrics().heightPixels);\n        translationAniamtor.setInterpolator(new DecelerateInterpolator());\n        translationAniamtor.setDuration(300);\n        translationAniamtor.addUpdateListener(new AnimatorUpdateListener() {\n            @Override public void onAnimationUpdate(ValueAnimator animation) {\n                float translationY = (float) animation.getAnimatedValue();\n                llSheet.setTranslationY(translationY);\n            }\n        });\n        translationAniamtor.start();\n        translationAniamtor.addListener(new AnimatorListenerAdapter() {\n            @Override\n            public void onAnimationEnd(Animator animation) {\n                contentView.removeView(sheetContent);\n            }\n        });\n    }\n\n    public boolean isShowingSheet() {\n        if (contentView == null) {\n            return false;\n        }\n        if (contentView.findViewById(R.id.view_sheet_bg) == null) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n\n    public interface SeekBarChangeListener {\n        void onProgress(float progress);\n\n        void onColorChange(int color);\n    }\n\n    private SeekBarChangeListener seekBarChangeListener;\n\n    public void setSeekBarChangeListener(SeekBarChangeListener seekBarChangeListener) {\n        this.seekBarChangeListener = seekBarChangeListener;\n    }\n}\n```\n\n#### 自定义弹框对应布局\n```xml\nsetting_dialog.xml\n\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<FrameLayout\n    xmlns:android=\"http://schemas.android.com/apk/res/android\"\n    android:layout_width=\"match_parent\"\n    android:layout_height=\"match_parent\">\n\n    <View\n        android:id=\"@+id/view_sheet_bg\"\n        android:layout_width=\"match_parent\"\n        android:layout_height=\"match_parent\"\n        android:background=\"#88000000\"/>\n\n    <LinearLayout\n        android:id=\"@+id/ll_sheet\"\n        android:layout_width=\"300dp\"\n        android:layout_height=\"wrap_content\"\n        android:layout_gravity=\"center\"\n        android:background=\"#ffffff\"\n        android:clickable=\"true\"\n        android:orientation=\"vertical\"\n        android:padding=\"20dp\">\n\n        <TextView\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:text=\"粗细\"/>\n\n        <SeekBar\n            android:id=\"@+id/seek_bar\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"10dp\"\n            android:layout_marginTop=\"10dp\"/>\n\n        <TextView\n            android:id=\"@+id/tv_progress\"\n            android:layout_width=\"wrap_content\"\n            android:layout_height=\"wrap_content\"\n            android:layout_gravity=\"center_horizontal\"\n            android:layout_marginTop=\"5dp\"\n            android:text=\"50%\"/>\n\n        <RelativeLayout\n            android:id=\"@+id/rl_color_picker\"\n            android:layout_width=\"match_parent\"\n            android:layout_height=\"wrap_content\"\n            android:layout_marginTop=\"20dp\"\n            android:gravity=\"center\">\n\n            <studentsdemo.lieeber.com.lbview.views.ColorPickerView\n                android:id=\"@+id/color_picker\"\n                android:layout_width=\"150dp\"\n                android:layout_height=\"150dp\"\n                android:layout_alignParentLeft=\"true\"/>\n\n            <View\n                android:id=\"@+id/colorView\"\n                android:layout_width=\"20dp\"\n                android:layout_height=\"20dp\"\n                android:layout_centerVertical=\"true\"\n                android:layout_marginLeft=\"40dp\"\n                android:layout_toRightOf=\"@+id/color_picker\"\n                android:background=\"#ff0000\"/>\n        </RelativeLayout>\n    </LinearLayout>\n</FrameLayout>\n```\n\n#### 自定义画笔颜色更改器\n```java\n/**\n * Created by lieeber on 2017/6/28.\n */\npublic class ColorPickerView extends View {\n    private Context context;\n    /**\n     * Currently selected color\n     */\n    private float[] colorHSV = new float[]{0f, 1f, 1f};\n\n    private Paint colorWheelPaint;\n\n    private Paint touchCirclePaint;\n\n    private int radius;\n\n    private int centerX;\n\n    private int centerY;\n\n    private int touchCircleX;\n\n    private int touchCircleY;\n\n    private OnSeekColorListener onSeekColorListener;\n\n    public ColorPickerView(Context context) {\n        this(context, null);\n    }\n\n    public ColorPickerView(Context context, AttributeSet attrs) {\n        this(context, attrs, 0);\n    }\n\n    public ColorPickerView(Context context, AttributeSet attrs, int defStyleAttr) {\n        super(context, attrs, defStyleAttr);\n        init(context);\n    }\n\n    private void init(Context context) {\n        setLayerType(LAYER_TYPE_SOFTWARE, null);\n        this.context = context;\n        colorWheelPaint = new Paint();\n        colorWheelPaint.setAntiAlias(true);\n\n        touchCirclePaint = new Paint();\n        touchCirclePaint.setStyle(Paint.Style.STROKE);\n        touchCirclePaint.setColor(Color.WHITE);\n        touchCirclePaint.setAntiAlias(true);\n    }\n\n    @Override\n    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {\n        super.onMeasure(widthMeasureSpec, heightMeasureSpec);\n\n        int widthSpecMode = MeasureSpec.getMode(widthMeasureSpec);\n        int heightSpecMode = MeasureSpec.getMode(heightMeasureSpec);\n\n        int widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);\n        int heightSpecSize = MeasureSpec.getSize(heightMeasureSpec);\n\n        //处理 wrap_content问题\n        int defaultDimension = dip2px(200);\n\n        if (widthSpecMode == MeasureSpec.AT_MOST && heightSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(defaultDimension, defaultDimension);\n        } else if (widthSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(defaultDimension, heightSpecSize);\n        } else if (heightSpecMode == MeasureSpec.AT_MOST) {\n            setMeasuredDimension(widthSpecSize, defaultDimension);\n        }\n    }\n    @Override\n    protected void onSizeChanged(int w, int h, int oldw, int oldh) {\n        super.onSizeChanged(w, h, oldw, oldh);\n        centerX = w / 2;\n        centerY = h / 2;\n        radius = Math.min(centerX, centerY);\n        createColorWheel();\n    }\n\n    @Override\n    protected void onDraw(Canvas canvas) {\n        super.onDraw(canvas);\n        canvas.drawCircle(centerX, centerY, radius, colorWheelPaint);\n        canvas.drawCircle(touchCircleX, touchCircleY, 10, touchCirclePaint);\n    }\n\n    /**\n     * create color wheel\n     */\n    private void createColorWheel() {\n        int colorCount = 30;\n        float colorAngleStep = 360 / 30.0f;\n        int colors[] = new int[colorCount];\n        float hsv[] = new float[]{0f, 1f, 1f};\n        for (int i = 0; i < colors.length; i++) {\n            hsv[0] = (i * colorAngleStep + 180) % 360;\n            colors[i] = Color.HSVToColor(hsv);\n        }\n        SweepGradient sweepGradient = new SweepGradient(centerX, centerY, colors, null);\n        RadialGradient radialGradient = new RadialGradient(centerX, centerY,\n                radius, 0xFFFFFFFF, 0x00FFFFFF, Shader.TileMode.CLAMP);\n        ComposeShader composeShader = new ComposeShader(sweepGradient, radialGradient, PorterDuff.Mode.SRC_OVER);\n        colorWheelPaint.setShader(composeShader);\n    }\n\n    @Override\n    public boolean onTouchEvent(MotionEvent event) {\n        ViewParent parent = getParent();\n        if (parent != null)\n            parent.requestDisallowInterceptTouchEvent(true);\n        switch (event.getAction()) {\n            case MotionEvent.ACTION_DOWN:\n            case MotionEvent.ACTION_MOVE:\n                int x = (int) event.getX();\n                int y = (int) event.getY();\n                int cx = x - centerX;\n                int cy = y - centerY;\n                double d = Math.sqrt(cx * cx + cy * cy);\n\n                if (d <= radius) {\n                    colorHSV[0] = (float) (Math.toDegrees(Math.atan2(cy, cx)) + 180f);\n                    colorHSV[1] = Math.max(0f, Math.min(1f, (float) (d / radius)));\n                    if (onSeekColorListener != null) {\n                        touchCircleY = y;\n                        touchCircleX = x;\n                        onSeekColorListener.onSeekColorListener(getColor());\n                        postInvalidate();\n                    }\n                }\n                break;\n            case MotionEvent.ACTION_UP:\n                break;\n        }\n        return true;\n    }\n\n    public void setOnSeekColorListener(OnSeekColorListener listener) {\n        this.onSeekColorListener = listener;\n    }\n\n    /**\n     * @param color 0~360\n     */\n    public void setHSVColor(int color) {\n        colorHSV[0] = color;\n        colorWheelPaint.setColor(Color.HSVToColor(colorHSV));\n        postInvalidate();\n    }\n    /**\n     * @param value 0~1.0\n     */\n    public void setHSVValue(float value) {\n        colorHSV[2] = value;\n        colorWheelPaint.setColor(Color.HSVToColor(colorHSV));\n        postInvalidate();\n    }\n\n    /**\n     * @param saturation 0~1.0\n     */\n    public void setHSVSaturation(float saturation) {\n        colorHSV[1] = saturation;\n        colorWheelPaint.setColor(Color.HSVToColor(colorHSV));\n        postInvalidate();\n    }\n\n    public void setColor(int color) {\n        Color.colorToHSV(color, colorHSV);\n    }\n\n    public int getColor() {\n        return Color.HSVToColor(colorHSV);\n    }\n\n\n    @Override\n    protected Parcelable onSaveInstanceState() {\n        Bundle state = new Bundle();\n        state.putFloatArray(\"color\", colorHSV);\n        state.putParcelable(\"super\", super.onSaveInstanceState());\n        return state;\n    }\n\n    @Override\n    protected void onRestoreInstanceState(Parcelable state) {\n        if (state instanceof Bundle) {\n            Bundle bundle = (Bundle) state;\n            colorHSV = bundle.getFloatArray(\"color\");\n            super.onRestoreInstanceState(bundle.getParcelable(\"super\"));\n        } else {\n            super.onRestoreInstanceState(state);\n        }\n    }\n\n    public int dip2px(float dpValue) {\n        final float scale = context.getResources().getDisplayMetrics().density;\n        return (int) (dpValue * scale + 0.5f);\n    }\n    public interface OnSeekColorListener {\n        void onSeekColorListener(int color);\n    }\n}\n```\n\n","slug":"自定义控件-自定义画板","published":1,"updated":"2018-06-26T16:15:23.254Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv54k002e58ugdfgr1vm7","content":"<p>买了个ipad pro，发现用proCreate画画挺有意思，于是决定用Andorid实现一个自定义View画板效果。</p>\n<a id=\"more\"></a>\n<h3 id=\"运行效果\"><a class=\"header-anchor\" href=\"#运行效果\">¶</a>运行效果</h3>\n<img height=\"400\" align=\"center\" src=\"http://osphuquui.bkt.clouddn.com/drawsomething.gif\">\n<h3 id=\"先贴代码-再分析\"><a class=\"header-anchor\" href=\"#先贴代码-再分析\">¶</a>先贴代码，再分析</h3>\n<h4 id=\"继承view-绘制画板\"><a class=\"header-anchor\" href=\"#继承view-绘制画板\">¶</a>继承View，绘制画板</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by lieeber on 2017/6/28.</span></span><br><span class=\"line\"><span class=\"comment\"> * 自定义画板，可以更换画笔颜色，粗细，实现了前进，后退，保存到本地等功能。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DrawSomethingView</span> <span class=\"keyword\">extends</span> <span class=\"title\">View</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Paint linePaint;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Paint paintPaint;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Path fillPath;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Paint eraserPaint;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span> downX;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span> downY;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Path linePath;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> DRAW_LINE = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> DRAW_FILL = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> DRAW_PAINT = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> DRAW_ERASER = <span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> drawStyle = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> lineColor = Color.BLACK;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> paintColor = Color.BLUE;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> lineWidth = <span class=\"number\">20</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span> paintWidthProgress = <span class=\"number\">50</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span> lineWidthProgress = <span class=\"number\">50</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> paintWidth = <span class=\"number\">70</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span> eraserWidthProgress = <span class=\"number\">50</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> eraserWidth = <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">float</span> <span class=\"title\">getEraserWidthProgress</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> eraserWidthProgress;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setEraserWidthProgress</span><span class=\"params\">(<span class=\"keyword\">float</span> eraserWidthProgress)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.eraserWidthProgress = eraserWidthProgress;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getEraserWidth</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> eraserWidth;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setEraserWidth</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        eraserPaint.setStrokeWidth(eraserWidth * eraserWidthProgress / <span class=\"number\">100</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">float</span> <span class=\"title\">getPaintWidthProgress</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> paintWidthProgress;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPaintWidthProgress</span><span class=\"params\">(<span class=\"keyword\">float</span> paintWidthProgress)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.paintWidthProgress = paintWidthProgress;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">float</span> <span class=\"title\">getLineWidthProgress</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> lineWidthProgress;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setLineWidthProgress</span><span class=\"params\">(<span class=\"keyword\">float</span> lineWidthProgress)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.lineWidthProgress = lineWidthProgress;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getLineColor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> lineColor;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setLineColor</span><span class=\"params\">(<span class=\"keyword\">int</span> lineColor)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.lineColor = lineColor;</span><br><span class=\"line\">        linePaint.setColor(lineColor);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getPaintColor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> paintColor;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPaintColor</span><span class=\"params\">(<span class=\"keyword\">int</span> paintColor)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.paintColor = paintColor;</span><br><span class=\"line\">        paintPaint.setColor(paintColor);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getLineWidth</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> lineWidth;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setLineWidth</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        linePaint.setStrokeWidth(lineWidth * lineWidthProgress / <span class=\"number\">100</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getPaintWidth</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> paintWidth;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPaintWidth</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        paintPaint.setStrokeWidth(paintWidth * paintWidthProgress / <span class=\"number\">100</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ArrayList&lt;PathBean&gt; pathlist = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ArrayList&lt;PathBean&gt; deletePathList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Canvas mCanvas;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Bitmap mBitmap;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> viewWidth;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> viewHeight;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DrawSomethingView</span><span class=\"params\">(Context context, @Nullable AttributeSet attrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs);</span><br><span class=\"line\">        linePaint = <span class=\"keyword\">new</span> Paint(Paint.ANTI_ALIAS_FLAG | Paint.DITHER_FLAG);</span><br><span class=\"line\">        linePaint.setStyle(Style.STROKE);</span><br><span class=\"line\">        linePaint.setColor(lineColor);</span><br><span class=\"line\">        linePaint.setStrokeWidth(lineWidth * lineWidthProgress / <span class=\"number\">100</span>);</span><br><span class=\"line\">        linePaint.setPathEffect(<span class=\"keyword\">new</span> CornerPathEffect(<span class=\"number\">100f</span>));</span><br><span class=\"line\">        linePaint.setStrokeCap(Cap.ROUND);</span><br><span class=\"line\">        linePaint.setStrokeJoin(Join.ROUND);</span><br><span class=\"line\"></span><br><span class=\"line\">        paintPaint = <span class=\"keyword\">new</span> Paint();</span><br><span class=\"line\">        paintPaint.setStyle(Style.STROKE);</span><br><span class=\"line\">        paintPaint.setColor(paintColor);</span><br><span class=\"line\">        paintPaint.setStrokeWidth(paintWidth * paintWidthProgress / <span class=\"number\">100</span>);</span><br><span class=\"line\">        paintPaint.setStrokeCap(Cap.ROUND);</span><br><span class=\"line\">        paintPaint.setPathEffect(<span class=\"keyword\">new</span> CornerPathEffect(<span class=\"number\">100f</span>));</span><br><span class=\"line\">        paintPaint.setStrokeJoin(Join.ROUND);</span><br><span class=\"line\"></span><br><span class=\"line\">        eraserPaint = <span class=\"keyword\">new</span> Paint();</span><br><span class=\"line\">        eraserPaint.setStyle(Style.STROKE);</span><br><span class=\"line\">        eraserPaint.setAlpha(<span class=\"number\">0</span>);</span><br><span class=\"line\">        eraserPaint.setXfermode(<span class=\"keyword\">new</span> PorterDuffXfermode(Mode.CLEAR));</span><br><span class=\"line\">        eraserPaint.setColor(Color.TRANSPARENT);</span><br><span class=\"line\">        eraserPaint.setStrokeWidth(eraserWidth * eraserWidthProgress / <span class=\"number\">100</span>);</span><br><span class=\"line\">        eraserPaint.setStrokeCap(Cap.ROUND);</span><br><span class=\"line\">        eraserPaint.setPathEffect(<span class=\"keyword\">new</span> CornerPathEffect(<span class=\"number\">100f</span>));</span><br><span class=\"line\">        eraserPaint.setStrokeJoin(Join.ROUND);</span><br><span class=\"line\"></span><br><span class=\"line\">        linePath = <span class=\"keyword\">new</span> Path();</span><br><span class=\"line\">        fillPath = <span class=\"keyword\">new</span> Path();</span><br><span class=\"line\"></span><br><span class=\"line\">        mCanvas = <span class=\"keyword\">new</span> Canvas();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onSizeChanged</span><span class=\"params\">(<span class=\"keyword\">int</span> w, <span class=\"keyword\">int</span> h, <span class=\"keyword\">int</span> oldw, <span class=\"keyword\">int</span> oldh)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class=\"line\">        viewWidth = w;</span><br><span class=\"line\">        viewHeight = h;</span><br><span class=\"line\">        blankBitmap();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouchEvent</span><span class=\"params\">(MotionEvent event)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (event.getAction()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> MotionEvent.ACTION_DOWN:</span><br><span class=\"line\">                downX = event.getX();</span><br><span class=\"line\">                downY = event.getY();</span><br><span class=\"line\">                linePath = <span class=\"keyword\">new</span> Path();</span><br><span class=\"line\">                linePath.moveTo(downX, downY);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> MotionEvent.ACTION_MOVE:</span><br><span class=\"line\">                downX = event.getX();</span><br><span class=\"line\">                downY = event.getY();</span><br><span class=\"line\">                <span class=\"keyword\">switch</span> (drawStyle) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> DRAW_LINE:</span><br><span class=\"line\">                        linePath.lineTo(downX, downY);</span><br><span class=\"line\">                        mCanvas.drawPath(linePath, linePaint);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> DRAW_PAINT:</span><br><span class=\"line\">                        linePath.lineTo(downX, downY);</span><br><span class=\"line\">                        mCanvas.drawPath(linePath, paintPaint);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> DRAW_ERASER:</span><br><span class=\"line\">                        linePath.lineTo(downX, downY);</span><br><span class=\"line\">                        mCanvas.drawPath(linePath, eraserPaint);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                invalidate();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> MotionEvent.ACTION_UP:</span><br><span class=\"line\">                <span class=\"keyword\">switch</span> (drawStyle) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> DRAW_LINE:</span><br><span class=\"line\">                        pathlist.add(<span class=\"keyword\">new</span> PathBean(linePath, linePaint, lineWidthProgress * lineWidth / <span class=\"number\">100</span>, lineColor));</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> DRAW_PAINT:</span><br><span class=\"line\">                        pathlist.add(<span class=\"keyword\">new</span> PathBean(linePath, paintPaint, paintWidthProgress * paintWidth / <span class=\"number\">100</span>, paintColor));</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> DRAW_ERASER:</span><br><span class=\"line\">                        pathlist.add(<span class=\"keyword\">new</span> PathBean(linePath, eraserPaint, eraserWidthProgress * eraserWidth / <span class=\"number\">100</span>, Color.TRANSPARENT));</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                deletePathList.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDraw</span><span class=\"params\">(Canvas canvas)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onDraw(canvas);</span><br><span class=\"line\">        canvas.drawBitmap(mBitmap, <span class=\"keyword\">new</span> Matrix(), <span class=\"keyword\">null</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">blankBitmap</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        mBitmap = Bitmap.createBitmap(viewWidth, viewHeight, Config.ARGB_8888);</span><br><span class=\"line\">        mCanvas.setBitmap(mBitmap);</span><br><span class=\"line\"><span class=\"comment\">//        mCanvas.drawColor(Color.WHITE);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        pathlist.clear();</span><br><span class=\"line\">        deletePathList.clear();</span><br><span class=\"line\">        blankBitmap();</span><br><span class=\"line\">        invalidate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">reset</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        blankBitmap();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (pathlist.size() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            PathBean pathBean = pathlist.get(pathlist.size() - <span class=\"number\">1</span>);</span><br><span class=\"line\">            pathlist.remove(pathBean);</span><br><span class=\"line\">            deletePathList.add(pathBean);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; pathlist.size(); i++) &#123;</span><br><span class=\"line\">            pathlist.get(i).paint.setStrokeWidth(pathlist.get(i).width);</span><br><span class=\"line\">            pathlist.get(i).paint.setColor(pathlist.get(i).color);</span><br><span class=\"line\">            mCanvas.drawPath(pathlist.get(i).path, pathlist.get(i).paint);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        invalidate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">forward</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (deletePathList.size() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            PathBean pathBean = deletePathList.get(deletePathList.size() - <span class=\"number\">1</span>);</span><br><span class=\"line\">            pathBean.paint.setStrokeWidth(pathBean.width);</span><br><span class=\"line\">            pathBean.paint.setColor(pathBean.color);</span><br><span class=\"line\">            mCanvas.drawPath(pathBean.path, pathBean.paint);</span><br><span class=\"line\">            deletePathList.remove(deletePathList.size() - <span class=\"number\">1</span>);</span><br><span class=\"line\">            pathlist.add(pathBean);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        invalidate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setDrawLine</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        drawStyle = DRAW_LINE;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setDrawPaint</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        drawStyle = DRAW_PAINT;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setEraser</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        drawStyle = DRAW_ERASER;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getlineColor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> lineColor;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ContextCompat.checkSelfPermission(getContext(),</span><br><span class=\"line\">                Manifest.permission.WRITE_EXTERNAL_STORAGE)</span><br><span class=\"line\">                == PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//拥有读写文件权限</span></span><br><span class=\"line\">            Log.i(TAG,<span class=\"string\">\"拥有读写文件权限\"</span>);</span><br><span class=\"line\">            <span class=\"comment\">//获得系统当前时间，并以该时间作为文件名</span></span><br><span class=\"line\">            SimpleDateFormat formatter = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyyMMddHHmmss\"</span>);</span><br><span class=\"line\">            Date curDate = <span class=\"keyword\">new</span> Date(System.currentTimeMillis());<span class=\"comment\">//获取当前时间</span></span><br><span class=\"line\">            String dir = Environment.getExternalStorageDirectory().getAbsolutePath();</span><br><span class=\"line\">            String str = formatter.format(curDate) + <span class=\"string\">\"paint.png\"</span>;</span><br><span class=\"line\">            File file = <span class=\"keyword\">new</span> File(dir + <span class=\"string\">\"/\"</span>+str);</span><br><span class=\"line\">            FileOutputStream fos = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                fos = <span class=\"keyword\">new</span> FileOutputStream(file);</span><br><span class=\"line\">                Toast.makeText(getContext(), <span class=\"string\">\"保存成功\"</span>, Toast.LENGTH_LONG).show();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            mBitmap.compress(CompressFormat.PNG, <span class=\"number\">100</span>, fos);</span><br><span class=\"line\">            getContext().sendBroadcast(<span class=\"keyword\">new</span> Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(<span class=\"string\">\"file://\"</span> + Environment.getExternalStorageDirectory())));</span><br><span class=\"line\">            Toast.makeText(getContext(), <span class=\"string\">\"保存成功\"</span>, Toast.LENGTH_LONG).show();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            Log.i(TAG,<span class=\"string\">\"没有读写权限\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            Toast.makeText(getContext(), <span class=\"string\">\"没有读写权限\"</span>, Toast.LENGTH_LONG).show();</span><br><span class=\"line\">            <span class=\"comment\">//没有读写权限</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ActivityCompat.shouldShowRequestPermissionRationale((Activity) getContext(),</span><br><span class=\"line\">                    Manifest.permission.WRITE_EXTERNAL_STORAGE))&#123;</span><br><span class=\"line\">                ActivityCompat.requestPermissions((Activity) getContext(),</span><br><span class=\"line\">                        <span class=\"keyword\">new</span> String[]&#123;Manifest.permission.WRITE_EXTERNAL_STORAGE&#125;,</span><br><span class=\"line\">                        <span class=\"number\">140</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//                showPermissionDialog();</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"在activity中添加逻辑操作\"><a class=\"header-anchor\" href=\"#在activity中添加逻辑操作\">¶</a>在Activity中添加逻辑操作</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> DrawSomethingView myView;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\">        myView = (DrawSomethingView) findViewById(R.id.myView);</span><br><span class=\"line\"></span><br><span class=\"line\">        findViewById(R.id.tvLine).setOnLongClickListener(<span class=\"keyword\">new</span> OnLongClickListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onLongClick</span><span class=\"params\">(View v)</span> </span>&#123;</span><br><span class=\"line\">                SheetUtil sheetUtil = SheetUtil.getInstance();</span><br><span class=\"line\">                <span class=\"keyword\">int</span> color = myView.getlineColor();</span><br><span class=\"line\">                <span class=\"keyword\">float</span> progress = myView.getLineWidthProgress();</span><br><span class=\"line\">                sheetUtil.addSheet(MainActivity.<span class=\"keyword\">this</span>, color, progress);</span><br><span class=\"line\">                sheetUtil.showSheet();</span><br><span class=\"line\">                sheetUtil.setSeekBarChangeListener(<span class=\"keyword\">new</span> SeekBarChangeListener() &#123;</span><br><span class=\"line\">                    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onProgress</span><span class=\"params\">(<span class=\"keyword\">float</span> progress)</span> </span>&#123;</span><br><span class=\"line\">                        myView.setLineWidthProgress(progress);</span><br><span class=\"line\">                        myView.setLineWidth();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onColorChange</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span> </span>&#123;</span><br><span class=\"line\">                        myView.setLineColor(color);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        findViewById(R.id.tvPaint).setOnLongClickListener(<span class=\"keyword\">new</span> OnLongClickListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onLongClick</span><span class=\"params\">(View v)</span> </span>&#123;</span><br><span class=\"line\">                SheetUtil sheetUtil = SheetUtil.getInstance();</span><br><span class=\"line\">                <span class=\"keyword\">int</span> color = myView.getPaintColor();</span><br><span class=\"line\">                <span class=\"keyword\">float</span> progress = myView.getPaintWidthProgress();</span><br><span class=\"line\">                sheetUtil.addSheet(MainActivity.<span class=\"keyword\">this</span>, color, progress);</span><br><span class=\"line\">                sheetUtil.showSheet();</span><br><span class=\"line\">                sheetUtil.setSeekBarChangeListener(<span class=\"keyword\">new</span> SeekBarChangeListener() &#123;</span><br><span class=\"line\">                    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onProgress</span><span class=\"params\">(<span class=\"keyword\">float</span> progress)</span> </span>&#123;</span><br><span class=\"line\">                        myView.setPaintWidthProgress(progress);</span><br><span class=\"line\">                        myView.setPaintWidth();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onColorChange</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span> </span>&#123;</span><br><span class=\"line\">                        myView.setPaintColor(color);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        findViewById(R.id.tvEraser).setOnLongClickListener(<span class=\"keyword\">new</span> OnLongClickListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onLongClick</span><span class=\"params\">(View v)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">float</span> progress = myView.getEraserWidthProgress();</span><br><span class=\"line\">                SheetUtil sheetUtil = SheetUtil.getInstance();</span><br><span class=\"line\">                sheetUtil.addSheet(MainActivity.<span class=\"keyword\">this</span>,-<span class=\"number\">1</span>, progress);</span><br><span class=\"line\">                sheetUtil.showSheet();</span><br><span class=\"line\">                sheetUtil.setSeekBarChangeListener(<span class=\"keyword\">new</span> SeekBarChangeListener() &#123;</span><br><span class=\"line\">                    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onProgress</span><span class=\"params\">(<span class=\"keyword\">float</span> progress)</span> </span>&#123;</span><br><span class=\"line\">                        myView.setEraserWidthProgress(progress);</span><br><span class=\"line\">                        myView.setEraserWidth();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onColorChange</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span> </span>&#123;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        findViewById(R.id.tvLine).setSelected(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        myView.clear();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">reset</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        myView.reset();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">forward</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        myView.forward();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawLine</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        clearSelect();</span><br><span class=\"line\">        findViewById(R.id.tvLine).setSelected(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        myView.setDrawLine();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawPaint</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        clearSelect();</span><br><span class=\"line\">        findViewById(R.id.tvPaint).setSelected(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        myView.setDrawPaint();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">eraser</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        clearSelect();</span><br><span class=\"line\">        findViewById(R.id.tvEraser).setSelected(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        myView.setEraser();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title\">clearSelect</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        findViewById(R.id.tvEraser).setSelected(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">        findViewById(R.id.tvLine).setSelected(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">        findViewById(R.id.tvPaint).setSelected(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        myView.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"activity对应布局文件\"><a class=\"header-anchor\" href=\"#activity对应布局文件\">¶</a>Activity对应布局文件</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">activity_main.xml</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;ImageView--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--android:layout_width=\"match_parent\"--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--android:src=\"@drawable/timg\"--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--android:scaleType=\"fitXY\"--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--android:layout_height=\"match_parent\"/&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/ll\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_alignParentLeft</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_alignParentStart</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_alignParentTop</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"horizontal\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tvClear\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/tv_bg\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:clickable</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:onClick</span>=<span class=\"string\">\"clear\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingLeft</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingRight</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"清除\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tvReset\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/tv_bg_2\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:clickable</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:onClick</span>=<span class=\"string\">\"reset\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingLeft</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingRight</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"撤销\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/tv_bg_3\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:clickable</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:onClick</span>=<span class=\"string\">\"forward\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingLeft</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingRight</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"前进\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tvLine\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/tv_bg_4\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:clickable</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:onClick</span>=<span class=\"string\">\"drawLine\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingLeft</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingRight</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"线条\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tvPaint\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/tv_bg_4\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:clickable</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:onClick</span>=<span class=\"string\">\"drawPaint\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingLeft</span>=<span class=\"string\">\"5dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingRight</span>=<span class=\"string\">\"5dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"画笔\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tvEraser\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/tv_bg_4\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:clickable</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:onClick</span>=<span class=\"string\">\"eraser\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingLeft</span>=<span class=\"string\">\"5dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingRight</span>=<span class=\"string\">\"5dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"橡皮擦\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tvSave\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/tv_bg_2\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:clickable</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:onClick</span>=<span class=\"string\">\"save\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingLeft</span>=<span class=\"string\">\"5dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingRight</span>=<span class=\"string\">\"5dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"保存\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">studentsdemo.lieeber.com.lbview.views.DrawSomethingView</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/myView\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\"></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_below</span>=<span class=\"string\">\"@+id/ll\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"相关资源文件\"><a class=\"header-anchor\" href=\"#相关资源文件\">¶</a>相关资源文件</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tv_bg.xml</span><br><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selector</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@color/colorPrimary\"</span> <span class=\"attr\">android:state_pressed</span>=<span class=\"string\">\"true\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@color/colorAccent\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">selector</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">tv_bg2.xml</span><br><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selector</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@color/colorPrimary\"</span> <span class=\"attr\">android:state_pressed</span>=<span class=\"string\">\"true\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@color/color1\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">selector</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">tv_bg3.xml</span><br><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selector</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@color/colorPrimary\"</span> <span class=\"attr\">android:state_pressed</span>=<span class=\"string\">\"true\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@color/color2\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">selector</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">tv_bg4.xml</span><br><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selector</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span>  <span class=\"attr\">android:state_selected</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">corners</span> <span class=\"attr\">android:radius</span>=<span class=\"string\">\"3dp\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">stroke</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@color/colorAccent\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">stroke</span> <span class=\"attr\">android:width</span>=<span class=\"string\">\"1dp\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">corners</span> <span class=\"attr\">android:radius</span>=<span class=\"string\">\"6dp\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">stroke</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"#ffffffff\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">stroke</span> <span class=\"attr\">android:width</span>=<span class=\"string\">\"3dp\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">selector</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"自定义弹框\"><a class=\"header-anchor\" href=\"#自定义弹框\">¶</a>自定义弹框</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SheetUtil</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ViewGroup contentView;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> View sheetContent;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> SheetUtil sheetUtil = <span class=\"keyword\">new</span> SheetUtil();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Activity activity;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> View llSheet;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> View viewSheetBg;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ColorPickerView colorPickerView;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> View colorView;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> SeekBar seekBar;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> TextView tvProgress;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SheetUtil <span class=\"title\">getInstance</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sheetUtil;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addSheet</span><span class=\"params\">(Activity activity, <span class=\"keyword\">int</span> originColor, <span class=\"keyword\">float</span> originProgress)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.activity = activity;</span><br><span class=\"line\">        contentView = (ViewGroup) activity.findViewById(android.R.id.content);</span><br><span class=\"line\">        sheetContent = LayoutInflater.from(activity).inflate(R.layout.setting_dialog, contentView, <span class=\"keyword\">false</span>);</span><br><span class=\"line\">        sheetContent.setVisibility(View.GONE);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (contentView.findViewById(R.id.view_sheet_bg) == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            contentView.addView(sheetContent);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        viewSheetBg = sheetContent.findViewById(R.id.view_sheet_bg);</span><br><span class=\"line\">        llSheet = sheetContent.findViewById(R.id.ll_sheet);</span><br><span class=\"line\">        colorPickerView = (ColorPickerView) sheetContent.findViewById(R.id.color_picker);</span><br><span class=\"line\">        colorView = sheetContent.findViewById(R.id.colorView);</span><br><span class=\"line\">        seekBar = (SeekBar) sheetContent.findViewById(R.id.seek_bar);</span><br><span class=\"line\">        tvProgress = (TextView) sheetContent.findViewById(R.id.tv_progress);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (originColor == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            sheetContent.findViewById(R.id.rl_color_picker).setVisibility(View.GONE);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        seekBar.setProgress((<span class=\"keyword\">int</span>) originProgress);</span><br><span class=\"line\">        tvProgress.setText((<span class=\"keyword\">int</span>) originProgress + <span class=\"string\">\"%\"</span>);</span><br><span class=\"line\">        colorView.setBackgroundColor(originColor);</span><br><span class=\"line\">        colorPickerView.setOnSeekColorListener(<span class=\"keyword\">new</span> OnSeekColorListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onSeekColorListener</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span> </span>&#123;</span><br><span class=\"line\">                colorView.setBackgroundColor(color);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (seekBarChangeListener != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    seekBarChangeListener.onColorChange(color);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        viewSheetBg.setOnClickListener(<span class=\"keyword\">new</span> OnClickListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</span><br><span class=\"line\">                disMissSheet();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        seekBar.setOnSeekBarChangeListener(<span class=\"keyword\">new</span> OnSeekBarChangeListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onProgressChanged</span><span class=\"params\">(SeekBar seekBar, <span class=\"keyword\">int</span> progress, <span class=\"keyword\">boolean</span> fromUser)</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(progress);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (seekBarChangeListener != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    seekBarChangeListener.onProgress(progress);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                tvProgress.setText(progress + <span class=\"string\">\"%\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onStartTrackingTouch</span><span class=\"params\">(SeekBar seekBar)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onStopTrackingTouch</span><span class=\"params\">(SeekBar seekBar)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">showSheet</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        sheetContent.setVisibility(View.VISIBLE);</span><br><span class=\"line\">        sheetContent.bringToFront();</span><br><span class=\"line\"></span><br><span class=\"line\">        llSheet.setTranslationY(activity.getResources().getDisplayMetrics().heightPixels);</span><br><span class=\"line\">        ValueAnimator alphaAnimator = ValueAnimator.ofFloat(<span class=\"number\">0</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        alphaAnimator.setInterpolator(<span class=\"keyword\">new</span> DecelerateInterpolator());</span><br><span class=\"line\">        alphaAnimator.setDuration(<span class=\"number\">300</span>);</span><br><span class=\"line\">        alphaAnimator.addUpdateListener(<span class=\"keyword\">new</span> AnimatorUpdateListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onAnimationUpdate</span><span class=\"params\">(ValueAnimator animation)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">float</span> alpha = (<span class=\"keyword\">float</span>) animation.getAnimatedValue();</span><br><span class=\"line\">                viewSheetBg.setAlpha(alpha);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        alphaAnimator.start();</span><br><span class=\"line\">        ValueAnimator translationAniamtor = ValueAnimator.ofFloat(activity.getResources().getDisplayMetrics().heightPixels, <span class=\"number\">0</span>);</span><br><span class=\"line\">        translationAniamtor.setInterpolator(<span class=\"keyword\">new</span> DecelerateInterpolator());</span><br><span class=\"line\">        translationAniamtor.setDuration(<span class=\"number\">300</span>);</span><br><span class=\"line\">        translationAniamtor.addUpdateListener(<span class=\"keyword\">new</span> AnimatorUpdateListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onAnimationUpdate</span><span class=\"params\">(ValueAnimator animation)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">float</span> translationY = (<span class=\"keyword\">float</span>) animation.getAnimatedValue();</span><br><span class=\"line\">                llSheet.setTranslationY(translationY);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        translationAniamtor.start();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">disMissSheet</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (viewSheetBg != <span class=\"keyword\">null</span> &amp;&amp; llSheet != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            disMissSheet(viewSheetBg, llSheet);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">disMissSheet</span><span class=\"params\">(<span class=\"keyword\">final</span> View viewSheetBg, <span class=\"keyword\">final</span> View llSheet)</span> </span>&#123;</span><br><span class=\"line\">        ValueAnimator alphaAnimator = ValueAnimator.ofFloat(<span class=\"number\">1</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">        alphaAnimator.setInterpolator(<span class=\"keyword\">new</span> DecelerateInterpolator());</span><br><span class=\"line\">        alphaAnimator.setDuration(<span class=\"number\">300</span>);</span><br><span class=\"line\">        alphaAnimator.addUpdateListener(<span class=\"keyword\">new</span> AnimatorUpdateListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onAnimationUpdate</span><span class=\"params\">(ValueAnimator animation)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">float</span> alpha = (<span class=\"keyword\">float</span>) animation.getAnimatedValue();</span><br><span class=\"line\">                viewSheetBg.setAlpha(alpha);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        alphaAnimator.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        ValueAnimator translationAniamtor = ValueAnimator.ofFloat(<span class=\"number\">0</span>, activity.getResources().getDisplayMetrics().heightPixels);</span><br><span class=\"line\">        translationAniamtor.setInterpolator(<span class=\"keyword\">new</span> DecelerateInterpolator());</span><br><span class=\"line\">        translationAniamtor.setDuration(<span class=\"number\">300</span>);</span><br><span class=\"line\">        translationAniamtor.addUpdateListener(<span class=\"keyword\">new</span> AnimatorUpdateListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onAnimationUpdate</span><span class=\"params\">(ValueAnimator animation)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">float</span> translationY = (<span class=\"keyword\">float</span>) animation.getAnimatedValue();</span><br><span class=\"line\">                llSheet.setTranslationY(translationY);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        translationAniamtor.start();</span><br><span class=\"line\">        translationAniamtor.addListener(<span class=\"keyword\">new</span> AnimatorListenerAdapter() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onAnimationEnd</span><span class=\"params\">(Animator animation)</span> </span>&#123;</span><br><span class=\"line\">                contentView.removeView(sheetContent);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isShowingSheet</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (contentView == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (contentView.findViewById(R.id.view_sheet_bg) == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">SeekBarChangeListener</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onProgress</span><span class=\"params\">(<span class=\"keyword\">float</span> progress)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onColorChange</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span></span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> SeekBarChangeListener seekBarChangeListener;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setSeekBarChangeListener</span><span class=\"params\">(SeekBarChangeListener seekBarChangeListener)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.seekBarChangeListener = seekBarChangeListener;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"自定义弹框对应布局\"><a class=\"header-anchor\" href=\"#自定义弹框对应布局\">¶</a>自定义弹框对应布局</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setting_dialog.xml</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">FrameLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">View</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/view_sheet_bg\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:background</span>=<span class=\"string\">\"#88000000\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/ll_sheet\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"300dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:background</span>=<span class=\"string\">\"#ffffff\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:clickable</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:padding</span>=<span class=\"string\">\"20dp\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"粗细\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">SeekBar</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/seek_bar\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_marginTop</span>=<span class=\"string\">\"10dp\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tv_progress\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_marginTop</span>=<span class=\"string\">\"5dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"50%\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/rl_color_picker\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_marginTop</span>=<span class=\"string\">\"20dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">studentsdemo.lieeber.com.lbview.views.ColorPickerView</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/color_picker\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"150dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"150dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_alignParentLeft</span>=<span class=\"string\">\"true\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">View</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/colorView\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"20dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"20dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_centerVertical</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_marginLeft</span>=<span class=\"string\">\"40dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_toRightOf</span>=<span class=\"string\">\"@+id/color_picker\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"#ff0000\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"自定义画笔颜色更改器\"><a class=\"header-anchor\" href=\"#自定义画笔颜色更改器\">¶</a>自定义画笔颜色更改器</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by lieeber on 2017/6/28.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ColorPickerView</span> <span class=\"keyword\">extends</span> <span class=\"title\">View</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Context context;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Currently selected color</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>[] colorHSV = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[]&#123;<span class=\"number\">0f</span>, <span class=\"number\">1f</span>, <span class=\"number\">1f</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Paint colorWheelPaint;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Paint touchCirclePaint;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> radius;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> centerX;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> centerY;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> touchCircleX;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> touchCircleY;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> OnSeekColorListener onSeekColorListener;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ColorPickerView</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>(context, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ColorPickerView</span><span class=\"params\">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>(context, attrs, <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ColorPickerView</span><span class=\"params\">(Context context, AttributeSet attrs, <span class=\"keyword\">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs, defStyleAttr);</span><br><span class=\"line\">        init(context);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        setLayerType(LAYER_TYPE_SOFTWARE, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.context = context;</span><br><span class=\"line\">        colorWheelPaint = <span class=\"keyword\">new</span> Paint();</span><br><span class=\"line\">        colorWheelPaint.setAntiAlias(<span class=\"keyword\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        touchCirclePaint = <span class=\"keyword\">new</span> Paint();</span><br><span class=\"line\">        touchCirclePaint.setStyle(Paint.Style.STROKE);</span><br><span class=\"line\">        touchCirclePaint.setColor(Color.WHITE);</span><br><span class=\"line\">        touchCirclePaint.setAntiAlias(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onMeasure</span><span class=\"params\">(<span class=\"keyword\">int</span> widthMeasureSpec, <span class=\"keyword\">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> widthSpecMode = MeasureSpec.getMode(widthMeasureSpec);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> heightSpecMode = MeasureSpec.getMode(heightMeasureSpec);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> heightSpecSize = MeasureSpec.getSize(heightMeasureSpec);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//处理 wrap_content问题</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> defaultDimension = dip2px(<span class=\"number\">200</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (widthSpecMode == MeasureSpec.AT_MOST &amp;&amp; heightSpecMode == MeasureSpec.AT_MOST) &#123;</span><br><span class=\"line\">            setMeasuredDimension(defaultDimension, defaultDimension);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (widthSpecMode == MeasureSpec.AT_MOST) &#123;</span><br><span class=\"line\">            setMeasuredDimension(defaultDimension, heightSpecSize);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (heightSpecMode == MeasureSpec.AT_MOST) &#123;</span><br><span class=\"line\">            setMeasuredDimension(widthSpecSize, defaultDimension);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onSizeChanged</span><span class=\"params\">(<span class=\"keyword\">int</span> w, <span class=\"keyword\">int</span> h, <span class=\"keyword\">int</span> oldw, <span class=\"keyword\">int</span> oldh)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class=\"line\">        centerX = w / <span class=\"number\">2</span>;</span><br><span class=\"line\">        centerY = h / <span class=\"number\">2</span>;</span><br><span class=\"line\">        radius = Math.min(centerX, centerY);</span><br><span class=\"line\">        createColorWheel();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDraw</span><span class=\"params\">(Canvas canvas)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onDraw(canvas);</span><br><span class=\"line\">        canvas.drawCircle(centerX, centerY, radius, colorWheelPaint);</span><br><span class=\"line\">        canvas.drawCircle(touchCircleX, touchCircleY, <span class=\"number\">10</span>, touchCirclePaint);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * create color wheel</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">createColorWheel</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> colorCount = <span class=\"number\">30</span>;</span><br><span class=\"line\">        <span class=\"keyword\">float</span> colorAngleStep = <span class=\"number\">360</span> / <span class=\"number\">30.0f</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> colors[] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[colorCount];</span><br><span class=\"line\">        <span class=\"keyword\">float</span> hsv[] = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[]&#123;<span class=\"number\">0f</span>, <span class=\"number\">1f</span>, <span class=\"number\">1f</span>&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; colors.length; i++) &#123;</span><br><span class=\"line\">            hsv[<span class=\"number\">0</span>] = (i * colorAngleStep + <span class=\"number\">180</span>) % <span class=\"number\">360</span>;</span><br><span class=\"line\">            colors[i] = Color.HSVToColor(hsv);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        SweepGradient sweepGradient = <span class=\"keyword\">new</span> SweepGradient(centerX, centerY, colors, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">        RadialGradient radialGradient = <span class=\"keyword\">new</span> RadialGradient(centerX, centerY,</span><br><span class=\"line\">                radius, <span class=\"number\">0xFFFFFFFF</span>, <span class=\"number\">0x00FFFFFF</span>, Shader.TileMode.CLAMP);</span><br><span class=\"line\">        ComposeShader composeShader = <span class=\"keyword\">new</span> ComposeShader(sweepGradient, radialGradient, PorterDuff.Mode.SRC_OVER);</span><br><span class=\"line\">        colorWheelPaint.setShader(composeShader);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouchEvent</span><span class=\"params\">(MotionEvent event)</span> </span>&#123;</span><br><span class=\"line\">        ViewParent parent = getParent();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (parent != <span class=\"keyword\">null</span>)</span><br><span class=\"line\">            parent.requestDisallowInterceptTouchEvent(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (event.getAction()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> MotionEvent.ACTION_DOWN:</span><br><span class=\"line\">            <span class=\"keyword\">case</span> MotionEvent.ACTION_MOVE:</span><br><span class=\"line\">                <span class=\"keyword\">int</span> x = (<span class=\"keyword\">int</span>) event.getX();</span><br><span class=\"line\">                <span class=\"keyword\">int</span> y = (<span class=\"keyword\">int</span>) event.getY();</span><br><span class=\"line\">                <span class=\"keyword\">int</span> cx = x - centerX;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> cy = y - centerY;</span><br><span class=\"line\">                <span class=\"keyword\">double</span> d = Math.sqrt(cx * cx + cy * cy);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (d &lt;= radius) &#123;</span><br><span class=\"line\">                    colorHSV[<span class=\"number\">0</span>] = (<span class=\"keyword\">float</span>) (Math.toDegrees(Math.atan2(cy, cx)) + <span class=\"number\">180f</span>);</span><br><span class=\"line\">                    colorHSV[<span class=\"number\">1</span>] = Math.max(<span class=\"number\">0f</span>, Math.min(<span class=\"number\">1f</span>, (<span class=\"keyword\">float</span>) (d / radius)));</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (onSeekColorListener != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        touchCircleY = y;</span><br><span class=\"line\">                        touchCircleX = x;</span><br><span class=\"line\">                        onSeekColorListener.onSeekColorListener(getColor());</span><br><span class=\"line\">                        postInvalidate();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> MotionEvent.ACTION_UP:</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOnSeekColorListener</span><span class=\"params\">(OnSeekColorListener listener)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.onSeekColorListener = listener;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> color 0~360</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setHSVColor</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span> </span>&#123;</span><br><span class=\"line\">        colorHSV[<span class=\"number\">0</span>] = color;</span><br><span class=\"line\">        colorWheelPaint.setColor(Color.HSVToColor(colorHSV));</span><br><span class=\"line\">        postInvalidate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 0~1.0</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setHSVValue</span><span class=\"params\">(<span class=\"keyword\">float</span> value)</span> </span>&#123;</span><br><span class=\"line\">        colorHSV[<span class=\"number\">2</span>] = value;</span><br><span class=\"line\">        colorWheelPaint.setColor(Color.HSVToColor(colorHSV));</span><br><span class=\"line\">        postInvalidate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> saturation 0~1.0</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setHSVSaturation</span><span class=\"params\">(<span class=\"keyword\">float</span> saturation)</span> </span>&#123;</span><br><span class=\"line\">        colorHSV[<span class=\"number\">1</span>] = saturation;</span><br><span class=\"line\">        colorWheelPaint.setColor(Color.HSVToColor(colorHSV));</span><br><span class=\"line\">        postInvalidate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setColor</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span> </span>&#123;</span><br><span class=\"line\">        Color.colorToHSV(color, colorHSV);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getColor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Color.HSVToColor(colorHSV);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> Parcelable <span class=\"title\">onSaveInstanceState</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        Bundle state = <span class=\"keyword\">new</span> Bundle();</span><br><span class=\"line\">        state.putFloatArray(<span class=\"string\">\"color\"</span>, colorHSV);</span><br><span class=\"line\">        state.putParcelable(<span class=\"string\">\"super\"</span>, <span class=\"keyword\">super</span>.onSaveInstanceState());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> state;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onRestoreInstanceState</span><span class=\"params\">(Parcelable state)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (state <span class=\"keyword\">instanceof</span> Bundle) &#123;</span><br><span class=\"line\">            Bundle bundle = (Bundle) state;</span><br><span class=\"line\">            colorHSV = bundle.getFloatArray(<span class=\"string\">\"color\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">super</span>.onRestoreInstanceState(bundle.getParcelable(<span class=\"string\">\"super\"</span>));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>.onRestoreInstanceState(state);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">dip2px</span><span class=\"params\">(<span class=\"keyword\">float</span> dpValue)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">final</span> <span class=\"keyword\">float</span> scale = context.getResources().getDisplayMetrics().density;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>) (dpValue * scale + <span class=\"number\">0.5f</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">OnSeekColorListener</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onSeekColorListener</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span></span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<p>买了个ipad pro，发现用proCreate画画挺有意思，于是决定用Andorid实现一个自定义View画板效果。</p>","more":"<h3 id=\"运行效果\"><a class=\"header-anchor\" href=\"#运行效果\">¶</a>运行效果</h3>\n<img height=\"400\" align=\"center\" src=\"http://osphuquui.bkt.clouddn.com/drawsomething.gif\">\n<h3 id=\"先贴代码-再分析\"><a class=\"header-anchor\" href=\"#先贴代码-再分析\">¶</a>先贴代码，再分析</h3>\n<h4 id=\"继承view-绘制画板\"><a class=\"header-anchor\" href=\"#继承view-绘制画板\">¶</a>继承View，绘制画板</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br><span class=\"line\">230</span><br><span class=\"line\">231</span><br><span class=\"line\">232</span><br><span class=\"line\">233</span><br><span class=\"line\">234</span><br><span class=\"line\">235</span><br><span class=\"line\">236</span><br><span class=\"line\">237</span><br><span class=\"line\">238</span><br><span class=\"line\">239</span><br><span class=\"line\">240</span><br><span class=\"line\">241</span><br><span class=\"line\">242</span><br><span class=\"line\">243</span><br><span class=\"line\">244</span><br><span class=\"line\">245</span><br><span class=\"line\">246</span><br><span class=\"line\">247</span><br><span class=\"line\">248</span><br><span class=\"line\">249</span><br><span class=\"line\">250</span><br><span class=\"line\">251</span><br><span class=\"line\">252</span><br><span class=\"line\">253</span><br><span class=\"line\">254</span><br><span class=\"line\">255</span><br><span class=\"line\">256</span><br><span class=\"line\">257</span><br><span class=\"line\">258</span><br><span class=\"line\">259</span><br><span class=\"line\">260</span><br><span class=\"line\">261</span><br><span class=\"line\">262</span><br><span class=\"line\">263</span><br><span class=\"line\">264</span><br><span class=\"line\">265</span><br><span class=\"line\">266</span><br><span class=\"line\">267</span><br><span class=\"line\">268</span><br><span class=\"line\">269</span><br><span class=\"line\">270</span><br><span class=\"line\">271</span><br><span class=\"line\">272</span><br><span class=\"line\">273</span><br><span class=\"line\">274</span><br><span class=\"line\">275</span><br><span class=\"line\">276</span><br><span class=\"line\">277</span><br><span class=\"line\">278</span><br><span class=\"line\">279</span><br><span class=\"line\">280</span><br><span class=\"line\">281</span><br><span class=\"line\">282</span><br><span class=\"line\">283</span><br><span class=\"line\">284</span><br><span class=\"line\">285</span><br><span class=\"line\">286</span><br><span class=\"line\">287</span><br><span class=\"line\">288</span><br><span class=\"line\">289</span><br><span class=\"line\">290</span><br><span class=\"line\">291</span><br><span class=\"line\">292</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by lieeber on 2017/6/28.</span></span><br><span class=\"line\"><span class=\"comment\"> * 自定义画板，可以更换画笔颜色，粗细，实现了前进，后退，保存到本地等功能。</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">DrawSomethingView</span> <span class=\"keyword\">extends</span> <span class=\"title\">View</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Paint linePaint;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Paint paintPaint;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Path fillPath;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Paint eraserPaint;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span> downX;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span> downY;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Path linePath;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> DRAW_LINE = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> DRAW_FILL = <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> DRAW_PAINT = <span class=\"number\">2</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">int</span> DRAW_ERASER = <span class=\"number\">3</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> drawStyle = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> lineColor = Color.BLACK;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> paintColor = Color.BLUE;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> lineWidth = <span class=\"number\">20</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span> paintWidthProgress = <span class=\"number\">50</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span> lineWidthProgress = <span class=\"number\">50</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> paintWidth = <span class=\"number\">70</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span> eraserWidthProgress = <span class=\"number\">50</span>;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> eraserWidth = <span class=\"number\">100</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">float</span> <span class=\"title\">getEraserWidthProgress</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> eraserWidthProgress;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setEraserWidthProgress</span><span class=\"params\">(<span class=\"keyword\">float</span> eraserWidthProgress)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.eraserWidthProgress = eraserWidthProgress;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getEraserWidth</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> eraserWidth;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setEraserWidth</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        eraserPaint.setStrokeWidth(eraserWidth * eraserWidthProgress / <span class=\"number\">100</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">float</span> <span class=\"title\">getPaintWidthProgress</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> paintWidthProgress;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPaintWidthProgress</span><span class=\"params\">(<span class=\"keyword\">float</span> paintWidthProgress)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.paintWidthProgress = paintWidthProgress;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">float</span> <span class=\"title\">getLineWidthProgress</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> lineWidthProgress;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setLineWidthProgress</span><span class=\"params\">(<span class=\"keyword\">float</span> lineWidthProgress)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.lineWidthProgress = lineWidthProgress;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getLineColor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> lineColor;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setLineColor</span><span class=\"params\">(<span class=\"keyword\">int</span> lineColor)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.lineColor = lineColor;</span><br><span class=\"line\">        linePaint.setColor(lineColor);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getPaintColor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> paintColor;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPaintColor</span><span class=\"params\">(<span class=\"keyword\">int</span> paintColor)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.paintColor = paintColor;</span><br><span class=\"line\">        paintPaint.setColor(paintColor);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getLineWidth</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> lineWidth;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setLineWidth</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        linePaint.setStrokeWidth(lineWidth * lineWidthProgress / <span class=\"number\">100</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getPaintWidth</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> paintWidth;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setPaintWidth</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        paintPaint.setStrokeWidth(paintWidth * paintWidthProgress / <span class=\"number\">100</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> ArrayList&lt;PathBean&gt; pathlist = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ArrayList&lt;PathBean&gt; deletePathList = <span class=\"keyword\">new</span> ArrayList&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Canvas mCanvas;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Bitmap mBitmap;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> viewWidth;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> viewHeight;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">DrawSomethingView</span><span class=\"params\">(Context context, @Nullable AttributeSet attrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs);</span><br><span class=\"line\">        linePaint = <span class=\"keyword\">new</span> Paint(Paint.ANTI_ALIAS_FLAG | Paint.DITHER_FLAG);</span><br><span class=\"line\">        linePaint.setStyle(Style.STROKE);</span><br><span class=\"line\">        linePaint.setColor(lineColor);</span><br><span class=\"line\">        linePaint.setStrokeWidth(lineWidth * lineWidthProgress / <span class=\"number\">100</span>);</span><br><span class=\"line\">        linePaint.setPathEffect(<span class=\"keyword\">new</span> CornerPathEffect(<span class=\"number\">100f</span>));</span><br><span class=\"line\">        linePaint.setStrokeCap(Cap.ROUND);</span><br><span class=\"line\">        linePaint.setStrokeJoin(Join.ROUND);</span><br><span class=\"line\"></span><br><span class=\"line\">        paintPaint = <span class=\"keyword\">new</span> Paint();</span><br><span class=\"line\">        paintPaint.setStyle(Style.STROKE);</span><br><span class=\"line\">        paintPaint.setColor(paintColor);</span><br><span class=\"line\">        paintPaint.setStrokeWidth(paintWidth * paintWidthProgress / <span class=\"number\">100</span>);</span><br><span class=\"line\">        paintPaint.setStrokeCap(Cap.ROUND);</span><br><span class=\"line\">        paintPaint.setPathEffect(<span class=\"keyword\">new</span> CornerPathEffect(<span class=\"number\">100f</span>));</span><br><span class=\"line\">        paintPaint.setStrokeJoin(Join.ROUND);</span><br><span class=\"line\"></span><br><span class=\"line\">        eraserPaint = <span class=\"keyword\">new</span> Paint();</span><br><span class=\"line\">        eraserPaint.setStyle(Style.STROKE);</span><br><span class=\"line\">        eraserPaint.setAlpha(<span class=\"number\">0</span>);</span><br><span class=\"line\">        eraserPaint.setXfermode(<span class=\"keyword\">new</span> PorterDuffXfermode(Mode.CLEAR));</span><br><span class=\"line\">        eraserPaint.setColor(Color.TRANSPARENT);</span><br><span class=\"line\">        eraserPaint.setStrokeWidth(eraserWidth * eraserWidthProgress / <span class=\"number\">100</span>);</span><br><span class=\"line\">        eraserPaint.setStrokeCap(Cap.ROUND);</span><br><span class=\"line\">        eraserPaint.setPathEffect(<span class=\"keyword\">new</span> CornerPathEffect(<span class=\"number\">100f</span>));</span><br><span class=\"line\">        eraserPaint.setStrokeJoin(Join.ROUND);</span><br><span class=\"line\"></span><br><span class=\"line\">        linePath = <span class=\"keyword\">new</span> Path();</span><br><span class=\"line\">        fillPath = <span class=\"keyword\">new</span> Path();</span><br><span class=\"line\"></span><br><span class=\"line\">        mCanvas = <span class=\"keyword\">new</span> Canvas();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onSizeChanged</span><span class=\"params\">(<span class=\"keyword\">int</span> w, <span class=\"keyword\">int</span> h, <span class=\"keyword\">int</span> oldw, <span class=\"keyword\">int</span> oldh)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class=\"line\">        viewWidth = w;</span><br><span class=\"line\">        viewHeight = h;</span><br><span class=\"line\">        blankBitmap();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouchEvent</span><span class=\"params\">(MotionEvent event)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (event.getAction()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> MotionEvent.ACTION_DOWN:</span><br><span class=\"line\">                downX = event.getX();</span><br><span class=\"line\">                downY = event.getY();</span><br><span class=\"line\">                linePath = <span class=\"keyword\">new</span> Path();</span><br><span class=\"line\">                linePath.moveTo(downX, downY);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> MotionEvent.ACTION_MOVE:</span><br><span class=\"line\">                downX = event.getX();</span><br><span class=\"line\">                downY = event.getY();</span><br><span class=\"line\">                <span class=\"keyword\">switch</span> (drawStyle) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> DRAW_LINE:</span><br><span class=\"line\">                        linePath.lineTo(downX, downY);</span><br><span class=\"line\">                        mCanvas.drawPath(linePath, linePaint);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> DRAW_PAINT:</span><br><span class=\"line\">                        linePath.lineTo(downX, downY);</span><br><span class=\"line\">                        mCanvas.drawPath(linePath, paintPaint);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> DRAW_ERASER:</span><br><span class=\"line\">                        linePath.lineTo(downX, downY);</span><br><span class=\"line\">                        mCanvas.drawPath(linePath, eraserPaint);</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                invalidate();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> MotionEvent.ACTION_UP:</span><br><span class=\"line\">                <span class=\"keyword\">switch</span> (drawStyle) &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> DRAW_LINE:</span><br><span class=\"line\">                        pathlist.add(<span class=\"keyword\">new</span> PathBean(linePath, linePaint, lineWidthProgress * lineWidth / <span class=\"number\">100</span>, lineColor));</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> DRAW_PAINT:</span><br><span class=\"line\">                        pathlist.add(<span class=\"keyword\">new</span> PathBean(linePath, paintPaint, paintWidthProgress * paintWidth / <span class=\"number\">100</span>, paintColor));</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">case</span> DRAW_ERASER:</span><br><span class=\"line\">                        pathlist.add(<span class=\"keyword\">new</span> PathBean(linePath, eraserPaint, eraserWidthProgress * eraserWidth / <span class=\"number\">100</span>, Color.TRANSPARENT));</span><br><span class=\"line\">                        <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                deletePathList.clear();</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDraw</span><span class=\"params\">(Canvas canvas)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onDraw(canvas);</span><br><span class=\"line\">        canvas.drawBitmap(mBitmap, <span class=\"keyword\">new</span> Matrix(), <span class=\"keyword\">null</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">blankBitmap</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        mBitmap = Bitmap.createBitmap(viewWidth, viewHeight, Config.ARGB_8888);</span><br><span class=\"line\">        mCanvas.setBitmap(mBitmap);</span><br><span class=\"line\"><span class=\"comment\">//        mCanvas.drawColor(Color.WHITE);</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        pathlist.clear();</span><br><span class=\"line\">        deletePathList.clear();</span><br><span class=\"line\">        blankBitmap();</span><br><span class=\"line\">        invalidate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">reset</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        blankBitmap();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (pathlist.size() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            PathBean pathBean = pathlist.get(pathlist.size() - <span class=\"number\">1</span>);</span><br><span class=\"line\">            pathlist.remove(pathBean);</span><br><span class=\"line\">            deletePathList.add(pathBean);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; pathlist.size(); i++) &#123;</span><br><span class=\"line\">            pathlist.get(i).paint.setStrokeWidth(pathlist.get(i).width);</span><br><span class=\"line\">            pathlist.get(i).paint.setColor(pathlist.get(i).color);</span><br><span class=\"line\">            mCanvas.drawPath(pathlist.get(i).path, pathlist.get(i).paint);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        invalidate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">forward</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (deletePathList.size() &gt; <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">            PathBean pathBean = deletePathList.get(deletePathList.size() - <span class=\"number\">1</span>);</span><br><span class=\"line\">            pathBean.paint.setStrokeWidth(pathBean.width);</span><br><span class=\"line\">            pathBean.paint.setColor(pathBean.color);</span><br><span class=\"line\">            mCanvas.drawPath(pathBean.path, pathBean.paint);</span><br><span class=\"line\">            deletePathList.remove(deletePathList.size() - <span class=\"number\">1</span>);</span><br><span class=\"line\">            pathlist.add(pathBean);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        invalidate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setDrawLine</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        drawStyle = DRAW_LINE;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setDrawPaint</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        drawStyle = DRAW_PAINT;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setEraser</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        drawStyle = DRAW_ERASER;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getlineColor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> lineColor;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (ContextCompat.checkSelfPermission(getContext(),</span><br><span class=\"line\">                Manifest.permission.WRITE_EXTERNAL_STORAGE)</span><br><span class=\"line\">                == PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//拥有读写文件权限</span></span><br><span class=\"line\">            Log.i(TAG,<span class=\"string\">\"拥有读写文件权限\"</span>);</span><br><span class=\"line\">            <span class=\"comment\">//获得系统当前时间，并以该时间作为文件名</span></span><br><span class=\"line\">            SimpleDateFormat formatter = <span class=\"keyword\">new</span> SimpleDateFormat(<span class=\"string\">\"yyyyMMddHHmmss\"</span>);</span><br><span class=\"line\">            Date curDate = <span class=\"keyword\">new</span> Date(System.currentTimeMillis());<span class=\"comment\">//获取当前时间</span></span><br><span class=\"line\">            String dir = Environment.getExternalStorageDirectory().getAbsolutePath();</span><br><span class=\"line\">            String str = formatter.format(curDate) + <span class=\"string\">\"paint.png\"</span>;</span><br><span class=\"line\">            File file = <span class=\"keyword\">new</span> File(dir + <span class=\"string\">\"/\"</span>+str);</span><br><span class=\"line\">            FileOutputStream fos = <span class=\"keyword\">null</span>;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                fos = <span class=\"keyword\">new</span> FileOutputStream(file);</span><br><span class=\"line\">                Toast.makeText(getContext(), <span class=\"string\">\"保存成功\"</span>, Toast.LENGTH_LONG).show();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">                e.printStackTrace();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            mBitmap.compress(CompressFormat.PNG, <span class=\"number\">100</span>, fos);</span><br><span class=\"line\">            getContext().sendBroadcast(<span class=\"keyword\">new</span> Intent(Intent.ACTION_MEDIA_SCANNER_SCAN_FILE, Uri.parse(<span class=\"string\">\"file://\"</span> + Environment.getExternalStorageDirectory())));</span><br><span class=\"line\">            Toast.makeText(getContext(), <span class=\"string\">\"保存成功\"</span>, Toast.LENGTH_LONG).show();</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">            Log.i(TAG,<span class=\"string\">\"没有读写权限\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            Toast.makeText(getContext(), <span class=\"string\">\"没有读写权限\"</span>, Toast.LENGTH_LONG).show();</span><br><span class=\"line\">            <span class=\"comment\">//没有读写权限</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (ActivityCompat.shouldShowRequestPermissionRationale((Activity) getContext(),</span><br><span class=\"line\">                    Manifest.permission.WRITE_EXTERNAL_STORAGE))&#123;</span><br><span class=\"line\">                ActivityCompat.requestPermissions((Activity) getContext(),</span><br><span class=\"line\">                        <span class=\"keyword\">new</span> String[]&#123;Manifest.permission.WRITE_EXTERNAL_STORAGE&#125;,</span><br><span class=\"line\">                        <span class=\"number\">140</span>);</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//                showPermissionDialog();</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"在activity中添加逻辑操作\"><a class=\"header-anchor\" href=\"#在activity中添加逻辑操作\">¶</a>在Activity中添加逻辑操作</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">MainActivity</span> <span class=\"keyword\">extends</span> <span class=\"title\">AppCompatActivity</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> DrawSomethingView myView;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onCreate</span><span class=\"params\">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onCreate(savedInstanceState);</span><br><span class=\"line\">        setContentView(R.layout.activity_main);</span><br><span class=\"line\">        myView = (DrawSomethingView) findViewById(R.id.myView);</span><br><span class=\"line\"></span><br><span class=\"line\">        findViewById(R.id.tvLine).setOnLongClickListener(<span class=\"keyword\">new</span> OnLongClickListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onLongClick</span><span class=\"params\">(View v)</span> </span>&#123;</span><br><span class=\"line\">                SheetUtil sheetUtil = SheetUtil.getInstance();</span><br><span class=\"line\">                <span class=\"keyword\">int</span> color = myView.getlineColor();</span><br><span class=\"line\">                <span class=\"keyword\">float</span> progress = myView.getLineWidthProgress();</span><br><span class=\"line\">                sheetUtil.addSheet(MainActivity.<span class=\"keyword\">this</span>, color, progress);</span><br><span class=\"line\">                sheetUtil.showSheet();</span><br><span class=\"line\">                sheetUtil.setSeekBarChangeListener(<span class=\"keyword\">new</span> SeekBarChangeListener() &#123;</span><br><span class=\"line\">                    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onProgress</span><span class=\"params\">(<span class=\"keyword\">float</span> progress)</span> </span>&#123;</span><br><span class=\"line\">                        myView.setLineWidthProgress(progress);</span><br><span class=\"line\">                        myView.setLineWidth();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onColorChange</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span> </span>&#123;</span><br><span class=\"line\">                        myView.setLineColor(color);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        findViewById(R.id.tvPaint).setOnLongClickListener(<span class=\"keyword\">new</span> OnLongClickListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onLongClick</span><span class=\"params\">(View v)</span> </span>&#123;</span><br><span class=\"line\">                SheetUtil sheetUtil = SheetUtil.getInstance();</span><br><span class=\"line\">                <span class=\"keyword\">int</span> color = myView.getPaintColor();</span><br><span class=\"line\">                <span class=\"keyword\">float</span> progress = myView.getPaintWidthProgress();</span><br><span class=\"line\">                sheetUtil.addSheet(MainActivity.<span class=\"keyword\">this</span>, color, progress);</span><br><span class=\"line\">                sheetUtil.showSheet();</span><br><span class=\"line\">                sheetUtil.setSeekBarChangeListener(<span class=\"keyword\">new</span> SeekBarChangeListener() &#123;</span><br><span class=\"line\">                    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onProgress</span><span class=\"params\">(<span class=\"keyword\">float</span> progress)</span> </span>&#123;</span><br><span class=\"line\">                        myView.setPaintWidthProgress(progress);</span><br><span class=\"line\">                        myView.setPaintWidth();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onColorChange</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span> </span>&#123;</span><br><span class=\"line\">                        myView.setPaintColor(color);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        findViewById(R.id.tvEraser).setOnLongClickListener(<span class=\"keyword\">new</span> OnLongClickListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onLongClick</span><span class=\"params\">(View v)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">float</span> progress = myView.getEraserWidthProgress();</span><br><span class=\"line\">                SheetUtil sheetUtil = SheetUtil.getInstance();</span><br><span class=\"line\">                sheetUtil.addSheet(MainActivity.<span class=\"keyword\">this</span>,-<span class=\"number\">1</span>, progress);</span><br><span class=\"line\">                sheetUtil.showSheet();</span><br><span class=\"line\">                sheetUtil.setSeekBarChangeListener(<span class=\"keyword\">new</span> SeekBarChangeListener() &#123;</span><br><span class=\"line\">                    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onProgress</span><span class=\"params\">(<span class=\"keyword\">float</span> progress)</span> </span>&#123;</span><br><span class=\"line\">                        myView.setEraserWidthProgress(progress);</span><br><span class=\"line\">                        myView.setEraserWidth();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                    <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onColorChange</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span> </span>&#123;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">                <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        findViewById(R.id.tvLine).setSelected(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        myView.clear();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">reset</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        myView.reset();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">forward</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        myView.forward();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawLine</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        clearSelect();</span><br><span class=\"line\">        findViewById(R.id.tvLine).setSelected(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        myView.setDrawLine();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">drawPaint</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        clearSelect();</span><br><span class=\"line\">        findViewById(R.id.tvPaint).setSelected(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        myView.setDrawPaint();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">eraser</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        clearSelect();</span><br><span class=\"line\">        findViewById(R.id.tvEraser).setSelected(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        myView.setEraser();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span>  <span class=\"keyword\">void</span> <span class=\"title\">clearSelect</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        findViewById(R.id.tvEraser).setSelected(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">        findViewById(R.id.tvLine).setSelected(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">        findViewById(R.id.tvPaint).setSelected(<span class=\"keyword\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">save</span><span class=\"params\">(View view)</span> </span>&#123;</span><br><span class=\"line\">        myView.save();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"activity对应布局文件\"><a class=\"header-anchor\" href=\"#activity对应布局文件\">¶</a>Activity对应布局文件</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">activity_main.xml</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--&lt;ImageView--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--android:layout_width=\"match_parent\"--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--android:src=\"@drawable/timg\"--&gt;</span></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--android:scaleType=\"fitXY\"--&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">&lt;!--android:layout_height=\"match_parent\"/&gt;--&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/ll\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_alignParentLeft</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_alignParentStart</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_alignParentTop</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"horizontal\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tvClear\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/tv_bg\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:clickable</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:onClick</span>=<span class=\"string\">\"clear\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingLeft</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingRight</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"清除\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tvReset\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/tv_bg_2\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:clickable</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:onClick</span>=<span class=\"string\">\"reset\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingLeft</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingRight</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"撤销\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/tv_bg_3\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:clickable</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:onClick</span>=<span class=\"string\">\"forward\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingLeft</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingRight</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"前进\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tvLine\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/tv_bg_4\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:clickable</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:onClick</span>=<span class=\"string\">\"drawLine\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingLeft</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingRight</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"线条\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tvPaint\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/tv_bg_4\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:clickable</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:onClick</span>=<span class=\"string\">\"drawPaint\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingLeft</span>=<span class=\"string\">\"5dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingRight</span>=<span class=\"string\">\"5dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"画笔\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tvEraser\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/tv_bg_4\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:clickable</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:onClick</span>=<span class=\"string\">\"eraser\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingLeft</span>=<span class=\"string\">\"5dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingRight</span>=<span class=\"string\">\"5dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"橡皮擦\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tvSave\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"30dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:background</span>=<span class=\"string\">\"@drawable/tv_bg_2\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:clickable</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:onClick</span>=<span class=\"string\">\"save\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingLeft</span>=<span class=\"string\">\"5dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:paddingRight</span>=<span class=\"string\">\"5dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"保存\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">studentsdemo.lieeber.com.lbview.views.DrawSomethingView</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/myView\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\"></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_below</span>=<span class=\"string\">\"@+id/ll\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"相关资源文件\"><a class=\"header-anchor\" href=\"#相关资源文件\">¶</a>相关资源文件</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tv_bg.xml</span><br><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selector</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@color/colorPrimary\"</span> <span class=\"attr\">android:state_pressed</span>=<span class=\"string\">\"true\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@color/colorAccent\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">selector</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">tv_bg2.xml</span><br><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selector</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@color/colorPrimary\"</span> <span class=\"attr\">android:state_pressed</span>=<span class=\"string\">\"true\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@color/color1\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">selector</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">tv_bg3.xml</span><br><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selector</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@color/colorPrimary\"</span> <span class=\"attr\">android:state_pressed</span>=<span class=\"string\">\"true\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span> <span class=\"attr\">android:drawable</span>=<span class=\"string\">\"@color/color2\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">selector</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">tv_bg4.xml</span><br><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">selector</span> <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span>  <span class=\"attr\">android:state_selected</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">corners</span> <span class=\"attr\">android:radius</span>=<span class=\"string\">\"3dp\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">stroke</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"@color/colorAccent\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">stroke</span> <span class=\"attr\">android:width</span>=<span class=\"string\">\"1dp\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">shape</span> <span class=\"attr\">android:shape</span>=<span class=\"string\">\"rectangle\"</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">corners</span> <span class=\"attr\">android:radius</span>=<span class=\"string\">\"6dp\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">stroke</span> <span class=\"attr\">android:color</span>=<span class=\"string\">\"#ffffffff\"</span>/&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">stroke</span> <span class=\"attr\">android:width</span>=<span class=\"string\">\"3dp\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">shape</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">item</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">selector</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"自定义弹框\"><a class=\"header-anchor\" href=\"#自定义弹框\">¶</a>自定义弹框</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SheetUtil</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ViewGroup contentView;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> View sheetContent;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> SheetUtil sheetUtil = <span class=\"keyword\">new</span> SheetUtil();</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Activity activity;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> View llSheet;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> View viewSheetBg;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> ColorPickerView colorPickerView;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> View colorView;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> SeekBar seekBar;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> TextView tvProgress;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> SheetUtil <span class=\"title\">getInstance</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> sheetUtil;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">addSheet</span><span class=\"params\">(Activity activity, <span class=\"keyword\">int</span> originColor, <span class=\"keyword\">float</span> originProgress)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.activity = activity;</span><br><span class=\"line\">        contentView = (ViewGroup) activity.findViewById(android.R.id.content);</span><br><span class=\"line\">        sheetContent = LayoutInflater.from(activity).inflate(R.layout.setting_dialog, contentView, <span class=\"keyword\">false</span>);</span><br><span class=\"line\">        sheetContent.setVisibility(View.GONE);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (contentView.findViewById(R.id.view_sheet_bg) == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            contentView.addView(sheetContent);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        viewSheetBg = sheetContent.findViewById(R.id.view_sheet_bg);</span><br><span class=\"line\">        llSheet = sheetContent.findViewById(R.id.ll_sheet);</span><br><span class=\"line\">        colorPickerView = (ColorPickerView) sheetContent.findViewById(R.id.color_picker);</span><br><span class=\"line\">        colorView = sheetContent.findViewById(R.id.colorView);</span><br><span class=\"line\">        seekBar = (SeekBar) sheetContent.findViewById(R.id.seek_bar);</span><br><span class=\"line\">        tvProgress = (TextView) sheetContent.findViewById(R.id.tv_progress);</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (originColor == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            sheetContent.findViewById(R.id.rl_color_picker).setVisibility(View.GONE);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        seekBar.setProgress((<span class=\"keyword\">int</span>) originProgress);</span><br><span class=\"line\">        tvProgress.setText((<span class=\"keyword\">int</span>) originProgress + <span class=\"string\">\"%\"</span>);</span><br><span class=\"line\">        colorView.setBackgroundColor(originColor);</span><br><span class=\"line\">        colorPickerView.setOnSeekColorListener(<span class=\"keyword\">new</span> OnSeekColorListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onSeekColorListener</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span> </span>&#123;</span><br><span class=\"line\">                colorView.setBackgroundColor(color);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (seekBarChangeListener != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    seekBarChangeListener.onColorChange(color);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        viewSheetBg.setOnClickListener(<span class=\"keyword\">new</span> OnClickListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onClick</span><span class=\"params\">(View v)</span> </span>&#123;</span><br><span class=\"line\">                disMissSheet();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">        seekBar.setOnSeekBarChangeListener(<span class=\"keyword\">new</span> OnSeekBarChangeListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onProgressChanged</span><span class=\"params\">(SeekBar seekBar, <span class=\"keyword\">int</span> progress, <span class=\"keyword\">boolean</span> fromUser)</span> </span>&#123;</span><br><span class=\"line\">                System.out.println(progress);</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (seekBarChangeListener != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                    seekBarChangeListener.onProgress(progress);</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                tvProgress.setText(progress + <span class=\"string\">\"%\"</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onStartTrackingTouch</span><span class=\"params\">(SeekBar seekBar)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onStopTrackingTouch</span><span class=\"params\">(SeekBar seekBar)</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">showSheet</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        sheetContent.setVisibility(View.VISIBLE);</span><br><span class=\"line\">        sheetContent.bringToFront();</span><br><span class=\"line\"></span><br><span class=\"line\">        llSheet.setTranslationY(activity.getResources().getDisplayMetrics().heightPixels);</span><br><span class=\"line\">        ValueAnimator alphaAnimator = ValueAnimator.ofFloat(<span class=\"number\">0</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">        alphaAnimator.setInterpolator(<span class=\"keyword\">new</span> DecelerateInterpolator());</span><br><span class=\"line\">        alphaAnimator.setDuration(<span class=\"number\">300</span>);</span><br><span class=\"line\">        alphaAnimator.addUpdateListener(<span class=\"keyword\">new</span> AnimatorUpdateListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onAnimationUpdate</span><span class=\"params\">(ValueAnimator animation)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">float</span> alpha = (<span class=\"keyword\">float</span>) animation.getAnimatedValue();</span><br><span class=\"line\">                viewSheetBg.setAlpha(alpha);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        alphaAnimator.start();</span><br><span class=\"line\">        ValueAnimator translationAniamtor = ValueAnimator.ofFloat(activity.getResources().getDisplayMetrics().heightPixels, <span class=\"number\">0</span>);</span><br><span class=\"line\">        translationAniamtor.setInterpolator(<span class=\"keyword\">new</span> DecelerateInterpolator());</span><br><span class=\"line\">        translationAniamtor.setDuration(<span class=\"number\">300</span>);</span><br><span class=\"line\">        translationAniamtor.addUpdateListener(<span class=\"keyword\">new</span> AnimatorUpdateListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onAnimationUpdate</span><span class=\"params\">(ValueAnimator animation)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">float</span> translationY = (<span class=\"keyword\">float</span>) animation.getAnimatedValue();</span><br><span class=\"line\">                llSheet.setTranslationY(translationY);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        translationAniamtor.start();</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">disMissSheet</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (viewSheetBg != <span class=\"keyword\">null</span> &amp;&amp; llSheet != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            disMissSheet(viewSheetBg, llSheet);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">disMissSheet</span><span class=\"params\">(<span class=\"keyword\">final</span> View viewSheetBg, <span class=\"keyword\">final</span> View llSheet)</span> </span>&#123;</span><br><span class=\"line\">        ValueAnimator alphaAnimator = ValueAnimator.ofFloat(<span class=\"number\">1</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">        alphaAnimator.setInterpolator(<span class=\"keyword\">new</span> DecelerateInterpolator());</span><br><span class=\"line\">        alphaAnimator.setDuration(<span class=\"number\">300</span>);</span><br><span class=\"line\">        alphaAnimator.addUpdateListener(<span class=\"keyword\">new</span> AnimatorUpdateListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onAnimationUpdate</span><span class=\"params\">(ValueAnimator animation)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">float</span> alpha = (<span class=\"keyword\">float</span>) animation.getAnimatedValue();</span><br><span class=\"line\">                viewSheetBg.setAlpha(alpha);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        alphaAnimator.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        ValueAnimator translationAniamtor = ValueAnimator.ofFloat(<span class=\"number\">0</span>, activity.getResources().getDisplayMetrics().heightPixels);</span><br><span class=\"line\">        translationAniamtor.setInterpolator(<span class=\"keyword\">new</span> DecelerateInterpolator());</span><br><span class=\"line\">        translationAniamtor.setDuration(<span class=\"number\">300</span>);</span><br><span class=\"line\">        translationAniamtor.addUpdateListener(<span class=\"keyword\">new</span> AnimatorUpdateListener() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span> <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onAnimationUpdate</span><span class=\"params\">(ValueAnimator animation)</span> </span>&#123;</span><br><span class=\"line\">                <span class=\"keyword\">float</span> translationY = (<span class=\"keyword\">float</span>) animation.getAnimatedValue();</span><br><span class=\"line\">                llSheet.setTranslationY(translationY);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">        translationAniamtor.start();</span><br><span class=\"line\">        translationAniamtor.addListener(<span class=\"keyword\">new</span> AnimatorListenerAdapter() &#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">onAnimationEnd</span><span class=\"params\">(Animator animation)</span> </span>&#123;</span><br><span class=\"line\">                contentView.removeView(sheetContent);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">isShowingSheet</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (contentView == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (contentView.findViewById(R.id.view_sheet_bg) == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">SeekBarChangeListener</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onProgress</span><span class=\"params\">(<span class=\"keyword\">float</span> progress)</span></span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onColorChange</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span></span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> SeekBarChangeListener seekBarChangeListener;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setSeekBarChangeListener</span><span class=\"params\">(SeekBarChangeListener seekBarChangeListener)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.seekBarChangeListener = seekBarChangeListener;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h4 id=\"自定义弹框对应布局\"><a class=\"header-anchor\" href=\"#自定义弹框对应布局\">¶</a>自定义弹框对应布局</h4>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">setting_dialog.xml</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">FrameLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">xmlns:android</span>=<span class=\"string\">\"http://schemas.android.com/apk/res/android\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">    <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">View</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/view_sheet_bg\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:background</span>=<span class=\"string\">\"#88000000\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">LinearLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/ll_sheet\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"300dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:background</span>=<span class=\"string\">\"#ffffff\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:clickable</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:orientation</span>=<span class=\"string\">\"vertical\"</span></span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">android:padding</span>=<span class=\"string\">\"20dp\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"粗细\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">SeekBar</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/seek_bar\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"10dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_marginTop</span>=<span class=\"string\">\"10dp\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">TextView</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/tv_progress\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_gravity</span>=<span class=\"string\">\"center_horizontal\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_marginTop</span>=<span class=\"string\">\"5dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:text</span>=<span class=\"string\">\"50%\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">RelativeLayout</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/rl_color_picker\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"match_parent\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"wrap_content\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:layout_marginTop</span>=<span class=\"string\">\"20dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">            <span class=\"attr\">android:gravity</span>=<span class=\"string\">\"center\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">studentsdemo.lieeber.com.lbview.views.ColorPickerView</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/color_picker\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"150dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"150dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_alignParentLeft</span>=<span class=\"string\">\"true\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">View</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:id</span>=<span class=\"string\">\"@+id/colorView\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_width</span>=<span class=\"string\">\"20dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_height</span>=<span class=\"string\">\"20dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_centerVertical</span>=<span class=\"string\">\"true\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_marginLeft</span>=<span class=\"string\">\"40dp\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:layout_toRightOf</span>=<span class=\"string\">\"@+id/color_picker\"</span></span></span><br><span class=\"line\"><span class=\"tag\">                <span class=\"attr\">android:background</span>=<span class=\"string\">\"#ff0000\"</span>/&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">RelativeLayout</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">LinearLayout</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">FrameLayout</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"自定义画笔颜色更改器\"><a class=\"header-anchor\" href=\"#自定义画笔颜色更改器\">¶</a>自定义画笔颜色更改器</h4>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by lieeber on 2017/6/28.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ColorPickerView</span> <span class=\"keyword\">extends</span> <span class=\"title\">View</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> Context context;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Currently selected color</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">float</span>[] colorHSV = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[]&#123;<span class=\"number\">0f</span>, <span class=\"number\">1f</span>, <span class=\"number\">1f</span>&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Paint colorWheelPaint;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> Paint touchCirclePaint;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> radius;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> centerX;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> centerY;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> touchCircleX;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">int</span> touchCircleY;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> OnSeekColorListener onSeekColorListener;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ColorPickerView</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>(context, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ColorPickerView</span><span class=\"params\">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>(context, attrs, <span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">ColorPickerView</span><span class=\"params\">(Context context, AttributeSet attrs, <span class=\"keyword\">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(context, attrs, defStyleAttr);</span><br><span class=\"line\">        init(context);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">(Context context)</span> </span>&#123;</span><br><span class=\"line\">        setLayerType(LAYER_TYPE_SOFTWARE, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.context = context;</span><br><span class=\"line\">        colorWheelPaint = <span class=\"keyword\">new</span> Paint();</span><br><span class=\"line\">        colorWheelPaint.setAntiAlias(<span class=\"keyword\">true</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        touchCirclePaint = <span class=\"keyword\">new</span> Paint();</span><br><span class=\"line\">        touchCirclePaint.setStyle(Paint.Style.STROKE);</span><br><span class=\"line\">        touchCirclePaint.setColor(Color.WHITE);</span><br><span class=\"line\">        touchCirclePaint.setAntiAlias(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onMeasure</span><span class=\"params\">(<span class=\"keyword\">int</span> widthMeasureSpec, <span class=\"keyword\">int</span> heightMeasureSpec)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> widthSpecMode = MeasureSpec.getMode(widthMeasureSpec);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> heightSpecMode = MeasureSpec.getMode(heightMeasureSpec);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">int</span> widthSpecSize = MeasureSpec.getSize(widthMeasureSpec);</span><br><span class=\"line\">        <span class=\"keyword\">int</span> heightSpecSize = MeasureSpec.getSize(heightMeasureSpec);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//处理 wrap_content问题</span></span><br><span class=\"line\">        <span class=\"keyword\">int</span> defaultDimension = dip2px(<span class=\"number\">200</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (widthSpecMode == MeasureSpec.AT_MOST &amp;&amp; heightSpecMode == MeasureSpec.AT_MOST) &#123;</span><br><span class=\"line\">            setMeasuredDimension(defaultDimension, defaultDimension);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (widthSpecMode == MeasureSpec.AT_MOST) &#123;</span><br><span class=\"line\">            setMeasuredDimension(defaultDimension, heightSpecSize);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (heightSpecMode == MeasureSpec.AT_MOST) &#123;</span><br><span class=\"line\">            setMeasuredDimension(widthSpecSize, defaultDimension);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onSizeChanged</span><span class=\"params\">(<span class=\"keyword\">int</span> w, <span class=\"keyword\">int</span> h, <span class=\"keyword\">int</span> oldw, <span class=\"keyword\">int</span> oldh)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onSizeChanged(w, h, oldw, oldh);</span><br><span class=\"line\">        centerX = w / <span class=\"number\">2</span>;</span><br><span class=\"line\">        centerY = h / <span class=\"number\">2</span>;</span><br><span class=\"line\">        radius = Math.min(centerX, centerY);</span><br><span class=\"line\">        createColorWheel();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onDraw</span><span class=\"params\">(Canvas canvas)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>.onDraw(canvas);</span><br><span class=\"line\">        canvas.drawCircle(centerX, centerY, radius, colorWheelPaint);</span><br><span class=\"line\">        canvas.drawCircle(touchCircleX, touchCircleY, <span class=\"number\">10</span>, touchCirclePaint);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * create color wheel</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">createColorWheel</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> colorCount = <span class=\"number\">30</span>;</span><br><span class=\"line\">        <span class=\"keyword\">float</span> colorAngleStep = <span class=\"number\">360</span> / <span class=\"number\">30.0f</span>;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> colors[] = <span class=\"keyword\">new</span> <span class=\"keyword\">int</span>[colorCount];</span><br><span class=\"line\">        <span class=\"keyword\">float</span> hsv[] = <span class=\"keyword\">new</span> <span class=\"keyword\">float</span>[]&#123;<span class=\"number\">0f</span>, <span class=\"number\">1f</span>, <span class=\"number\">1f</span>&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"keyword\">int</span> i = <span class=\"number\">0</span>; i &lt; colors.length; i++) &#123;</span><br><span class=\"line\">            hsv[<span class=\"number\">0</span>] = (i * colorAngleStep + <span class=\"number\">180</span>) % <span class=\"number\">360</span>;</span><br><span class=\"line\">            colors[i] = Color.HSVToColor(hsv);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        SweepGradient sweepGradient = <span class=\"keyword\">new</span> SweepGradient(centerX, centerY, colors, <span class=\"keyword\">null</span>);</span><br><span class=\"line\">        RadialGradient radialGradient = <span class=\"keyword\">new</span> RadialGradient(centerX, centerY,</span><br><span class=\"line\">                radius, <span class=\"number\">0xFFFFFFFF</span>, <span class=\"number\">0x00FFFFFF</span>, Shader.TileMode.CLAMP);</span><br><span class=\"line\">        ComposeShader composeShader = <span class=\"keyword\">new</span> ComposeShader(sweepGradient, radialGradient, PorterDuff.Mode.SRC_OVER);</span><br><span class=\"line\">        colorWheelPaint.setShader(composeShader);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">boolean</span> <span class=\"title\">onTouchEvent</span><span class=\"params\">(MotionEvent event)</span> </span>&#123;</span><br><span class=\"line\">        ViewParent parent = getParent();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (parent != <span class=\"keyword\">null</span>)</span><br><span class=\"line\">            parent.requestDisallowInterceptTouchEvent(<span class=\"keyword\">true</span>);</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (event.getAction()) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> MotionEvent.ACTION_DOWN:</span><br><span class=\"line\">            <span class=\"keyword\">case</span> MotionEvent.ACTION_MOVE:</span><br><span class=\"line\">                <span class=\"keyword\">int</span> x = (<span class=\"keyword\">int</span>) event.getX();</span><br><span class=\"line\">                <span class=\"keyword\">int</span> y = (<span class=\"keyword\">int</span>) event.getY();</span><br><span class=\"line\">                <span class=\"keyword\">int</span> cx = x - centerX;</span><br><span class=\"line\">                <span class=\"keyword\">int</span> cy = y - centerY;</span><br><span class=\"line\">                <span class=\"keyword\">double</span> d = Math.sqrt(cx * cx + cy * cy);</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (d &lt;= radius) &#123;</span><br><span class=\"line\">                    colorHSV[<span class=\"number\">0</span>] = (<span class=\"keyword\">float</span>) (Math.toDegrees(Math.atan2(cy, cx)) + <span class=\"number\">180f</span>);</span><br><span class=\"line\">                    colorHSV[<span class=\"number\">1</span>] = Math.max(<span class=\"number\">0f</span>, Math.min(<span class=\"number\">1f</span>, (<span class=\"keyword\">float</span>) (d / radius)));</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (onSeekColorListener != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                        touchCircleY = y;</span><br><span class=\"line\">                        touchCircleX = x;</span><br><span class=\"line\">                        onSeekColorListener.onSeekColorListener(getColor());</span><br><span class=\"line\">                        postInvalidate();</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> MotionEvent.ACTION_UP:</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setOnSeekColorListener</span><span class=\"params\">(OnSeekColorListener listener)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.onSeekColorListener = listener;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> color 0~360</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setHSVColor</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span> </span>&#123;</span><br><span class=\"line\">        colorHSV[<span class=\"number\">0</span>] = color;</span><br><span class=\"line\">        colorWheelPaint.setColor(Color.HSVToColor(colorHSV));</span><br><span class=\"line\">        postInvalidate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> value 0~1.0</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setHSVValue</span><span class=\"params\">(<span class=\"keyword\">float</span> value)</span> </span>&#123;</span><br><span class=\"line\">        colorHSV[<span class=\"number\">2</span>] = value;</span><br><span class=\"line\">        colorWheelPaint.setColor(Color.HSVToColor(colorHSV));</span><br><span class=\"line\">        postInvalidate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> saturation 0~1.0</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setHSVSaturation</span><span class=\"params\">(<span class=\"keyword\">float</span> saturation)</span> </span>&#123;</span><br><span class=\"line\">        colorHSV[<span class=\"number\">1</span>] = saturation;</span><br><span class=\"line\">        colorWheelPaint.setColor(Color.HSVToColor(colorHSV));</span><br><span class=\"line\">        postInvalidate();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setColor</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span> </span>&#123;</span><br><span class=\"line\">        Color.colorToHSV(color, colorHSV);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">getColor</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Color.HSVToColor(colorHSV);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> Parcelable <span class=\"title\">onSaveInstanceState</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        Bundle state = <span class=\"keyword\">new</span> Bundle();</span><br><span class=\"line\">        state.putFloatArray(<span class=\"string\">\"color\"</span>, colorHSV);</span><br><span class=\"line\">        state.putParcelable(<span class=\"string\">\"super\"</span>, <span class=\"keyword\">super</span>.onSaveInstanceState());</span><br><span class=\"line\">        <span class=\"keyword\">return</span> state;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title\">onRestoreInstanceState</span><span class=\"params\">(Parcelable state)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (state <span class=\"keyword\">instanceof</span> Bundle) &#123;</span><br><span class=\"line\">            Bundle bundle = (Bundle) state;</span><br><span class=\"line\">            colorHSV = bundle.getFloatArray(<span class=\"string\">\"color\"</span>);</span><br><span class=\"line\">            <span class=\"keyword\">super</span>.onRestoreInstanceState(bundle.getParcelable(<span class=\"string\">\"super\"</span>));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">super</span>.onRestoreInstanceState(state);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">int</span> <span class=\"title\">dip2px</span><span class=\"params\">(<span class=\"keyword\">float</span> dpValue)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">final</span> <span class=\"keyword\">float</span> scale = context.getResources().getDisplayMetrics().density;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (<span class=\"keyword\">int</span>) (dpValue * scale + <span class=\"number\">0.5f</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">interface</span> <span class=\"title\">OnSeekColorListener</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">onSeekColorListener</span><span class=\"params\">(<span class=\"keyword\">int</span> color)</span></span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"},{"title":"进程同步","date":"2017-04-20T12:01:15.000Z","_content":"### 进程同步的基本概念\n1. 两种形式的制约关系\n    1. 间接相互制约关系\n        * 同处于一个系统中的进程，通常都共享着某种系统资源，如共享 CPU、共享 I/O 设备等。\n    2. 直接相互制约关系\n        * 种制约主要源于进程间的合作。\n2. 临界资源\n    1. 许多硬件资源如打印机、磁带机等，都属于临界资源(Critical Resouce)，诸进程间应采取互斥方式，实现对这种资源的共享。\n3. 临界区\n    1. 不论是硬件临界资源，还是软件临界资源，多个进程必须互斥地对它进行访问。人们把在每个进程中访问临界资源的那段代码称为临界区(critical section)。\n4. 同步机制应遵循的恩规则\n    1. 空闲让进。当无进程处于临界区时，表明临界资源处于空闲状态，应允许一个请求进入临界区的进程立即进入自己的临界区，以有效地利用临界资源。\n    2. 忙则等待。当已有进程进入临界区时，表明临界资源正在被访问，因而其它试图进入临界区的进程必须等待，以保证对临界资源的互斥访问。\n    3. 有限等待。对要求访问临界资源的进程，应保证在有限时间内能进入自己的临界区，以免陷入“死等”状态。\n    4. 让权等待。当进程不能进入自己的临界区时，应立即释放处理机，以免进程陷入“忙等”状态。\n<!-- more -->\n\n### 信号量机制\n1. 整型信号量\n2. 记录型信号量\n3. AND型信号量\n4. 信号量集\n\n### 信号量的应用\n1. 利用信号量实现进程互斥\n2. 利用信号量实现前趋关系\n\n### 管程机制\n1. 管程的定义\n    1. 代表共享资源的数据结构，以及由对该共享数据结构实施操作的一组过程所组成的资源管理程序，共同构成了一个操作系统的资源管理模块，我们称之为管程。\n2. 管程的组成\n    1. 管程的名称\n    2. 局部于管程内部的共享数据设置初始值的语句\n    3. 对该数据结构进行操作的一组过程\n    4. 对局部于管程内部的共享数据设置初始值的语句\n3. 管程的特性\n    1. 模块化：管程是一个基本程序单位，可以单独编译\n    2. 抽象数据类型：管程中不仅有数据，而且有对数据的操作\n    3. 信息掩蔽，管程中的数据结构只能被管程中的过程访问，这些过程也是在管程内部定义的，供管程外的进程调用，而管程中的数据结构以及过程的具体实现外部都不可见。\n    4. 管程和进程的不同主要体现在：\n        * 虽然二者都定义了数据结构，但进程定义的是私有数据结构 PCB，管程定义的是公共数据结构，如消息队列等;\n        * 二者都存在对各自数据结构上的操作，但进程是由顺序程序执行有关的操作，而管程主要是进行同步操作和初始化操作;\n        * 设置进程的目的在于实现系统的并发性，而管程的设置则是解决共享资源的互斥使用问题;\n        * 进程通过调用管程中的过程对共享数据结构实行操作，该过程就如通常的子程序一样被调用，因而管程为被动工作方式，进程则为主动工作方式;\n        * 进程之间能并发执行，而管程则不能与其调用者并发;\n        * 进程具有动态性，由“创建”而诞生，由“撤销”而消亡，而管程则是操作系统中的一个资源管理模块，供进程调用。\n4. 条件变量\n\n### 经典进程的同步问题\n1. 生产者—消费者问题\n    1. 利用记录型信号量解决生产者—消费者问题\n    2. 利用 AND 信号量解决生产者—消费者问题\n    3. 利用管程解决生产者—消费者问题\n2. 哲学家进餐问题\n    1. 利用记录型信号量解决哲学家进餐问题\n    2. 利用AND信号量解决哲学家进餐问题\n3. 读者—写者问题\n    1. 利用记录型信号量解决\n    2. 利用信号量机制解决","source":"_posts/计算机操作系统-进程同步.md","raw":"---\ntitle: 进程同步\ntags:\n  - 进程\ncategories:\n  - 操作系统\ndate: 2017-04-20 20:01:15\n---\n### 进程同步的基本概念\n1. 两种形式的制约关系\n    1. 间接相互制约关系\n        * 同处于一个系统中的进程，通常都共享着某种系统资源，如共享 CPU、共享 I/O 设备等。\n    2. 直接相互制约关系\n        * 种制约主要源于进程间的合作。\n2. 临界资源\n    1. 许多硬件资源如打印机、磁带机等，都属于临界资源(Critical Resouce)，诸进程间应采取互斥方式，实现对这种资源的共享。\n3. 临界区\n    1. 不论是硬件临界资源，还是软件临界资源，多个进程必须互斥地对它进行访问。人们把在每个进程中访问临界资源的那段代码称为临界区(critical section)。\n4. 同步机制应遵循的恩规则\n    1. 空闲让进。当无进程处于临界区时，表明临界资源处于空闲状态，应允许一个请求进入临界区的进程立即进入自己的临界区，以有效地利用临界资源。\n    2. 忙则等待。当已有进程进入临界区时，表明临界资源正在被访问，因而其它试图进入临界区的进程必须等待，以保证对临界资源的互斥访问。\n    3. 有限等待。对要求访问临界资源的进程，应保证在有限时间内能进入自己的临界区，以免陷入“死等”状态。\n    4. 让权等待。当进程不能进入自己的临界区时，应立即释放处理机，以免进程陷入“忙等”状态。\n<!-- more -->\n\n### 信号量机制\n1. 整型信号量\n2. 记录型信号量\n3. AND型信号量\n4. 信号量集\n\n### 信号量的应用\n1. 利用信号量实现进程互斥\n2. 利用信号量实现前趋关系\n\n### 管程机制\n1. 管程的定义\n    1. 代表共享资源的数据结构，以及由对该共享数据结构实施操作的一组过程所组成的资源管理程序，共同构成了一个操作系统的资源管理模块，我们称之为管程。\n2. 管程的组成\n    1. 管程的名称\n    2. 局部于管程内部的共享数据设置初始值的语句\n    3. 对该数据结构进行操作的一组过程\n    4. 对局部于管程内部的共享数据设置初始值的语句\n3. 管程的特性\n    1. 模块化：管程是一个基本程序单位，可以单独编译\n    2. 抽象数据类型：管程中不仅有数据，而且有对数据的操作\n    3. 信息掩蔽，管程中的数据结构只能被管程中的过程访问，这些过程也是在管程内部定义的，供管程外的进程调用，而管程中的数据结构以及过程的具体实现外部都不可见。\n    4. 管程和进程的不同主要体现在：\n        * 虽然二者都定义了数据结构，但进程定义的是私有数据结构 PCB，管程定义的是公共数据结构，如消息队列等;\n        * 二者都存在对各自数据结构上的操作，但进程是由顺序程序执行有关的操作，而管程主要是进行同步操作和初始化操作;\n        * 设置进程的目的在于实现系统的并发性，而管程的设置则是解决共享资源的互斥使用问题;\n        * 进程通过调用管程中的过程对共享数据结构实行操作，该过程就如通常的子程序一样被调用，因而管程为被动工作方式，进程则为主动工作方式;\n        * 进程之间能并发执行，而管程则不能与其调用者并发;\n        * 进程具有动态性，由“创建”而诞生，由“撤销”而消亡，而管程则是操作系统中的一个资源管理模块，供进程调用。\n4. 条件变量\n\n### 经典进程的同步问题\n1. 生产者—消费者问题\n    1. 利用记录型信号量解决生产者—消费者问题\n    2. 利用 AND 信号量解决生产者—消费者问题\n    3. 利用管程解决生产者—消费者问题\n2. 哲学家进餐问题\n    1. 利用记录型信号量解决哲学家进餐问题\n    2. 利用AND信号量解决哲学家进餐问题\n3. 读者—写者问题\n    1. 利用记录型信号量解决\n    2. 利用信号量机制解决","slug":"计算机操作系统-进程同步","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv54l002h58ugo191fz9s","content":"<h3 id=\"进程同步的基本概念\"><a class=\"header-anchor\" href=\"#进程同步的基本概念\">¶</a>进程同步的基本概念</h3>\n<ol>\n<li>两种形式的制约关系\n<ol>\n<li>间接相互制约关系\n<ul>\n<li>同处于一个系统中的进程，通常都共享着某种系统资源，如共享 CPU、共享 I/O 设备等。</li>\n</ul>\n</li>\n<li>直接相互制约关系\n<ul>\n<li>种制约主要源于进程间的合作。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>临界资源\n<ol>\n<li>许多硬件资源如打印机、磁带机等，都属于临界资源(Critical Resouce)，诸进程间应采取互斥方式，实现对这种资源的共享。</li>\n</ol>\n</li>\n<li>临界区\n<ol>\n<li>不论是硬件临界资源，还是软件临界资源，多个进程必须互斥地对它进行访问。人们把在每个进程中访问临界资源的那段代码称为临界区(critical section)。</li>\n</ol>\n</li>\n<li>同步机制应遵循的恩规则\n<ol>\n<li>空闲让进。当无进程处于临界区时，表明临界资源处于空闲状态，应允许一个请求进入临界区的进程立即进入自己的临界区，以有效地利用临界资源。</li>\n<li>忙则等待。当已有进程进入临界区时，表明临界资源正在被访问，因而其它试图进入临界区的进程必须等待，以保证对临界资源的互斥访问。</li>\n<li>有限等待。对要求访问临界资源的进程，应保证在有限时间内能进入自己的临界区，以免陷入“死等”状态。</li>\n<li>让权等待。当进程不能进入自己的临界区时，应立即释放处理机，以免进程陷入“忙等”状态。</li>\n</ol>\n</li>\n</ol>\n<a id=\"more\"></a>\n<h3 id=\"信号量机制\"><a class=\"header-anchor\" href=\"#信号量机制\">¶</a>信号量机制</h3>\n<ol>\n<li>整型信号量</li>\n<li>记录型信号量</li>\n<li>AND型信号量</li>\n<li>信号量集</li>\n</ol>\n<h3 id=\"信号量的应用\"><a class=\"header-anchor\" href=\"#信号量的应用\">¶</a>信号量的应用</h3>\n<ol>\n<li>利用信号量实现进程互斥</li>\n<li>利用信号量实现前趋关系</li>\n</ol>\n<h3 id=\"管程机制\"><a class=\"header-anchor\" href=\"#管程机制\">¶</a>管程机制</h3>\n<ol>\n<li>管程的定义\n<ol>\n<li>代表共享资源的数据结构，以及由对该共享数据结构实施操作的一组过程所组成的资源管理程序，共同构成了一个操作系统的资源管理模块，我们称之为管程。</li>\n</ol>\n</li>\n<li>管程的组成\n<ol>\n<li>管程的名称</li>\n<li>局部于管程内部的共享数据设置初始值的语句</li>\n<li>对该数据结构进行操作的一组过程</li>\n<li>对局部于管程内部的共享数据设置初始值的语句</li>\n</ol>\n</li>\n<li>管程的特性\n<ol>\n<li>模块化：管程是一个基本程序单位，可以单独编译</li>\n<li>抽象数据类型：管程中不仅有数据，而且有对数据的操作</li>\n<li>信息掩蔽，管程中的数据结构只能被管程中的过程访问，这些过程也是在管程内部定义的，供管程外的进程调用，而管程中的数据结构以及过程的具体实现外部都不可见。</li>\n<li>管程和进程的不同主要体现在：\n<ul>\n<li>虽然二者都定义了数据结构，但进程定义的是私有数据结构 PCB，管程定义的是公共数据结构，如消息队列等;</li>\n<li>二者都存在对各自数据结构上的操作，但进程是由顺序程序执行有关的操作，而管程主要是进行同步操作和初始化操作;</li>\n<li>设置进程的目的在于实现系统的并发性，而管程的设置则是解决共享资源的互斥使用问题;</li>\n<li>进程通过调用管程中的过程对共享数据结构实行操作，该过程就如通常的子程序一样被调用，因而管程为被动工作方式，进程则为主动工作方式;</li>\n<li>进程之间能并发执行，而管程则不能与其调用者并发;</li>\n<li>进程具有动态性，由“创建”而诞生，由“撤销”而消亡，而管程则是操作系统中的一个资源管理模块，供进程调用。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>条件变量</li>\n</ol>\n<h3 id=\"经典进程的同步问题\"><a class=\"header-anchor\" href=\"#经典进程的同步问题\">¶</a>经典进程的同步问题</h3>\n<ol>\n<li>生产者—消费者问题\n<ol>\n<li>利用记录型信号量解决生产者—消费者问题</li>\n<li>利用 AND 信号量解决生产者—消费者问题</li>\n<li>利用管程解决生产者—消费者问题</li>\n</ol>\n</li>\n<li>哲学家进餐问题\n<ol>\n<li>利用记录型信号量解决哲学家进餐问题</li>\n<li>利用AND信号量解决哲学家进餐问题</li>\n</ol>\n</li>\n<li>读者—写者问题\n<ol>\n<li>利用记录型信号量解决</li>\n<li>利用信号量机制解决</li>\n</ol>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h3 id=\"进程同步的基本概念\"><a class=\"header-anchor\" href=\"#进程同步的基本概念\">¶</a>进程同步的基本概念</h3>\n<ol>\n<li>两种形式的制约关系\n<ol>\n<li>间接相互制约关系\n<ul>\n<li>同处于一个系统中的进程，通常都共享着某种系统资源，如共享 CPU、共享 I/O 设备等。</li>\n</ul>\n</li>\n<li>直接相互制约关系\n<ul>\n<li>种制约主要源于进程间的合作。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>临界资源\n<ol>\n<li>许多硬件资源如打印机、磁带机等，都属于临界资源(Critical Resouce)，诸进程间应采取互斥方式，实现对这种资源的共享。</li>\n</ol>\n</li>\n<li>临界区\n<ol>\n<li>不论是硬件临界资源，还是软件临界资源，多个进程必须互斥地对它进行访问。人们把在每个进程中访问临界资源的那段代码称为临界区(critical section)。</li>\n</ol>\n</li>\n<li>同步机制应遵循的恩规则\n<ol>\n<li>空闲让进。当无进程处于临界区时，表明临界资源处于空闲状态，应允许一个请求进入临界区的进程立即进入自己的临界区，以有效地利用临界资源。</li>\n<li>忙则等待。当已有进程进入临界区时，表明临界资源正在被访问，因而其它试图进入临界区的进程必须等待，以保证对临界资源的互斥访问。</li>\n<li>有限等待。对要求访问临界资源的进程，应保证在有限时间内能进入自己的临界区，以免陷入“死等”状态。</li>\n<li>让权等待。当进程不能进入自己的临界区时，应立即释放处理机，以免进程陷入“忙等”状态。</li>\n</ol>\n</li>\n</ol>","more":"<h3 id=\"信号量机制\"><a class=\"header-anchor\" href=\"#信号量机制\">¶</a>信号量机制</h3>\n<ol>\n<li>整型信号量</li>\n<li>记录型信号量</li>\n<li>AND型信号量</li>\n<li>信号量集</li>\n</ol>\n<h3 id=\"信号量的应用\"><a class=\"header-anchor\" href=\"#信号量的应用\">¶</a>信号量的应用</h3>\n<ol>\n<li>利用信号量实现进程互斥</li>\n<li>利用信号量实现前趋关系</li>\n</ol>\n<h3 id=\"管程机制\"><a class=\"header-anchor\" href=\"#管程机制\">¶</a>管程机制</h3>\n<ol>\n<li>管程的定义\n<ol>\n<li>代表共享资源的数据结构，以及由对该共享数据结构实施操作的一组过程所组成的资源管理程序，共同构成了一个操作系统的资源管理模块，我们称之为管程。</li>\n</ol>\n</li>\n<li>管程的组成\n<ol>\n<li>管程的名称</li>\n<li>局部于管程内部的共享数据设置初始值的语句</li>\n<li>对该数据结构进行操作的一组过程</li>\n<li>对局部于管程内部的共享数据设置初始值的语句</li>\n</ol>\n</li>\n<li>管程的特性\n<ol>\n<li>模块化：管程是一个基本程序单位，可以单独编译</li>\n<li>抽象数据类型：管程中不仅有数据，而且有对数据的操作</li>\n<li>信息掩蔽，管程中的数据结构只能被管程中的过程访问，这些过程也是在管程内部定义的，供管程外的进程调用，而管程中的数据结构以及过程的具体实现外部都不可见。</li>\n<li>管程和进程的不同主要体现在：\n<ul>\n<li>虽然二者都定义了数据结构，但进程定义的是私有数据结构 PCB，管程定义的是公共数据结构，如消息队列等;</li>\n<li>二者都存在对各自数据结构上的操作，但进程是由顺序程序执行有关的操作，而管程主要是进行同步操作和初始化操作;</li>\n<li>设置进程的目的在于实现系统的并发性，而管程的设置则是解决共享资源的互斥使用问题;</li>\n<li>进程通过调用管程中的过程对共享数据结构实行操作，该过程就如通常的子程序一样被调用，因而管程为被动工作方式，进程则为主动工作方式;</li>\n<li>进程之间能并发执行，而管程则不能与其调用者并发;</li>\n<li>进程具有动态性，由“创建”而诞生，由“撤销”而消亡，而管程则是操作系统中的一个资源管理模块，供进程调用。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>条件变量</li>\n</ol>\n<h3 id=\"经典进程的同步问题\"><a class=\"header-anchor\" href=\"#经典进程的同步问题\">¶</a>经典进程的同步问题</h3>\n<ol>\n<li>生产者—消费者问题\n<ol>\n<li>利用记录型信号量解决生产者—消费者问题</li>\n<li>利用 AND 信号量解决生产者—消费者问题</li>\n<li>利用管程解决生产者—消费者问题</li>\n</ol>\n</li>\n<li>哲学家进餐问题\n<ol>\n<li>利用记录型信号量解决哲学家进餐问题</li>\n<li>利用AND信号量解决哲学家进餐问题</li>\n</ol>\n</li>\n<li>读者—写者问题\n<ol>\n<li>利用记录型信号量解决</li>\n<li>利用信号量机制解决</li>\n</ol>\n</li>\n</ol>"},{"title":"进程控制","date":"2017-04-11T13:33:22.000Z","_content":"### 进程的创建\n1. 进程图\n    - 用一条由父进程指向子进程的有向边来描述它们之间的父子关系。\n2. 引起创建进程的事件\n    - 用户登录\n    - 作业调度\n    - 提供服务\n    - 应用请求\n3. 进程的创建\n    - 申请空白PCB\n    - 为新进程分配资源\n    - 初始化进程控制块\n        - 初始化标识信息：将系统分配的标识符和父进程标识符填入新PCB中。\n        - 初始化处理机状态信息：使程序计数器指向程序的入口地址，使栈指针指向栈顶。\n        - 初始化处理机控制信息：将进程的状态设置为就绪状态或禁止就绪状态，对于优先级，通常是将他设置为最低优先级。\n    - 将新进程插入就绪队列\n<!-- more -->\n\n### 进程的终止\n1. 引起进程终止的事件\n    1. 正常结束\n    2. 异常结束\n        - 越界错误：程序所访问的存储区已越出该进程的区域。\n        - 保护错：进程试图去访问一个不允许访问的资源或文件，或者以不适当的方式进行访问，例如，进程试图去写一个只读文件。\n        - 非法指令：程序试图去执行一条不存在的指令。出现该错误的原因，可能是程序错误地转移到数据区，把数据当成了指令。\n        - 特权指令错：用户进程试图去执行一条只允许 OS 执行的指令。\n        - 运行超时：进程的执行时间超过了指定的最大值。\n        - 等待超时：进程等待某事件的时间超过了规定的最大值。\n        - 算术运行错：进程试图去执行一个被禁止的运算，例如被 0 除。\n        - I/O故障：在I/O过程中发生了错误等。\n    3. 外界干预\n        - 操作员或操作系统干预：由于某种原因，例如，发生了死锁，由操作员或操作系统终止该进程。\n        - 父进程请求：由于父进程具有终止自己的任何子孙进程的权力，因而当父进程提出请求时，系统将终止该进程。\n        - 父进程终止：当父进程终止时，OS 也将它的所有子孙进程终止。\n2. 进程的终止过程\n    1. 根据被终止进程的标识符，从 PCB 集合中检索出该进程的 PCB，从中读出该进程的状态。\n    2. 若被终止进程正处于执行状态，应立即终止该进程的执行，并置调度标志为真，用于指示该进程被终止后应重新进行调度。\n    3. 若该进程还有子孙进程，还应将其所有子孙进程予以终止，以防它们成为不可控的进程。\n    4. 将被终止进程所拥有的全部资源，或者归还给其父进程，或者归还给系统。\n    5. 将被终止进程(PCB)从所在队列(或链表)中移出，等待其他程序来搜集信息。\n\n### 进程的阻塞与唤醒\n1. 引起进程阻塞和唤醒的事件\n    1. 请求系统服务：请求使用某资源，但是可能不能分配给请求进程，于是请求进程阻塞\n    2. 启动某种操作：当进程启动某种操作后，如果该进程必须在该操作完成之后才能继续执行，则必须先使该进程阻塞，以等待该操作完成。\n    3. 新数据尚未到达：对于相互合作的进程，如果其中一个进程需要先获得另一(合作)进程提供的数据后才能对数据进行处理，则只要其所需数据尚未到达，该进程只有(等待)阻塞。\n    4. 无新工作可做：系统往往设置一些具有某特定功能的系统进程，每当这种进程完成任务后，便把自己阻塞起来以等待新任务到来。\n2. 进程阻塞过程\n    1. 由于无法继续执行，于是进程便通过调用阻塞原语 block 把自己阻塞。可见，进程的阻塞是进程自身的一种主动行为。\n    2. 进入 block 过程后，由于此时该进程还处于执行状态，所以应先立即停止执行，把进程控制块中的现行状态由“执行”改为“阻塞”，并将 PCB 插入阻塞队列。\n    3. 如果系统中设置了因不同事件而阻塞的多个阻塞队列，则应将本进程插入到具有相同事件的阻塞(等待)队列。\n    4. 转调度程序进行重新调度，将处理机分配给另一就绪进程并进行切换，亦即，保留被阻塞进程的处理机状态(在 PCB 中)，再按新进程的 PCB 中的处理机状态设置 CPU 的环境。\n3. 进程唤醒过程\n    1. 当被阻塞进程所期待的事件出现时，如 I/O 完成或其所期待的数据已经到达，则由有关进程(比如用完并释放了该 I/O 设备的进程)调用唤醒原语 wakeup( )，将等待该事件的进程唤醒。唤醒原语执行的过程是:首先把被阻塞的进程从等待该事件的阻塞队列中移出，将其PCB 中的现行状态由阻塞改为就绪，然后再将该 PCB 插入到就绪队列中。\n\n### 进程的挂起与激活\n1. 进程的挂起\n    1. 用户进程请求将自己挂起，或父进程请求将自己的某个子进程挂起，系统将利用挂起原语 suspend( )将指定进程或处于阻塞状态的进程挂起。\n    2. 首先检查被挂起进程的状态，若处于活动就绪状态，便将其改为静止就绪。\n    3. 对于活动阻塞状态的进程，则将之改为静止阻塞。\n    4. 把该进程的 PCB 复制到某指定的内存区域。\n    5. 若被挂起的进程正在执行，则转向调度程序重新调度。\n2. 进程的激活过程\n    1. 父进程或用户进程请求激活指定进程，若该进程驻留在外存而内存中已有足够的空间时，则可将在外存上处于静止就绪状态的该进程换入内存。这时，系统将利用激活原语 active( )将指定进程激活。\n    2. 检查该进程的现行状态，若是静止就绪，便将之改为活动就绪。\n    3. 若为静止阻塞，便将之改为活动阻塞。\n    4. 假如采用的是抢占调度策略，则每当有新进程进入就绪队列时，应检查是否要进行重新调度，即由调度程序将被激活进程与当前进程进行优先级的比较，如果被激活进程的优先级更低，就不必重新调度;否则，立即剥夺当前进程的运行，把处理机分配给刚被激活的进程。","source":"_posts/计算机操作系统-进程控制.md","raw":"---\ntitle: 进程控制\ntags:\n  - 进程\ncategories:\n  - 操作系统\ndate: 2017-04-11 21:33:22\n---\n### 进程的创建\n1. 进程图\n    - 用一条由父进程指向子进程的有向边来描述它们之间的父子关系。\n2. 引起创建进程的事件\n    - 用户登录\n    - 作业调度\n    - 提供服务\n    - 应用请求\n3. 进程的创建\n    - 申请空白PCB\n    - 为新进程分配资源\n    - 初始化进程控制块\n        - 初始化标识信息：将系统分配的标识符和父进程标识符填入新PCB中。\n        - 初始化处理机状态信息：使程序计数器指向程序的入口地址，使栈指针指向栈顶。\n        - 初始化处理机控制信息：将进程的状态设置为就绪状态或禁止就绪状态，对于优先级，通常是将他设置为最低优先级。\n    - 将新进程插入就绪队列\n<!-- more -->\n\n### 进程的终止\n1. 引起进程终止的事件\n    1. 正常结束\n    2. 异常结束\n        - 越界错误：程序所访问的存储区已越出该进程的区域。\n        - 保护错：进程试图去访问一个不允许访问的资源或文件，或者以不适当的方式进行访问，例如，进程试图去写一个只读文件。\n        - 非法指令：程序试图去执行一条不存在的指令。出现该错误的原因，可能是程序错误地转移到数据区，把数据当成了指令。\n        - 特权指令错：用户进程试图去执行一条只允许 OS 执行的指令。\n        - 运行超时：进程的执行时间超过了指定的最大值。\n        - 等待超时：进程等待某事件的时间超过了规定的最大值。\n        - 算术运行错：进程试图去执行一个被禁止的运算，例如被 0 除。\n        - I/O故障：在I/O过程中发生了错误等。\n    3. 外界干预\n        - 操作员或操作系统干预：由于某种原因，例如，发生了死锁，由操作员或操作系统终止该进程。\n        - 父进程请求：由于父进程具有终止自己的任何子孙进程的权力，因而当父进程提出请求时，系统将终止该进程。\n        - 父进程终止：当父进程终止时，OS 也将它的所有子孙进程终止。\n2. 进程的终止过程\n    1. 根据被终止进程的标识符，从 PCB 集合中检索出该进程的 PCB，从中读出该进程的状态。\n    2. 若被终止进程正处于执行状态，应立即终止该进程的执行，并置调度标志为真，用于指示该进程被终止后应重新进行调度。\n    3. 若该进程还有子孙进程，还应将其所有子孙进程予以终止，以防它们成为不可控的进程。\n    4. 将被终止进程所拥有的全部资源，或者归还给其父进程，或者归还给系统。\n    5. 将被终止进程(PCB)从所在队列(或链表)中移出，等待其他程序来搜集信息。\n\n### 进程的阻塞与唤醒\n1. 引起进程阻塞和唤醒的事件\n    1. 请求系统服务：请求使用某资源，但是可能不能分配给请求进程，于是请求进程阻塞\n    2. 启动某种操作：当进程启动某种操作后，如果该进程必须在该操作完成之后才能继续执行，则必须先使该进程阻塞，以等待该操作完成。\n    3. 新数据尚未到达：对于相互合作的进程，如果其中一个进程需要先获得另一(合作)进程提供的数据后才能对数据进行处理，则只要其所需数据尚未到达，该进程只有(等待)阻塞。\n    4. 无新工作可做：系统往往设置一些具有某特定功能的系统进程，每当这种进程完成任务后，便把自己阻塞起来以等待新任务到来。\n2. 进程阻塞过程\n    1. 由于无法继续执行，于是进程便通过调用阻塞原语 block 把自己阻塞。可见，进程的阻塞是进程自身的一种主动行为。\n    2. 进入 block 过程后，由于此时该进程还处于执行状态，所以应先立即停止执行，把进程控制块中的现行状态由“执行”改为“阻塞”，并将 PCB 插入阻塞队列。\n    3. 如果系统中设置了因不同事件而阻塞的多个阻塞队列，则应将本进程插入到具有相同事件的阻塞(等待)队列。\n    4. 转调度程序进行重新调度，将处理机分配给另一就绪进程并进行切换，亦即，保留被阻塞进程的处理机状态(在 PCB 中)，再按新进程的 PCB 中的处理机状态设置 CPU 的环境。\n3. 进程唤醒过程\n    1. 当被阻塞进程所期待的事件出现时，如 I/O 完成或其所期待的数据已经到达，则由有关进程(比如用完并释放了该 I/O 设备的进程)调用唤醒原语 wakeup( )，将等待该事件的进程唤醒。唤醒原语执行的过程是:首先把被阻塞的进程从等待该事件的阻塞队列中移出，将其PCB 中的现行状态由阻塞改为就绪，然后再将该 PCB 插入到就绪队列中。\n\n### 进程的挂起与激活\n1. 进程的挂起\n    1. 用户进程请求将自己挂起，或父进程请求将自己的某个子进程挂起，系统将利用挂起原语 suspend( )将指定进程或处于阻塞状态的进程挂起。\n    2. 首先检查被挂起进程的状态，若处于活动就绪状态，便将其改为静止就绪。\n    3. 对于活动阻塞状态的进程，则将之改为静止阻塞。\n    4. 把该进程的 PCB 复制到某指定的内存区域。\n    5. 若被挂起的进程正在执行，则转向调度程序重新调度。\n2. 进程的激活过程\n    1. 父进程或用户进程请求激活指定进程，若该进程驻留在外存而内存中已有足够的空间时，则可将在外存上处于静止就绪状态的该进程换入内存。这时，系统将利用激活原语 active( )将指定进程激活。\n    2. 检查该进程的现行状态，若是静止就绪，便将之改为活动就绪。\n    3. 若为静止阻塞，便将之改为活动阻塞。\n    4. 假如采用的是抢占调度策略，则每当有新进程进入就绪队列时，应检查是否要进行重新调度，即由调度程序将被激活进程与当前进程进行优先级的比较，如果被激活进程的优先级更低，就不必重新调度;否则，立即剥夺当前进程的运行，把处理机分配给刚被激活的进程。","slug":"计算机操作系统-进程控制","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv54m002j58uguv4a7iud","content":"<h3 id=\"进程的创建\"><a class=\"header-anchor\" href=\"#进程的创建\">¶</a>进程的创建</h3>\n<ol>\n<li>进程图\n<ul>\n<li>用一条由父进程指向子进程的有向边来描述它们之间的父子关系。</li>\n</ul>\n</li>\n<li>引起创建进程的事件\n<ul>\n<li>用户登录</li>\n<li>作业调度</li>\n<li>提供服务</li>\n<li>应用请求</li>\n</ul>\n</li>\n<li>进程的创建\n<ul>\n<li>申请空白PCB</li>\n<li>为新进程分配资源</li>\n<li>初始化进程控制块\n<ul>\n<li>初始化标识信息：将系统分配的标识符和父进程标识符填入新PCB中。</li>\n<li>初始化处理机状态信息：使程序计数器指向程序的入口地址，使栈指针指向栈顶。</li>\n<li>初始化处理机控制信息：将进程的状态设置为就绪状态或禁止就绪状态，对于优先级，通常是将他设置为最低优先级。</li>\n</ul>\n</li>\n<li>将新进程插入就绪队列</li>\n</ul>\n</li>\n</ol>\n<a id=\"more\"></a>\n<h3 id=\"进程的终止\"><a class=\"header-anchor\" href=\"#进程的终止\">¶</a>进程的终止</h3>\n<ol>\n<li>引起进程终止的事件\n<ol>\n<li>正常结束</li>\n<li>异常结束\n<ul>\n<li>越界错误：程序所访问的存储区已越出该进程的区域。</li>\n<li>保护错：进程试图去访问一个不允许访问的资源或文件，或者以不适当的方式进行访问，例如，进程试图去写一个只读文件。</li>\n<li>非法指令：程序试图去执行一条不存在的指令。出现该错误的原因，可能是程序错误地转移到数据区，把数据当成了指令。</li>\n<li>特权指令错：用户进程试图去执行一条只允许 OS 执行的指令。</li>\n<li>运行超时：进程的执行时间超过了指定的最大值。</li>\n<li>等待超时：进程等待某事件的时间超过了规定的最大值。</li>\n<li>算术运行错：进程试图去执行一个被禁止的运算，例如被 0 除。</li>\n<li>I/O故障：在I/O过程中发生了错误等。</li>\n</ul>\n</li>\n<li>外界干预\n<ul>\n<li>操作员或操作系统干预：由于某种原因，例如，发生了死锁，由操作员或操作系统终止该进程。</li>\n<li>父进程请求：由于父进程具有终止自己的任何子孙进程的权力，因而当父进程提出请求时，系统将终止该进程。</li>\n<li>父进程终止：当父进程终止时，OS 也将它的所有子孙进程终止。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>进程的终止过程\n<ol>\n<li>根据被终止进程的标识符，从 PCB 集合中检索出该进程的 PCB，从中读出该进程的状态。</li>\n<li>若被终止进程正处于执行状态，应立即终止该进程的执行，并置调度标志为真，用于指示该进程被终止后应重新进行调度。</li>\n<li>若该进程还有子孙进程，还应将其所有子孙进程予以终止，以防它们成为不可控的进程。</li>\n<li>将被终止进程所拥有的全部资源，或者归还给其父进程，或者归还给系统。</li>\n<li>将被终止进程(PCB)从所在队列(或链表)中移出，等待其他程序来搜集信息。</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"进程的阻塞与唤醒\"><a class=\"header-anchor\" href=\"#进程的阻塞与唤醒\">¶</a>进程的阻塞与唤醒</h3>\n<ol>\n<li>引起进程阻塞和唤醒的事件\n<ol>\n<li>请求系统服务：请求使用某资源，但是可能不能分配给请求进程，于是请求进程阻塞</li>\n<li>启动某种操作：当进程启动某种操作后，如果该进程必须在该操作完成之后才能继续执行，则必须先使该进程阻塞，以等待该操作完成。</li>\n<li>新数据尚未到达：对于相互合作的进程，如果其中一个进程需要先获得另一(合作)进程提供的数据后才能对数据进行处理，则只要其所需数据尚未到达，该进程只有(等待)阻塞。</li>\n<li>无新工作可做：系统往往设置一些具有某特定功能的系统进程，每当这种进程完成任务后，便把自己阻塞起来以等待新任务到来。</li>\n</ol>\n</li>\n<li>进程阻塞过程\n<ol>\n<li>由于无法继续执行，于是进程便通过调用阻塞原语 block 把自己阻塞。可见，进程的阻塞是进程自身的一种主动行为。</li>\n<li>进入 block 过程后，由于此时该进程还处于执行状态，所以应先立即停止执行，把进程控制块中的现行状态由“执行”改为“阻塞”，并将 PCB 插入阻塞队列。</li>\n<li>如果系统中设置了因不同事件而阻塞的多个阻塞队列，则应将本进程插入到具有相同事件的阻塞(等待)队列。</li>\n<li>转调度程序进行重新调度，将处理机分配给另一就绪进程并进行切换，亦即，保留被阻塞进程的处理机状态(在 PCB 中)，再按新进程的 PCB 中的处理机状态设置 CPU 的环境。</li>\n</ol>\n</li>\n<li>进程唤醒过程\n<ol>\n<li>当被阻塞进程所期待的事件出现时，如 I/O 完成或其所期待的数据已经到达，则由有关进程(比如用完并释放了该 I/O 设备的进程)调用唤醒原语 wakeup( )，将等待该事件的进程唤醒。唤醒原语执行的过程是:首先把被阻塞的进程从等待该事件的阻塞队列中移出，将其PCB 中的现行状态由阻塞改为就绪，然后再将该 PCB 插入到就绪队列中。</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"进程的挂起与激活\"><a class=\"header-anchor\" href=\"#进程的挂起与激活\">¶</a>进程的挂起与激活</h3>\n<ol>\n<li>进程的挂起\n<ol>\n<li>用户进程请求将自己挂起，或父进程请求将自己的某个子进程挂起，系统将利用挂起原语 suspend( )将指定进程或处于阻塞状态的进程挂起。</li>\n<li>首先检查被挂起进程的状态，若处于活动就绪状态，便将其改为静止就绪。</li>\n<li>对于活动阻塞状态的进程，则将之改为静止阻塞。</li>\n<li>把该进程的 PCB 复制到某指定的内存区域。</li>\n<li>若被挂起的进程正在执行，则转向调度程序重新调度。</li>\n</ol>\n</li>\n<li>进程的激活过程\n<ol>\n<li>父进程或用户进程请求激活指定进程，若该进程驻留在外存而内存中已有足够的空间时，则可将在外存上处于静止就绪状态的该进程换入内存。这时，系统将利用激活原语 active( )将指定进程激活。</li>\n<li>检查该进程的现行状态，若是静止就绪，便将之改为活动就绪。</li>\n<li>若为静止阻塞，便将之改为活动阻塞。</li>\n<li>假如采用的是抢占调度策略，则每当有新进程进入就绪队列时，应检查是否要进行重新调度，即由调度程序将被激活进程与当前进程进行优先级的比较，如果被激活进程的优先级更低，就不必重新调度;否则，立即剥夺当前进程的运行，把处理机分配给刚被激活的进程。</li>\n</ol>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h3 id=\"进程的创建\"><a class=\"header-anchor\" href=\"#进程的创建\">¶</a>进程的创建</h3>\n<ol>\n<li>进程图\n<ul>\n<li>用一条由父进程指向子进程的有向边来描述它们之间的父子关系。</li>\n</ul>\n</li>\n<li>引起创建进程的事件\n<ul>\n<li>用户登录</li>\n<li>作业调度</li>\n<li>提供服务</li>\n<li>应用请求</li>\n</ul>\n</li>\n<li>进程的创建\n<ul>\n<li>申请空白PCB</li>\n<li>为新进程分配资源</li>\n<li>初始化进程控制块\n<ul>\n<li>初始化标识信息：将系统分配的标识符和父进程标识符填入新PCB中。</li>\n<li>初始化处理机状态信息：使程序计数器指向程序的入口地址，使栈指针指向栈顶。</li>\n<li>初始化处理机控制信息：将进程的状态设置为就绪状态或禁止就绪状态，对于优先级，通常是将他设置为最低优先级。</li>\n</ul>\n</li>\n<li>将新进程插入就绪队列</li>\n</ul>\n</li>\n</ol>","more":"<h3 id=\"进程的终止\"><a class=\"header-anchor\" href=\"#进程的终止\">¶</a>进程的终止</h3>\n<ol>\n<li>引起进程终止的事件\n<ol>\n<li>正常结束</li>\n<li>异常结束\n<ul>\n<li>越界错误：程序所访问的存储区已越出该进程的区域。</li>\n<li>保护错：进程试图去访问一个不允许访问的资源或文件，或者以不适当的方式进行访问，例如，进程试图去写一个只读文件。</li>\n<li>非法指令：程序试图去执行一条不存在的指令。出现该错误的原因，可能是程序错误地转移到数据区，把数据当成了指令。</li>\n<li>特权指令错：用户进程试图去执行一条只允许 OS 执行的指令。</li>\n<li>运行超时：进程的执行时间超过了指定的最大值。</li>\n<li>等待超时：进程等待某事件的时间超过了规定的最大值。</li>\n<li>算术运行错：进程试图去执行一个被禁止的运算，例如被 0 除。</li>\n<li>I/O故障：在I/O过程中发生了错误等。</li>\n</ul>\n</li>\n<li>外界干预\n<ul>\n<li>操作员或操作系统干预：由于某种原因，例如，发生了死锁，由操作员或操作系统终止该进程。</li>\n<li>父进程请求：由于父进程具有终止自己的任何子孙进程的权力，因而当父进程提出请求时，系统将终止该进程。</li>\n<li>父进程终止：当父进程终止时，OS 也将它的所有子孙进程终止。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>进程的终止过程\n<ol>\n<li>根据被终止进程的标识符，从 PCB 集合中检索出该进程的 PCB，从中读出该进程的状态。</li>\n<li>若被终止进程正处于执行状态，应立即终止该进程的执行，并置调度标志为真，用于指示该进程被终止后应重新进行调度。</li>\n<li>若该进程还有子孙进程，还应将其所有子孙进程予以终止，以防它们成为不可控的进程。</li>\n<li>将被终止进程所拥有的全部资源，或者归还给其父进程，或者归还给系统。</li>\n<li>将被终止进程(PCB)从所在队列(或链表)中移出，等待其他程序来搜集信息。</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"进程的阻塞与唤醒\"><a class=\"header-anchor\" href=\"#进程的阻塞与唤醒\">¶</a>进程的阻塞与唤醒</h3>\n<ol>\n<li>引起进程阻塞和唤醒的事件\n<ol>\n<li>请求系统服务：请求使用某资源，但是可能不能分配给请求进程，于是请求进程阻塞</li>\n<li>启动某种操作：当进程启动某种操作后，如果该进程必须在该操作完成之后才能继续执行，则必须先使该进程阻塞，以等待该操作完成。</li>\n<li>新数据尚未到达：对于相互合作的进程，如果其中一个进程需要先获得另一(合作)进程提供的数据后才能对数据进行处理，则只要其所需数据尚未到达，该进程只有(等待)阻塞。</li>\n<li>无新工作可做：系统往往设置一些具有某特定功能的系统进程，每当这种进程完成任务后，便把自己阻塞起来以等待新任务到来。</li>\n</ol>\n</li>\n<li>进程阻塞过程\n<ol>\n<li>由于无法继续执行，于是进程便通过调用阻塞原语 block 把自己阻塞。可见，进程的阻塞是进程自身的一种主动行为。</li>\n<li>进入 block 过程后，由于此时该进程还处于执行状态，所以应先立即停止执行，把进程控制块中的现行状态由“执行”改为“阻塞”，并将 PCB 插入阻塞队列。</li>\n<li>如果系统中设置了因不同事件而阻塞的多个阻塞队列，则应将本进程插入到具有相同事件的阻塞(等待)队列。</li>\n<li>转调度程序进行重新调度，将处理机分配给另一就绪进程并进行切换，亦即，保留被阻塞进程的处理机状态(在 PCB 中)，再按新进程的 PCB 中的处理机状态设置 CPU 的环境。</li>\n</ol>\n</li>\n<li>进程唤醒过程\n<ol>\n<li>当被阻塞进程所期待的事件出现时，如 I/O 完成或其所期待的数据已经到达，则由有关进程(比如用完并释放了该 I/O 设备的进程)调用唤醒原语 wakeup( )，将等待该事件的进程唤醒。唤醒原语执行的过程是:首先把被阻塞的进程从等待该事件的阻塞队列中移出，将其PCB 中的现行状态由阻塞改为就绪，然后再将该 PCB 插入到就绪队列中。</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"进程的挂起与激活\"><a class=\"header-anchor\" href=\"#进程的挂起与激活\">¶</a>进程的挂起与激活</h3>\n<ol>\n<li>进程的挂起\n<ol>\n<li>用户进程请求将自己挂起，或父进程请求将自己的某个子进程挂起，系统将利用挂起原语 suspend( )将指定进程或处于阻塞状态的进程挂起。</li>\n<li>首先检查被挂起进程的状态，若处于活动就绪状态，便将其改为静止就绪。</li>\n<li>对于活动阻塞状态的进程，则将之改为静止阻塞。</li>\n<li>把该进程的 PCB 复制到某指定的内存区域。</li>\n<li>若被挂起的进程正在执行，则转向调度程序重新调度。</li>\n</ol>\n</li>\n<li>进程的激活过程\n<ol>\n<li>父进程或用户进程请求激活指定进程，若该进程驻留在外存而内存中已有足够的空间时，则可将在外存上处于静止就绪状态的该进程换入内存。这时，系统将利用激活原语 active( )将指定进程激活。</li>\n<li>检查该进程的现行状态，若是静止就绪，便将之改为活动就绪。</li>\n<li>若为静止阻塞，便将之改为活动阻塞。</li>\n<li>假如采用的是抢占调度策略，则每当有新进程进入就绪队列时，应检查是否要进行重新调度，即由调度程序将被激活进程与当前进程进行优先级的比较，如果被激活进程的优先级更低，就不必重新调度;否则，立即剥夺当前进程的运行，把处理机分配给刚被激活的进程。</li>\n</ol>\n</li>\n</ol>"},{"title":"进程的基本概念","date":"2017-04-10T07:21:22.000Z","_content":"### 程序的顺序执行及其特征\n1. 概念：把一个应用程序分成若干个程序段，在各程序段之间，必须按照某种先后次序顺序执行，仅当前一操作(程序段)执行完后，才能执行后继操作。\n2. 顺序性：处理机的操作严格按照程序所规定的顺序执行，即每一操作必须在上一个操作结束之后开始。\n3. 封闭性：程序是在封闭的环境下执行的，即程序运行时独占全机资源，资源的状态（除初始状态外）只有本程序才能改变它。程序一旦开始执行，其执行结果不受外界因素影响。\n4. 可再现性：只要程序执行时的环境和初始条件相同，当程序重复执行时，不论它是从头到尾不停顿地执行，还是“停停走走”地执行，都将获得相同的结果。\n\n<!-- more -->\n\n### 前趋图\n1. 在前趋图中，把没有前趋的结点称为初始结点(Initial Node)，把没有后继的结点称为终止结点(Final Node)。此外，每个结点还具有一个重量(Weight)，用于表示该结点所含有的程序量或结点的执行时间。\n2. 前趋图中必须不存在循环。\n很多语言都采用的这种方式来判断一个对象是否已经\"死去\"，比如Object-C，给对象添加一个引用计数器，每当有一个地方引用它时，计数器就加1，当引用失效时，计数器就减1；任何时刻计数器为0的对象就是不可能再被使用的。\n\n### 程序的并发执行及其特征\n1. 间断性：程序在并发执行时，由于它们共享系统资源，以及为完成同一项任务而相互合作，致使在这些并发执行的程序之间，形成了相互制约的关系。互制约将导致并发程序具有“执行—暂停—执行”这种间断性的活动规律。\n2. 失去封闭性：程序在并发执行时，是多个程序共享系统中的各种资源，因而这些资源的状态将由多个程序来改变，致使程序的运行失去了封闭性。\n3. 不可再现性：程序在并发执行时，由于失去了封闭性，也将导致其再失去可再现性。\n\n### 进程的特征和状态\n1. 进程的特征和定义\n    1. 结构特征\n        - PCB:通常的程序是不能并发执行的。为使程序(含数据)能独立运行，应为之配置一进程控制块，即 PCB(Process Control Block);\n        - 由程序段、相关的数据段和 PCB 三部分便构成了进程实体。\n    2. 动态性\n        - 进程的实质是进程实体的一次执行过程，因此，动态性是进程的最基本的特征。\n    3. 并发性\n        - 多个进程实体同存于内存中，且能在一段时间内同时运行。而程序(没有建立 PCB)是不能并发执行的。\n    4. 独立性\n        - 进程实体是一个能独立运行、独立分配资源和独立接受调度的基本单位。\n    5. 异步性\n        - 进程按各自独立的、 不可预知的速度向前推进，或说进程实体按异步方式运行。\n    6. 进程定义\n        - 进程是进程实体的运行过程，是系统进行资源分配和调度的一个独立单位。\n2. 进程的三种基本状态\n    1. 就绪状态\n        - 当进程已分配到除 CPU 以外的所有必要资源后，只要再获得 CPU，便可立即执行。\n    2. 执行状态\n        - 进程已获得 CPU，其程序正在执行。\n    3. 阻塞状态\n        - 在执行的进程由于发生某事件而暂时无法继续执行时，便放弃处理机而处于暂停状态，亦即进程的执行受到阻塞，把这种暂停状态称为阻塞状态，有时也称为等待状态或封锁状态。\n3. 挂起状态\n    1. 引入挂起状态的原因\n        - 终端用户的请求\n        - 父进程请求\n        - 负荷调节的需要\n        - 操作系统的需要\n    2. 进程状态的转换\n        - 活动就绪→静止就绪\n        - 活动阻塞→静止阻塞\n        - 静止就绪→活动就绪\n        - 静止阻塞→活动阻塞\n4. 创建状态和终止状态\n    1. 创建状态：\n        * 首先，为一个新进程创建 PCB，并填写必要的管理信息;\n        * 其次，把该进程转入就绪状态并插入就绪队列之中。\n    2. 终止状态\n        * 首先等待操作系统进行善后处理，然后将其 PCB 清零，并将 PCB 空间返还系统。\n        * 当一个进程到达了自然结束点，或是出现了无法克服的错误，或是被操作系统所终结，或是被其他有终止权的进程所终结，它将进入终止状态。\n5. 进程控制块\n    1. 进程控制块的作用\n        - PCB 中记录了操作系统所需的、用于描述进程的当前情况以及控制进程运行的全部信息。\n        - 使一个在多道程序环境下不能独立运行的程序(含数据)，成为一个能独立运行的基本单位，一个能与其它进程并发执行的进程。\n        - 在调度到某进程后，要根据其 PCB 中所保存的处理机状态信息，设置该进程恢复运行的现场，并根据其 PCB 中的程序和数据的内存始址，找到其程序和数据。\n        - 进程在执行过程中，当需要和与之合作的进程实现同步、通信或访问文件时，也都需要访问 PCB。\n        - 当进程由于某种原因而暂停执行时，又须将其断点的处理机环境保存在PCB 中。\n    2. 进程控制块中的信息\n        - 进程标识符：内部标识符和外部标识符\n        2. 处理机状态\n            - 处理机状态信息主要是由处理机的各种寄存器中的内容组成的。处理机在运行时，许多信息都放在寄存器中。当处理机被中断时，所有这些信息都必须保存在 PCB 中，以便在该进程重新执行时，能从断点继续执行。寄存器包含：通用寄存器，指令计数器，程序状态字PSW，用户栈指针。\n        3. 进程调度信息\n            - 进程状态，指明进程的当前状态，作为进程调度和对换时的依据\n            - 进程优先级，用于描述进程使用处理机的优先级别的一个整数，优先级高的进程应优先获得处理机\n            - 进程调度所需的其它信息，它们与所采用的进程调度算法有关，比如，进程已等待 CPU 的时间总和、进程已执行的时间总和等\n            - 事件，指进程由执行状态转变为阻塞状态所等待发生的事件，即阻塞原因\n        4. 进程控制信息\n            - 程序和数据的地址，指进程的程序和数据所在的内存或外存地(首)址，以便再调度到该进程执行时，能从 PCB 中找到其程序和数据\n            - 进程同步和通信机制，指实现进程同步和进程通信时必需的机制，如消息队列指针、信号量等，它们可能全部或部分地放在 PCB 中\n            - 资源清单，即一张列出了除 CPU 以外的、进程所需的全部资源及已经分配到该进程的资源的清单\n            - 链接指针，它给出了本进程(PCB)所在队列中的下一个进程的 PCB 的首地址\n    3. 进程控制块的组织方式\n        * 在一个系统中，通常可拥有数十个、 数百个乃至数千个 PCB。为了能对它们加以有效的管理，应该用适当的方式将这些 PCB 组织起来\n            - 链接方式：这是把具有同一状态的 PCB，用其中的链接字链接成一个队列\n            - 索引方式：系统根据所有进程的状态建立几张索引表。例如，就绪索引表、阻塞索引表等，并把各索引表在内存的首地址记录在内存的一些专用单元中。","source":"_posts/计算机操作系统-进程的基本概念.md","raw":"---\ntitle: 进程的基本概念\ntags:\n  - 进程\ncategories:\n  - 操作系统\ndate: 2017-04-10 15:21:22\n---\n### 程序的顺序执行及其特征\n1. 概念：把一个应用程序分成若干个程序段，在各程序段之间，必须按照某种先后次序顺序执行，仅当前一操作(程序段)执行完后，才能执行后继操作。\n2. 顺序性：处理机的操作严格按照程序所规定的顺序执行，即每一操作必须在上一个操作结束之后开始。\n3. 封闭性：程序是在封闭的环境下执行的，即程序运行时独占全机资源，资源的状态（除初始状态外）只有本程序才能改变它。程序一旦开始执行，其执行结果不受外界因素影响。\n4. 可再现性：只要程序执行时的环境和初始条件相同，当程序重复执行时，不论它是从头到尾不停顿地执行，还是“停停走走”地执行，都将获得相同的结果。\n\n<!-- more -->\n\n### 前趋图\n1. 在前趋图中，把没有前趋的结点称为初始结点(Initial Node)，把没有后继的结点称为终止结点(Final Node)。此外，每个结点还具有一个重量(Weight)，用于表示该结点所含有的程序量或结点的执行时间。\n2. 前趋图中必须不存在循环。\n很多语言都采用的这种方式来判断一个对象是否已经\"死去\"，比如Object-C，给对象添加一个引用计数器，每当有一个地方引用它时，计数器就加1，当引用失效时，计数器就减1；任何时刻计数器为0的对象就是不可能再被使用的。\n\n### 程序的并发执行及其特征\n1. 间断性：程序在并发执行时，由于它们共享系统资源，以及为完成同一项任务而相互合作，致使在这些并发执行的程序之间，形成了相互制约的关系。互制约将导致并发程序具有“执行—暂停—执行”这种间断性的活动规律。\n2. 失去封闭性：程序在并发执行时，是多个程序共享系统中的各种资源，因而这些资源的状态将由多个程序来改变，致使程序的运行失去了封闭性。\n3. 不可再现性：程序在并发执行时，由于失去了封闭性，也将导致其再失去可再现性。\n\n### 进程的特征和状态\n1. 进程的特征和定义\n    1. 结构特征\n        - PCB:通常的程序是不能并发执行的。为使程序(含数据)能独立运行，应为之配置一进程控制块，即 PCB(Process Control Block);\n        - 由程序段、相关的数据段和 PCB 三部分便构成了进程实体。\n    2. 动态性\n        - 进程的实质是进程实体的一次执行过程，因此，动态性是进程的最基本的特征。\n    3. 并发性\n        - 多个进程实体同存于内存中，且能在一段时间内同时运行。而程序(没有建立 PCB)是不能并发执行的。\n    4. 独立性\n        - 进程实体是一个能独立运行、独立分配资源和独立接受调度的基本单位。\n    5. 异步性\n        - 进程按各自独立的、 不可预知的速度向前推进，或说进程实体按异步方式运行。\n    6. 进程定义\n        - 进程是进程实体的运行过程，是系统进行资源分配和调度的一个独立单位。\n2. 进程的三种基本状态\n    1. 就绪状态\n        - 当进程已分配到除 CPU 以外的所有必要资源后，只要再获得 CPU，便可立即执行。\n    2. 执行状态\n        - 进程已获得 CPU，其程序正在执行。\n    3. 阻塞状态\n        - 在执行的进程由于发生某事件而暂时无法继续执行时，便放弃处理机而处于暂停状态，亦即进程的执行受到阻塞，把这种暂停状态称为阻塞状态，有时也称为等待状态或封锁状态。\n3. 挂起状态\n    1. 引入挂起状态的原因\n        - 终端用户的请求\n        - 父进程请求\n        - 负荷调节的需要\n        - 操作系统的需要\n    2. 进程状态的转换\n        - 活动就绪→静止就绪\n        - 活动阻塞→静止阻塞\n        - 静止就绪→活动就绪\n        - 静止阻塞→活动阻塞\n4. 创建状态和终止状态\n    1. 创建状态：\n        * 首先，为一个新进程创建 PCB，并填写必要的管理信息;\n        * 其次，把该进程转入就绪状态并插入就绪队列之中。\n    2. 终止状态\n        * 首先等待操作系统进行善后处理，然后将其 PCB 清零，并将 PCB 空间返还系统。\n        * 当一个进程到达了自然结束点，或是出现了无法克服的错误，或是被操作系统所终结，或是被其他有终止权的进程所终结，它将进入终止状态。\n5. 进程控制块\n    1. 进程控制块的作用\n        - PCB 中记录了操作系统所需的、用于描述进程的当前情况以及控制进程运行的全部信息。\n        - 使一个在多道程序环境下不能独立运行的程序(含数据)，成为一个能独立运行的基本单位，一个能与其它进程并发执行的进程。\n        - 在调度到某进程后，要根据其 PCB 中所保存的处理机状态信息，设置该进程恢复运行的现场，并根据其 PCB 中的程序和数据的内存始址，找到其程序和数据。\n        - 进程在执行过程中，当需要和与之合作的进程实现同步、通信或访问文件时，也都需要访问 PCB。\n        - 当进程由于某种原因而暂停执行时，又须将其断点的处理机环境保存在PCB 中。\n    2. 进程控制块中的信息\n        - 进程标识符：内部标识符和外部标识符\n        2. 处理机状态\n            - 处理机状态信息主要是由处理机的各种寄存器中的内容组成的。处理机在运行时，许多信息都放在寄存器中。当处理机被中断时，所有这些信息都必须保存在 PCB 中，以便在该进程重新执行时，能从断点继续执行。寄存器包含：通用寄存器，指令计数器，程序状态字PSW，用户栈指针。\n        3. 进程调度信息\n            - 进程状态，指明进程的当前状态，作为进程调度和对换时的依据\n            - 进程优先级，用于描述进程使用处理机的优先级别的一个整数，优先级高的进程应优先获得处理机\n            - 进程调度所需的其它信息，它们与所采用的进程调度算法有关，比如，进程已等待 CPU 的时间总和、进程已执行的时间总和等\n            - 事件，指进程由执行状态转变为阻塞状态所等待发生的事件，即阻塞原因\n        4. 进程控制信息\n            - 程序和数据的地址，指进程的程序和数据所在的内存或外存地(首)址，以便再调度到该进程执行时，能从 PCB 中找到其程序和数据\n            - 进程同步和通信机制，指实现进程同步和进程通信时必需的机制，如消息队列指针、信号量等，它们可能全部或部分地放在 PCB 中\n            - 资源清单，即一张列出了除 CPU 以外的、进程所需的全部资源及已经分配到该进程的资源的清单\n            - 链接指针，它给出了本进程(PCB)所在队列中的下一个进程的 PCB 的首地址\n    3. 进程控制块的组织方式\n        * 在一个系统中，通常可拥有数十个、 数百个乃至数千个 PCB。为了能对它们加以有效的管理，应该用适当的方式将这些 PCB 组织起来\n            - 链接方式：这是把具有同一状态的 PCB，用其中的链接字链接成一个队列\n            - 索引方式：系统根据所有进程的状态建立几张索引表。例如，就绪索引表、阻塞索引表等，并把各索引表在内存的首地址记录在内存的一些专用单元中。","slug":"计算机操作系统-进程的基本概念","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv58j006058ugquuycp36","content":"<h3 id=\"程序的顺序执行及其特征\"><a class=\"header-anchor\" href=\"#程序的顺序执行及其特征\">¶</a>程序的顺序执行及其特征</h3>\n<ol>\n<li>概念：把一个应用程序分成若干个程序段，在各程序段之间，必须按照某种先后次序顺序执行，仅当前一操作(程序段)执行完后，才能执行后继操作。</li>\n<li>顺序性：处理机的操作严格按照程序所规定的顺序执行，即每一操作必须在上一个操作结束之后开始。</li>\n<li>封闭性：程序是在封闭的环境下执行的，即程序运行时独占全机资源，资源的状态（除初始状态外）只有本程序才能改变它。程序一旦开始执行，其执行结果不受外界因素影响。</li>\n<li>可再现性：只要程序执行时的环境和初始条件相同，当程序重复执行时，不论它是从头到尾不停顿地执行，还是“停停走走”地执行，都将获得相同的结果。</li>\n</ol>\n<a id=\"more\"></a>\n<h3 id=\"前趋图\"><a class=\"header-anchor\" href=\"#前趋图\">¶</a>前趋图</h3>\n<ol>\n<li>在前趋图中，把没有前趋的结点称为初始结点(Initial Node)，把没有后继的结点称为终止结点(Final Node)。此外，每个结点还具有一个重量(Weight)，用于表示该结点所含有的程序量或结点的执行时间。</li>\n<li>前趋图中必须不存在循环。\n很多语言都采用的这种方式来判断一个对象是否已经&quot;死去&quot;，比如Object-C，给对象添加一个引用计数器，每当有一个地方引用它时，计数器就加1，当引用失效时，计数器就减1；任何时刻计数器为0的对象就是不可能再被使用的。</li>\n</ol>\n<h3 id=\"程序的并发执行及其特征\"><a class=\"header-anchor\" href=\"#程序的并发执行及其特征\">¶</a>程序的并发执行及其特征</h3>\n<ol>\n<li>间断性：程序在并发执行时，由于它们共享系统资源，以及为完成同一项任务而相互合作，致使在这些并发执行的程序之间，形成了相互制约的关系。互制约将导致并发程序具有“执行—暂停—执行”这种间断性的活动规律。</li>\n<li>失去封闭性：程序在并发执行时，是多个程序共享系统中的各种资源，因而这些资源的状态将由多个程序来改变，致使程序的运行失去了封闭性。</li>\n<li>不可再现性：程序在并发执行时，由于失去了封闭性，也将导致其再失去可再现性。</li>\n</ol>\n<h3 id=\"进程的特征和状态\"><a class=\"header-anchor\" href=\"#进程的特征和状态\">¶</a>进程的特征和状态</h3>\n<ol>\n<li>进程的特征和定义\n<ol>\n<li>结构特征\n<ul>\n<li>PCB:通常的程序是不能并发执行的。为使程序(含数据)能独立运行，应为之配置一进程控制块，即 PCB(Process Control Block);</li>\n<li>由程序段、相关的数据段和 PCB 三部分便构成了进程实体。</li>\n</ul>\n</li>\n<li>动态性\n<ul>\n<li>进程的实质是进程实体的一次执行过程，因此，动态性是进程的最基本的特征。</li>\n</ul>\n</li>\n<li>并发性\n<ul>\n<li>多个进程实体同存于内存中，且能在一段时间内同时运行。而程序(没有建立 PCB)是不能并发执行的。</li>\n</ul>\n</li>\n<li>独立性\n<ul>\n<li>进程实体是一个能独立运行、独立分配资源和独立接受调度的基本单位。</li>\n</ul>\n</li>\n<li>异步性\n<ul>\n<li>进程按各自独立的、 不可预知的速度向前推进，或说进程实体按异步方式运行。</li>\n</ul>\n</li>\n<li>进程定义\n<ul>\n<li>进程是进程实体的运行过程，是系统进行资源分配和调度的一个独立单位。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>进程的三种基本状态\n<ol>\n<li>就绪状态\n<ul>\n<li>当进程已分配到除 CPU 以外的所有必要资源后，只要再获得 CPU，便可立即执行。</li>\n</ul>\n</li>\n<li>执行状态\n<ul>\n<li>进程已获得 CPU，其程序正在执行。</li>\n</ul>\n</li>\n<li>阻塞状态\n<ul>\n<li>在执行的进程由于发生某事件而暂时无法继续执行时，便放弃处理机而处于暂停状态，亦即进程的执行受到阻塞，把这种暂停状态称为阻塞状态，有时也称为等待状态或封锁状态。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>挂起状态\n<ol>\n<li>引入挂起状态的原因\n<ul>\n<li>终端用户的请求</li>\n<li>父进程请求</li>\n<li>负荷调节的需要</li>\n<li>操作系统的需要</li>\n</ul>\n</li>\n<li>进程状态的转换\n<ul>\n<li>活动就绪→静止就绪</li>\n<li>活动阻塞→静止阻塞</li>\n<li>静止就绪→活动就绪</li>\n<li>静止阻塞→活动阻塞</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>创建状态和终止状态\n<ol>\n<li>创建状态：\n<ul>\n<li>首先，为一个新进程创建 PCB，并填写必要的管理信息;</li>\n<li>其次，把该进程转入就绪状态并插入就绪队列之中。</li>\n</ul>\n</li>\n<li>终止状态\n<ul>\n<li>首先等待操作系统进行善后处理，然后将其 PCB 清零，并将 PCB 空间返还系统。</li>\n<li>当一个进程到达了自然结束点，或是出现了无法克服的错误，或是被操作系统所终结，或是被其他有终止权的进程所终结，它将进入终止状态。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>进程控制块\n<ol>\n<li>进程控制块的作用\n<ul>\n<li>PCB 中记录了操作系统所需的、用于描述进程的当前情况以及控制进程运行的全部信息。</li>\n<li>使一个在多道程序环境下不能独立运行的程序(含数据)，成为一个能独立运行的基本单位，一个能与其它进程并发执行的进程。</li>\n<li>在调度到某进程后，要根据其 PCB 中所保存的处理机状态信息，设置该进程恢复运行的现场，并根据其 PCB 中的程序和数据的内存始址，找到其程序和数据。</li>\n<li>进程在执行过程中，当需要和与之合作的进程实现同步、通信或访问文件时，也都需要访问 PCB。</li>\n<li>当进程由于某种原因而暂停执行时，又须将其断点的处理机环境保存在PCB 中。</li>\n</ul>\n</li>\n<li>进程控制块中的信息\n<ul>\n<li>进程标识符：内部标识符和外部标识符</li>\n</ul>\n<ol start=\"2\">\n<li>处理机状态\n<ul>\n<li>处理机状态信息主要是由处理机的各种寄存器中的内容组成的。处理机在运行时，许多信息都放在寄存器中。当处理机被中断时，所有这些信息都必须保存在 PCB 中，以便在该进程重新执行时，能从断点继续执行。寄存器包含：通用寄存器，指令计数器，程序状态字PSW，用户栈指针。</li>\n</ul>\n</li>\n<li>进程调度信息\n<ul>\n<li>进程状态，指明进程的当前状态，作为进程调度和对换时的依据</li>\n<li>进程优先级，用于描述进程使用处理机的优先级别的一个整数，优先级高的进程应优先获得处理机</li>\n<li>进程调度所需的其它信息，它们与所采用的进程调度算法有关，比如，进程已等待 CPU 的时间总和、进程已执行的时间总和等</li>\n<li>事件，指进程由执行状态转变为阻塞状态所等待发生的事件，即阻塞原因</li>\n</ul>\n</li>\n<li>进程控制信息\n<ul>\n<li>程序和数据的地址，指进程的程序和数据所在的内存或外存地(首)址，以便再调度到该进程执行时，能从 PCB 中找到其程序和数据</li>\n<li>进程同步和通信机制，指实现进程同步和进程通信时必需的机制，如消息队列指针、信号量等，它们可能全部或部分地放在 PCB 中</li>\n<li>资源清单，即一张列出了除 CPU 以外的、进程所需的全部资源及已经分配到该进程的资源的清单</li>\n<li>链接指针，它给出了本进程(PCB)所在队列中的下一个进程的 PCB 的首地址</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>进程控制块的组织方式\n<ul>\n<li>在一个系统中，通常可拥有数十个、 数百个乃至数千个 PCB。为了能对它们加以有效的管理，应该用适当的方式将这些 PCB 组织起来\n<ul>\n<li>链接方式：这是把具有同一状态的 PCB，用其中的链接字链接成一个队列</li>\n<li>索引方式：系统根据所有进程的状态建立几张索引表。例如，就绪索引表、阻塞索引表等，并把各索引表在内存的首地址记录在内存的一些专用单元中。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h3 id=\"程序的顺序执行及其特征\"><a class=\"header-anchor\" href=\"#程序的顺序执行及其特征\">¶</a>程序的顺序执行及其特征</h3>\n<ol>\n<li>概念：把一个应用程序分成若干个程序段，在各程序段之间，必须按照某种先后次序顺序执行，仅当前一操作(程序段)执行完后，才能执行后继操作。</li>\n<li>顺序性：处理机的操作严格按照程序所规定的顺序执行，即每一操作必须在上一个操作结束之后开始。</li>\n<li>封闭性：程序是在封闭的环境下执行的，即程序运行时独占全机资源，资源的状态（除初始状态外）只有本程序才能改变它。程序一旦开始执行，其执行结果不受外界因素影响。</li>\n<li>可再现性：只要程序执行时的环境和初始条件相同，当程序重复执行时，不论它是从头到尾不停顿地执行，还是“停停走走”地执行，都将获得相同的结果。</li>\n</ol>","more":"<h3 id=\"前趋图\"><a class=\"header-anchor\" href=\"#前趋图\">¶</a>前趋图</h3>\n<ol>\n<li>在前趋图中，把没有前趋的结点称为初始结点(Initial Node)，把没有后继的结点称为终止结点(Final Node)。此外，每个结点还具有一个重量(Weight)，用于表示该结点所含有的程序量或结点的执行时间。</li>\n<li>前趋图中必须不存在循环。\n很多语言都采用的这种方式来判断一个对象是否已经&quot;死去&quot;，比如Object-C，给对象添加一个引用计数器，每当有一个地方引用它时，计数器就加1，当引用失效时，计数器就减1；任何时刻计数器为0的对象就是不可能再被使用的。</li>\n</ol>\n<h3 id=\"程序的并发执行及其特征\"><a class=\"header-anchor\" href=\"#程序的并发执行及其特征\">¶</a>程序的并发执行及其特征</h3>\n<ol>\n<li>间断性：程序在并发执行时，由于它们共享系统资源，以及为完成同一项任务而相互合作，致使在这些并发执行的程序之间，形成了相互制约的关系。互制约将导致并发程序具有“执行—暂停—执行”这种间断性的活动规律。</li>\n<li>失去封闭性：程序在并发执行时，是多个程序共享系统中的各种资源，因而这些资源的状态将由多个程序来改变，致使程序的运行失去了封闭性。</li>\n<li>不可再现性：程序在并发执行时，由于失去了封闭性，也将导致其再失去可再现性。</li>\n</ol>\n<h3 id=\"进程的特征和状态\"><a class=\"header-anchor\" href=\"#进程的特征和状态\">¶</a>进程的特征和状态</h3>\n<ol>\n<li>进程的特征和定义\n<ol>\n<li>结构特征\n<ul>\n<li>PCB:通常的程序是不能并发执行的。为使程序(含数据)能独立运行，应为之配置一进程控制块，即 PCB(Process Control Block);</li>\n<li>由程序段、相关的数据段和 PCB 三部分便构成了进程实体。</li>\n</ul>\n</li>\n<li>动态性\n<ul>\n<li>进程的实质是进程实体的一次执行过程，因此，动态性是进程的最基本的特征。</li>\n</ul>\n</li>\n<li>并发性\n<ul>\n<li>多个进程实体同存于内存中，且能在一段时间内同时运行。而程序(没有建立 PCB)是不能并发执行的。</li>\n</ul>\n</li>\n<li>独立性\n<ul>\n<li>进程实体是一个能独立运行、独立分配资源和独立接受调度的基本单位。</li>\n</ul>\n</li>\n<li>异步性\n<ul>\n<li>进程按各自独立的、 不可预知的速度向前推进，或说进程实体按异步方式运行。</li>\n</ul>\n</li>\n<li>进程定义\n<ul>\n<li>进程是进程实体的运行过程，是系统进行资源分配和调度的一个独立单位。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>进程的三种基本状态\n<ol>\n<li>就绪状态\n<ul>\n<li>当进程已分配到除 CPU 以外的所有必要资源后，只要再获得 CPU，便可立即执行。</li>\n</ul>\n</li>\n<li>执行状态\n<ul>\n<li>进程已获得 CPU，其程序正在执行。</li>\n</ul>\n</li>\n<li>阻塞状态\n<ul>\n<li>在执行的进程由于发生某事件而暂时无法继续执行时，便放弃处理机而处于暂停状态，亦即进程的执行受到阻塞，把这种暂停状态称为阻塞状态，有时也称为等待状态或封锁状态。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>挂起状态\n<ol>\n<li>引入挂起状态的原因\n<ul>\n<li>终端用户的请求</li>\n<li>父进程请求</li>\n<li>负荷调节的需要</li>\n<li>操作系统的需要</li>\n</ul>\n</li>\n<li>进程状态的转换\n<ul>\n<li>活动就绪→静止就绪</li>\n<li>活动阻塞→静止阻塞</li>\n<li>静止就绪→活动就绪</li>\n<li>静止阻塞→活动阻塞</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>创建状态和终止状态\n<ol>\n<li>创建状态：\n<ul>\n<li>首先，为一个新进程创建 PCB，并填写必要的管理信息;</li>\n<li>其次，把该进程转入就绪状态并插入就绪队列之中。</li>\n</ul>\n</li>\n<li>终止状态\n<ul>\n<li>首先等待操作系统进行善后处理，然后将其 PCB 清零，并将 PCB 空间返还系统。</li>\n<li>当一个进程到达了自然结束点，或是出现了无法克服的错误，或是被操作系统所终结，或是被其他有终止权的进程所终结，它将进入终止状态。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>进程控制块\n<ol>\n<li>进程控制块的作用\n<ul>\n<li>PCB 中记录了操作系统所需的、用于描述进程的当前情况以及控制进程运行的全部信息。</li>\n<li>使一个在多道程序环境下不能独立运行的程序(含数据)，成为一个能独立运行的基本单位，一个能与其它进程并发执行的进程。</li>\n<li>在调度到某进程后，要根据其 PCB 中所保存的处理机状态信息，设置该进程恢复运行的现场，并根据其 PCB 中的程序和数据的内存始址，找到其程序和数据。</li>\n<li>进程在执行过程中，当需要和与之合作的进程实现同步、通信或访问文件时，也都需要访问 PCB。</li>\n<li>当进程由于某种原因而暂停执行时，又须将其断点的处理机环境保存在PCB 中。</li>\n</ul>\n</li>\n<li>进程控制块中的信息\n<ul>\n<li>进程标识符：内部标识符和外部标识符</li>\n</ul>\n<ol start=\"2\">\n<li>处理机状态\n<ul>\n<li>处理机状态信息主要是由处理机的各种寄存器中的内容组成的。处理机在运行时，许多信息都放在寄存器中。当处理机被中断时，所有这些信息都必须保存在 PCB 中，以便在该进程重新执行时，能从断点继续执行。寄存器包含：通用寄存器，指令计数器，程序状态字PSW，用户栈指针。</li>\n</ul>\n</li>\n<li>进程调度信息\n<ul>\n<li>进程状态，指明进程的当前状态，作为进程调度和对换时的依据</li>\n<li>进程优先级，用于描述进程使用处理机的优先级别的一个整数，优先级高的进程应优先获得处理机</li>\n<li>进程调度所需的其它信息，它们与所采用的进程调度算法有关，比如，进程已等待 CPU 的时间总和、进程已执行的时间总和等</li>\n<li>事件，指进程由执行状态转变为阻塞状态所等待发生的事件，即阻塞原因</li>\n</ul>\n</li>\n<li>进程控制信息\n<ul>\n<li>程序和数据的地址，指进程的程序和数据所在的内存或外存地(首)址，以便再调度到该进程执行时，能从 PCB 中找到其程序和数据</li>\n<li>进程同步和通信机制，指实现进程同步和进程通信时必需的机制，如消息队列指针、信号量等，它们可能全部或部分地放在 PCB 中</li>\n<li>资源清单，即一张列出了除 CPU 以外的、进程所需的全部资源及已经分配到该进程的资源的清单</li>\n<li>链接指针，它给出了本进程(PCB)所在队列中的下一个进程的 PCB 的首地址</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>进程控制块的组织方式\n<ul>\n<li>在一个系统中，通常可拥有数十个、 数百个乃至数千个 PCB。为了能对它们加以有效的管理，应该用适当的方式将这些 PCB 组织起来\n<ul>\n<li>链接方式：这是把具有同一状态的 PCB，用其中的链接字链接成一个队列</li>\n<li>索引方式：系统根据所有进程的状态建立几张索引表。例如，就绪索引表、阻塞索引表等，并把各索引表在内存的首地址记录在内存的一些专用单元中。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>"},{"title":"进程通信","date":"2017-05-05T10:23:15.000Z","_content":"### 信号量机制作为通信工具的缺陷\n1. 效率低：生产者每次只向缓存区投放一个消息，消费者每次只能从缓存区取得一个消息。\n2. 通信对用户不透明。\n<!-- more -->\n\n### 进程通信的类型\n1. 共享存储系统\n    1. 基于共享数据结构的通信方式\n        * 通信方式低效，只适用于传递相对少量的数据\n    2. 基于共享存储区的通信方式\n        * 在存储器中划出一块共享存储区，诸进程可通过对共享存储区中数据的读和写来通信，这种通信属于高级通信。\n2. 消息传递系统\n    1. 进程间的数据交换以格式化的消息为单位，把message称作报文。可分为直接通信方式和间接通信方式。\n3. 管道通信\n    1. 用于连接一个读进程和一个写进程以实现它们之间通信的一个共享文件，有名pipe文件。\n    2. 为了协调双方通信，管道机制必须提供以下三方面的协调能力\n        1. 互斥：一个进程正在对pipe执行读写操作时，其他进程必须等待\n        2. 同步：当写(输入)进程把一定数量(如 4 KB)的数据写入 pipe，便去睡眠等待，直到读(输出)进程取走数据后，再把它唤醒。当读进程读一空pip 时，也应睡眠等待，直至写进程将数据写入管道后，才将之唤醒。\n        3. 确定对方是否存在：只有确定了对方存在时，才能进行通信\n\n### 消息传递通信的实现方法\n1. 直接通信方式\n    1. 发送进程使用OS提供的发送命令，直接把消息发送给目标进程，要求发送进程和接收进程都以显式方式提供对方的标识符\n2. 间接通信方式\n    1. 进程之间的通信需要通过作为共享数据结构的实体。该实体用来发送进程发送给目标进程的消息，接收进程则从该实体中取出对方发送给自己的消息。利用信箱通信的方式， 既可实现实时通信，又可实现非实时通信。\n    2. 信箱的分类\n        1. 私用信箱：用户进程可为自己建立一个新信箱，并作为该进程的一部分。\n            * 信箱的拥有者有权从信箱中读取消息，其他用户则只能将自己构成的消息发送到该信箱中。这种私用信箱可采用单向通信链路的信箱来实现。当拥有该信箱的进程结束时，信箱也随之消失。\n        2. 公用信箱：由操作系统创建，并提供给系统中的所有核准进程使用。\n            * 核准进程既可把消息发送到该信箱中，也可从信箱中读取发送给自己的消息。显然，公用信箱应采用双向通信链路的信箱来实现。通常，公用信箱在系统运行期间始终存在。\n        3. 共享信箱：由某进程创建，在创建时或创建后指明它是可共享的，同时须指出共享进程(用户)的名字。信箱的拥有者和共享者都有权从信箱中取走发送给自己的消息。\n\n### 消息传递系统实现中的若干问题\n1. 通信链路的建立方式\n    1. 由发送进程在通信之前用显式的“建立连接”命令(原语)请求系统为之建立一条通信链路;在链路使用完后，也用显式方式拆除链路。这种方式主要用于计算机网络中。\n    2. 发送进程无须明确提出建立链路的请求，只须利用系统提供的发送命令(原语)，系统会自动地为之建立一条链路。这种方式主要用于单机系统中。\n2. 通信链路的连接方法\n    1. 点—点连接通信链路，这时的一条链路只连接两个结点(进程);\n    2. 多点连接链路，指用一条链路连接多个(n>2)结点(进程)。\n3. 通信链路的通信方式\n    1. 单向通信链路，只允许发送进程向接收进程发送消息，或者相反。\n    2. 双向链路，既允许由进程A向进程B 发送消息，也允许进程B同时向进程A发送消息。\n4. 通信链路的链路容量\n    1. 无容量通信链路：链路上没有缓冲区，不能暂存任何消息。\n    2. 有容量通信链路：通信链路上设置了缓冲区，可以暂存消息。缓冲区数目越大，通信链路的容量愈大。\n5. 消息的格式\n    1. 定长消息格式：减少了对消息的处理和存储开销。这种方式可用于办公自动化系统中，为用户提供快速的便笺式通信;但这对要发送较长消息的用户是不方便的。\n    2. 变长的消息格式：进程所发送消息的长度是可变的。系统无论在处理还是在存储变长消息时，都可能会付出更多的开销，但这方便了用户。\n6. 进程同步方式\n    1. 发送进程阻塞，接收进程阻塞\n        - 这种情况主要用于进程之间紧密同步，发送进程和接收进程之间无缓冲时。这两个进程平时都处于阻塞状态，直到有消息传递时。这种同步方式称为汇合。\n    2. 发送进程不阻塞，接收进程阻塞\n        - 平时，发送进程不阻塞，因而它可以尽快地把一个或多个消息发送给多个目标; 而接收进程平时则处于阻塞状态，直到发送进程发来消息时才被唤醒。\n    3. 发送进程和接收进程都不阻塞\n        - 平时，发送进程和接收进程都在忙于自己的事情，仅当发生某事件使它无法继续运行时，才把自己阻塞起来等待。\n\n### 消息缓冲队列通信机制\n1. 消息缓冲队列通信机制中的数据结构\n    1. 消息缓冲区\n    2.  PCB中有关通信的数据项\n2. 发送原语\n    1. 调用发送原语，把消息发送给目标(接收)进程。发送原语首先根据发送区a中所设置的消息长度a.size来申请一缓冲区i，接着把发送区a中的信息复制到缓冲区i中。为了能将i挂在接收进程的消息队列mq上，应先获得接收进程的内部标识符j，然后将i挂在 j.mq上。\n3. 接收原语\n    1. 接收进程调用接收原语receive(b)，从自己的消息缓冲队列mq中摘下第一个消息缓冲区 ，并将其中的数据复制到以b为首址的指定消息接收区内。","source":"_posts/计算机操作系统-进程通信.md","raw":"---\ntitle: 进程通信\ntags:\n  - 进程\ncategories:\n  - 操作系统\ndate: 2017-05-05 18:23:15\n---\n### 信号量机制作为通信工具的缺陷\n1. 效率低：生产者每次只向缓存区投放一个消息，消费者每次只能从缓存区取得一个消息。\n2. 通信对用户不透明。\n<!-- more -->\n\n### 进程通信的类型\n1. 共享存储系统\n    1. 基于共享数据结构的通信方式\n        * 通信方式低效，只适用于传递相对少量的数据\n    2. 基于共享存储区的通信方式\n        * 在存储器中划出一块共享存储区，诸进程可通过对共享存储区中数据的读和写来通信，这种通信属于高级通信。\n2. 消息传递系统\n    1. 进程间的数据交换以格式化的消息为单位，把message称作报文。可分为直接通信方式和间接通信方式。\n3. 管道通信\n    1. 用于连接一个读进程和一个写进程以实现它们之间通信的一个共享文件，有名pipe文件。\n    2. 为了协调双方通信，管道机制必须提供以下三方面的协调能力\n        1. 互斥：一个进程正在对pipe执行读写操作时，其他进程必须等待\n        2. 同步：当写(输入)进程把一定数量(如 4 KB)的数据写入 pipe，便去睡眠等待，直到读(输出)进程取走数据后，再把它唤醒。当读进程读一空pip 时，也应睡眠等待，直至写进程将数据写入管道后，才将之唤醒。\n        3. 确定对方是否存在：只有确定了对方存在时，才能进行通信\n\n### 消息传递通信的实现方法\n1. 直接通信方式\n    1. 发送进程使用OS提供的发送命令，直接把消息发送给目标进程，要求发送进程和接收进程都以显式方式提供对方的标识符\n2. 间接通信方式\n    1. 进程之间的通信需要通过作为共享数据结构的实体。该实体用来发送进程发送给目标进程的消息，接收进程则从该实体中取出对方发送给自己的消息。利用信箱通信的方式， 既可实现实时通信，又可实现非实时通信。\n    2. 信箱的分类\n        1. 私用信箱：用户进程可为自己建立一个新信箱，并作为该进程的一部分。\n            * 信箱的拥有者有权从信箱中读取消息，其他用户则只能将自己构成的消息发送到该信箱中。这种私用信箱可采用单向通信链路的信箱来实现。当拥有该信箱的进程结束时，信箱也随之消失。\n        2. 公用信箱：由操作系统创建，并提供给系统中的所有核准进程使用。\n            * 核准进程既可把消息发送到该信箱中，也可从信箱中读取发送给自己的消息。显然，公用信箱应采用双向通信链路的信箱来实现。通常，公用信箱在系统运行期间始终存在。\n        3. 共享信箱：由某进程创建，在创建时或创建后指明它是可共享的，同时须指出共享进程(用户)的名字。信箱的拥有者和共享者都有权从信箱中取走发送给自己的消息。\n\n### 消息传递系统实现中的若干问题\n1. 通信链路的建立方式\n    1. 由发送进程在通信之前用显式的“建立连接”命令(原语)请求系统为之建立一条通信链路;在链路使用完后，也用显式方式拆除链路。这种方式主要用于计算机网络中。\n    2. 发送进程无须明确提出建立链路的请求，只须利用系统提供的发送命令(原语)，系统会自动地为之建立一条链路。这种方式主要用于单机系统中。\n2. 通信链路的连接方法\n    1. 点—点连接通信链路，这时的一条链路只连接两个结点(进程);\n    2. 多点连接链路，指用一条链路连接多个(n>2)结点(进程)。\n3. 通信链路的通信方式\n    1. 单向通信链路，只允许发送进程向接收进程发送消息，或者相反。\n    2. 双向链路，既允许由进程A向进程B 发送消息，也允许进程B同时向进程A发送消息。\n4. 通信链路的链路容量\n    1. 无容量通信链路：链路上没有缓冲区，不能暂存任何消息。\n    2. 有容量通信链路：通信链路上设置了缓冲区，可以暂存消息。缓冲区数目越大，通信链路的容量愈大。\n5. 消息的格式\n    1. 定长消息格式：减少了对消息的处理和存储开销。这种方式可用于办公自动化系统中，为用户提供快速的便笺式通信;但这对要发送较长消息的用户是不方便的。\n    2. 变长的消息格式：进程所发送消息的长度是可变的。系统无论在处理还是在存储变长消息时，都可能会付出更多的开销，但这方便了用户。\n6. 进程同步方式\n    1. 发送进程阻塞，接收进程阻塞\n        - 这种情况主要用于进程之间紧密同步，发送进程和接收进程之间无缓冲时。这两个进程平时都处于阻塞状态，直到有消息传递时。这种同步方式称为汇合。\n    2. 发送进程不阻塞，接收进程阻塞\n        - 平时，发送进程不阻塞，因而它可以尽快地把一个或多个消息发送给多个目标; 而接收进程平时则处于阻塞状态，直到发送进程发来消息时才被唤醒。\n    3. 发送进程和接收进程都不阻塞\n        - 平时，发送进程和接收进程都在忙于自己的事情，仅当发生某事件使它无法继续运行时，才把自己阻塞起来等待。\n\n### 消息缓冲队列通信机制\n1. 消息缓冲队列通信机制中的数据结构\n    1. 消息缓冲区\n    2.  PCB中有关通信的数据项\n2. 发送原语\n    1. 调用发送原语，把消息发送给目标(接收)进程。发送原语首先根据发送区a中所设置的消息长度a.size来申请一缓冲区i，接着把发送区a中的信息复制到缓冲区i中。为了能将i挂在接收进程的消息队列mq上，应先获得接收进程的内部标识符j，然后将i挂在 j.mq上。\n3. 接收原语\n    1. 接收进程调用接收原语receive(b)，从自己的消息缓冲队列mq中摘下第一个消息缓冲区 ，并将其中的数据复制到以b为首址的指定消息接收区内。","slug":"计算机操作系统-进程通信","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv58l006258ugylv00odp","content":"<h3 id=\"信号量机制作为通信工具的缺陷\"><a class=\"header-anchor\" href=\"#信号量机制作为通信工具的缺陷\">¶</a>信号量机制作为通信工具的缺陷</h3>\n<ol>\n<li>效率低：生产者每次只向缓存区投放一个消息，消费者每次只能从缓存区取得一个消息。</li>\n<li>通信对用户不透明。</li>\n</ol>\n<a id=\"more\"></a>\n<h3 id=\"进程通信的类型\"><a class=\"header-anchor\" href=\"#进程通信的类型\">¶</a>进程通信的类型</h3>\n<ol>\n<li>共享存储系统\n<ol>\n<li>基于共享数据结构的通信方式\n<ul>\n<li>通信方式低效，只适用于传递相对少量的数据</li>\n</ul>\n</li>\n<li>基于共享存储区的通信方式\n<ul>\n<li>在存储器中划出一块共享存储区，诸进程可通过对共享存储区中数据的读和写来通信，这种通信属于高级通信。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>消息传递系统\n<ol>\n<li>进程间的数据交换以格式化的消息为单位，把message称作报文。可分为直接通信方式和间接通信方式。</li>\n</ol>\n</li>\n<li>管道通信\n<ol>\n<li>用于连接一个读进程和一个写进程以实现它们之间通信的一个共享文件，有名pipe文件。</li>\n<li>为了协调双方通信，管道机制必须提供以下三方面的协调能力\n<ol>\n<li>互斥：一个进程正在对pipe执行读写操作时，其他进程必须等待</li>\n<li>同步：当写(输入)进程把一定数量(如 4 KB)的数据写入 pipe，便去睡眠等待，直到读(输出)进程取走数据后，再把它唤醒。当读进程读一空pip 时，也应睡眠等待，直至写进程将数据写入管道后，才将之唤醒。</li>\n<li>确定对方是否存在：只有确定了对方存在时，才能进行通信</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"消息传递通信的实现方法\"><a class=\"header-anchor\" href=\"#消息传递通信的实现方法\">¶</a>消息传递通信的实现方法</h3>\n<ol>\n<li>直接通信方式\n<ol>\n<li>发送进程使用OS提供的发送命令，直接把消息发送给目标进程，要求发送进程和接收进程都以显式方式提供对方的标识符</li>\n</ol>\n</li>\n<li>间接通信方式\n<ol>\n<li>进程之间的通信需要通过作为共享数据结构的实体。该实体用来发送进程发送给目标进程的消息，接收进程则从该实体中取出对方发送给自己的消息。利用信箱通信的方式， 既可实现实时通信，又可实现非实时通信。</li>\n<li>信箱的分类\n<ol>\n<li>私用信箱：用户进程可为自己建立一个新信箱，并作为该进程的一部分。\n<ul>\n<li>信箱的拥有者有权从信箱中读取消息，其他用户则只能将自己构成的消息发送到该信箱中。这种私用信箱可采用单向通信链路的信箱来实现。当拥有该信箱的进程结束时，信箱也随之消失。</li>\n</ul>\n</li>\n<li>公用信箱：由操作系统创建，并提供给系统中的所有核准进程使用。\n<ul>\n<li>核准进程既可把消息发送到该信箱中，也可从信箱中读取发送给自己的消息。显然，公用信箱应采用双向通信链路的信箱来实现。通常，公用信箱在系统运行期间始终存在。</li>\n</ul>\n</li>\n<li>共享信箱：由某进程创建，在创建时或创建后指明它是可共享的，同时须指出共享进程(用户)的名字。信箱的拥有者和共享者都有权从信箱中取走发送给自己的消息。</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"消息传递系统实现中的若干问题\"><a class=\"header-anchor\" href=\"#消息传递系统实现中的若干问题\">¶</a>消息传递系统实现中的若干问题</h3>\n<ol>\n<li>通信链路的建立方式\n<ol>\n<li>由发送进程在通信之前用显式的“建立连接”命令(原语)请求系统为之建立一条通信链路;在链路使用完后，也用显式方式拆除链路。这种方式主要用于计算机网络中。</li>\n<li>发送进程无须明确提出建立链路的请求，只须利用系统提供的发送命令(原语)，系统会自动地为之建立一条链路。这种方式主要用于单机系统中。</li>\n</ol>\n</li>\n<li>通信链路的连接方法\n<ol>\n<li>点—点连接通信链路，这时的一条链路只连接两个结点(进程);</li>\n<li>多点连接链路，指用一条链路连接多个(n&gt;2)结点(进程)。</li>\n</ol>\n</li>\n<li>通信链路的通信方式\n<ol>\n<li>单向通信链路，只允许发送进程向接收进程发送消息，或者相反。</li>\n<li>双向链路，既允许由进程A向进程B 发送消息，也允许进程B同时向进程A发送消息。</li>\n</ol>\n</li>\n<li>通信链路的链路容量\n<ol>\n<li>无容量通信链路：链路上没有缓冲区，不能暂存任何消息。</li>\n<li>有容量通信链路：通信链路上设置了缓冲区，可以暂存消息。缓冲区数目越大，通信链路的容量愈大。</li>\n</ol>\n</li>\n<li>消息的格式\n<ol>\n<li>定长消息格式：减少了对消息的处理和存储开销。这种方式可用于办公自动化系统中，为用户提供快速的便笺式通信;但这对要发送较长消息的用户是不方便的。</li>\n<li>变长的消息格式：进程所发送消息的长度是可变的。系统无论在处理还是在存储变长消息时，都可能会付出更多的开销，但这方便了用户。</li>\n</ol>\n</li>\n<li>进程同步方式\n<ol>\n<li>发送进程阻塞，接收进程阻塞\n<ul>\n<li>这种情况主要用于进程之间紧密同步，发送进程和接收进程之间无缓冲时。这两个进程平时都处于阻塞状态，直到有消息传递时。这种同步方式称为汇合。</li>\n</ul>\n</li>\n<li>发送进程不阻塞，接收进程阻塞\n<ul>\n<li>平时，发送进程不阻塞，因而它可以尽快地把一个或多个消息发送给多个目标; 而接收进程平时则处于阻塞状态，直到发送进程发来消息时才被唤醒。</li>\n</ul>\n</li>\n<li>发送进程和接收进程都不阻塞\n<ul>\n<li>平时，发送进程和接收进程都在忙于自己的事情，仅当发生某事件使它无法继续运行时，才把自己阻塞起来等待。</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"消息缓冲队列通信机制\"><a class=\"header-anchor\" href=\"#消息缓冲队列通信机制\">¶</a>消息缓冲队列通信机制</h3>\n<ol>\n<li>消息缓冲队列通信机制中的数据结构\n<ol>\n<li>消息缓冲区</li>\n<li>PCB中有关通信的数据项</li>\n</ol>\n</li>\n<li>发送原语\n<ol>\n<li>调用发送原语，把消息发送给目标(接收)进程。发送原语首先根据发送区a中所设置的消息长度a.size来申请一缓冲区i，接着把发送区a中的信息复制到缓冲区i中。为了能将i挂在接收进程的消息队列mq上，应先获得接收进程的内部标识符j，然后将i挂在 j.mq上。</li>\n</ol>\n</li>\n<li>接收原语\n<ol>\n<li>接收进程调用接收原语receive(b)，从自己的消息缓冲队列mq中摘下第一个消息缓冲区 ，并将其中的数据复制到以b为首址的指定消息接收区内。</li>\n</ol>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h3 id=\"信号量机制作为通信工具的缺陷\"><a class=\"header-anchor\" href=\"#信号量机制作为通信工具的缺陷\">¶</a>信号量机制作为通信工具的缺陷</h3>\n<ol>\n<li>效率低：生产者每次只向缓存区投放一个消息，消费者每次只能从缓存区取得一个消息。</li>\n<li>通信对用户不透明。</li>\n</ol>","more":"<h3 id=\"进程通信的类型\"><a class=\"header-anchor\" href=\"#进程通信的类型\">¶</a>进程通信的类型</h3>\n<ol>\n<li>共享存储系统\n<ol>\n<li>基于共享数据结构的通信方式\n<ul>\n<li>通信方式低效，只适用于传递相对少量的数据</li>\n</ul>\n</li>\n<li>基于共享存储区的通信方式\n<ul>\n<li>在存储器中划出一块共享存储区，诸进程可通过对共享存储区中数据的读和写来通信，这种通信属于高级通信。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>消息传递系统\n<ol>\n<li>进程间的数据交换以格式化的消息为单位，把message称作报文。可分为直接通信方式和间接通信方式。</li>\n</ol>\n</li>\n<li>管道通信\n<ol>\n<li>用于连接一个读进程和一个写进程以实现它们之间通信的一个共享文件，有名pipe文件。</li>\n<li>为了协调双方通信，管道机制必须提供以下三方面的协调能力\n<ol>\n<li>互斥：一个进程正在对pipe执行读写操作时，其他进程必须等待</li>\n<li>同步：当写(输入)进程把一定数量(如 4 KB)的数据写入 pipe，便去睡眠等待，直到读(输出)进程取走数据后，再把它唤醒。当读进程读一空pip 时，也应睡眠等待，直至写进程将数据写入管道后，才将之唤醒。</li>\n<li>确定对方是否存在：只有确定了对方存在时，才能进行通信</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"消息传递通信的实现方法\"><a class=\"header-anchor\" href=\"#消息传递通信的实现方法\">¶</a>消息传递通信的实现方法</h3>\n<ol>\n<li>直接通信方式\n<ol>\n<li>发送进程使用OS提供的发送命令，直接把消息发送给目标进程，要求发送进程和接收进程都以显式方式提供对方的标识符</li>\n</ol>\n</li>\n<li>间接通信方式\n<ol>\n<li>进程之间的通信需要通过作为共享数据结构的实体。该实体用来发送进程发送给目标进程的消息，接收进程则从该实体中取出对方发送给自己的消息。利用信箱通信的方式， 既可实现实时通信，又可实现非实时通信。</li>\n<li>信箱的分类\n<ol>\n<li>私用信箱：用户进程可为自己建立一个新信箱，并作为该进程的一部分。\n<ul>\n<li>信箱的拥有者有权从信箱中读取消息，其他用户则只能将自己构成的消息发送到该信箱中。这种私用信箱可采用单向通信链路的信箱来实现。当拥有该信箱的进程结束时，信箱也随之消失。</li>\n</ul>\n</li>\n<li>公用信箱：由操作系统创建，并提供给系统中的所有核准进程使用。\n<ul>\n<li>核准进程既可把消息发送到该信箱中，也可从信箱中读取发送给自己的消息。显然，公用信箱应采用双向通信链路的信箱来实现。通常，公用信箱在系统运行期间始终存在。</li>\n</ul>\n</li>\n<li>共享信箱：由某进程创建，在创建时或创建后指明它是可共享的，同时须指出共享进程(用户)的名字。信箱的拥有者和共享者都有权从信箱中取走发送给自己的消息。</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"消息传递系统实现中的若干问题\"><a class=\"header-anchor\" href=\"#消息传递系统实现中的若干问题\">¶</a>消息传递系统实现中的若干问题</h3>\n<ol>\n<li>通信链路的建立方式\n<ol>\n<li>由发送进程在通信之前用显式的“建立连接”命令(原语)请求系统为之建立一条通信链路;在链路使用完后，也用显式方式拆除链路。这种方式主要用于计算机网络中。</li>\n<li>发送进程无须明确提出建立链路的请求，只须利用系统提供的发送命令(原语)，系统会自动地为之建立一条链路。这种方式主要用于单机系统中。</li>\n</ol>\n</li>\n<li>通信链路的连接方法\n<ol>\n<li>点—点连接通信链路，这时的一条链路只连接两个结点(进程);</li>\n<li>多点连接链路，指用一条链路连接多个(n&gt;2)结点(进程)。</li>\n</ol>\n</li>\n<li>通信链路的通信方式\n<ol>\n<li>单向通信链路，只允许发送进程向接收进程发送消息，或者相反。</li>\n<li>双向链路，既允许由进程A向进程B 发送消息，也允许进程B同时向进程A发送消息。</li>\n</ol>\n</li>\n<li>通信链路的链路容量\n<ol>\n<li>无容量通信链路：链路上没有缓冲区，不能暂存任何消息。</li>\n<li>有容量通信链路：通信链路上设置了缓冲区，可以暂存消息。缓冲区数目越大，通信链路的容量愈大。</li>\n</ol>\n</li>\n<li>消息的格式\n<ol>\n<li>定长消息格式：减少了对消息的处理和存储开销。这种方式可用于办公自动化系统中，为用户提供快速的便笺式通信;但这对要发送较长消息的用户是不方便的。</li>\n<li>变长的消息格式：进程所发送消息的长度是可变的。系统无论在处理还是在存储变长消息时，都可能会付出更多的开销，但这方便了用户。</li>\n</ol>\n</li>\n<li>进程同步方式\n<ol>\n<li>发送进程阻塞，接收进程阻塞\n<ul>\n<li>这种情况主要用于进程之间紧密同步，发送进程和接收进程之间无缓冲时。这两个进程平时都处于阻塞状态，直到有消息传递时。这种同步方式称为汇合。</li>\n</ul>\n</li>\n<li>发送进程不阻塞，接收进程阻塞\n<ul>\n<li>平时，发送进程不阻塞，因而它可以尽快地把一个或多个消息发送给多个目标; 而接收进程平时则处于阻塞状态，直到发送进程发来消息时才被唤醒。</li>\n</ul>\n</li>\n<li>发送进程和接收进程都不阻塞\n<ul>\n<li>平时，发送进程和接收进程都在忙于自己的事情，仅当发生某事件使它无法继续运行时，才把自己阻塞起来等待。</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"消息缓冲队列通信机制\"><a class=\"header-anchor\" href=\"#消息缓冲队列通信机制\">¶</a>消息缓冲队列通信机制</h3>\n<ol>\n<li>消息缓冲队列通信机制中的数据结构\n<ol>\n<li>消息缓冲区</li>\n<li>PCB中有关通信的数据项</li>\n</ol>\n</li>\n<li>发送原语\n<ol>\n<li>调用发送原语，把消息发送给目标(接收)进程。发送原语首先根据发送区a中所设置的消息长度a.size来申请一缓冲区i，接着把发送区a中的信息复制到缓冲区i中。为了能将i挂在接收进程的消息队列mq上，应先获得接收进程的内部标识符j，然后将i挂在 j.mq上。</li>\n</ol>\n</li>\n<li>接收原语\n<ol>\n<li>接收进程调用接收原语receive(b)，从自己的消息缓冲队列mq中摘下第一个消息缓冲区 ，并将其中的数据复制到以b为首址的指定消息接收区内。</li>\n</ol>\n</li>\n</ol>"},{"title":"数据链路层","date":"2017-07-18T02:22:15.000Z","_content":"\n### 主要内容\n1. 点对点信道和广播信道的特点，以及两种信道使用的协议（PPP和CSMA/CD）。\n2. 数据链路层的三个基本问题：封装成帧、透明传输和差错检测。\n3. 以太网MAC层的硬件地址。\n4. 适配器、转发器、集线器、网桥、以太网交换机的作用和使用场合。\n<!-- more -->\n### 使用点对点信道的数据链路层\n1. 数据链路和帧\n2. 三个基本问题\n    1. 封装成帧：在数据前后分别添加首部和尾部，\n    2. 透明传输\n    3. 差错检测\n### 点对点协议PPP\n1. PPP协议的特点\n    1. 简单：接收方没收到一个帧，就进行CRC检验，如果CRC检验正确，就收下这个帧，反之，就丢弃这个帧，其他什么都不做。\n    2. 封装成帧，规定特殊的字符作为帧定界符，以便接收端从收到的比特流中能准确地找出帧的开始和结束位置。\n    3. 透明性，如果数据中碰巧出现了和帧定界符一样的比特组合时，就要采取有效的措施来解决这个问题。\n    4. 多种网络层协议，能够在同一条物理链路上同时支持多种网络层协议的运行。\n    5. 多种类型链路，能够在多种类型的链路上运行。\n    6. 差错检测，能够对接收端收到的帧进行检测，并立即丢弃有差错的帧。\n    7. 检测连接状态，能够及时自动检测出链路是否处于正常工作状态。\n    8. 最大传输单元，对每一种类型的点对点链路设置最大传送单元MTU的标准默认值，促进各种实现之间的互操作性。MTU是数据链路层的帧可以载荷的数据部分的最大长度，而不是帧的总长度。\n    9. 网络层地址协商，是通信的两个网络层的实体能够通过协商知道或能够配置彼此的网络层地址。\n    10. 数据压缩协商，提供一种方法来协商使用数据压缩算法。\n    11. PPP协议不支持多点线路（即一个主站轮流和链路上的多个从站进行通信），而只支持点对点的链路通信。此外，PPP协议只支持全双工通信。\n2. PPP协议的组成（三个组成部分）\n    1. 将IP数据报封装到串行链路的方法。\n    2. 建立、配置和测试数据链路连接的链路控制协议LCP。\n    3. 网络控制协议NCP\n3. PPP协议的帧格式\n    1. 各字段的意义\n        1. PPP帧的首部和尾部分别为四个字段和两个字段。首部的第一个字段和尾部的第二个字段都是标志F，规定为0x7E，标志字段表示一个帧的开始或结束。因此标志字段是PPP帧的定界符。连续两帧之间只需要用一个标志字段，如果出现连续两个标志字段，就表示一个空帧，应当丢弃。\n        2. 信息字段的长度是可变的，不超过1500字节。\n        3. 尾部中的第一个字段是使用CRC的帧检验序列FCS。\n    2. 字节填充\n        1. 把信息字段中出现的每一个0x7E字节转变成为2字节序列(0x7D,0x5E)\n        2. 若信息字段中出现一个0X7D的字节。则吧0x7D转变为2字节序列(0x7D,0x5D)\n        3. 若信息字段中出现ASCII码的控制字符，则在该字符前面加入一个0x7D字节，同时将该字符的编码加以改变。\n    3. 零比特填充\n4. PPP协议的工作状态\n### 使用广播信道的数据链路层\n1. 局域网的数据链路层\n    1. 局域网的特点\n        1. 具有广播功能，从一个站点可以很方便地访问全网\n        2. 便于系统的扩展和逐渐演变，各设备的位置可灵活调整和改变\n        3. 提高了系统的可靠性、可用性和生存性\n    2. 共享信道的实现\n        1. 静态划分信道\n        2. 动态媒体接入控制\n            1. 随机接入（以太网采用的是随机接入）\n            2. 受控接入\n    3. 以太网的两个标准\n    4. 适配器的作用\n2. CSMA/CD协议（载波监听多点接入/碰撞检测）\n    1. 多点接入\n    2. 载波监听\n    3. 碰撞检测\n3. 使用集线器的星形拓扑\n    1. 使用集线器的以太网在逻辑仍是一个总线网，各站共享逻辑上的总线，使用的还是CSMA/CD协议。网络中的各站必须竞争对传输媒体的控制，并且在同一时刻至多只允许一个站发送数据。\n    2. 一个集线器有许多接口，很像一个多接口的转发器。\n    3. 集线器工作在物理层，它的每个接口仅仅简单地转发比特。\n    4. 集线器采用了专门的芯片，进行自适应串音回波抵消。","source":"_posts/计算机网络-数据链路层.md","raw":"---\ntitle: 数据链路层\ntags:\n  - 数据链路层\n  - 计算机网络\ncategories:\n  - 计算机网络\ndate: 2017-07-18 10:22:15\n---\n\n### 主要内容\n1. 点对点信道和广播信道的特点，以及两种信道使用的协议（PPP和CSMA/CD）。\n2. 数据链路层的三个基本问题：封装成帧、透明传输和差错检测。\n3. 以太网MAC层的硬件地址。\n4. 适配器、转发器、集线器、网桥、以太网交换机的作用和使用场合。\n<!-- more -->\n### 使用点对点信道的数据链路层\n1. 数据链路和帧\n2. 三个基本问题\n    1. 封装成帧：在数据前后分别添加首部和尾部，\n    2. 透明传输\n    3. 差错检测\n### 点对点协议PPP\n1. PPP协议的特点\n    1. 简单：接收方没收到一个帧，就进行CRC检验，如果CRC检验正确，就收下这个帧，反之，就丢弃这个帧，其他什么都不做。\n    2. 封装成帧，规定特殊的字符作为帧定界符，以便接收端从收到的比特流中能准确地找出帧的开始和结束位置。\n    3. 透明性，如果数据中碰巧出现了和帧定界符一样的比特组合时，就要采取有效的措施来解决这个问题。\n    4. 多种网络层协议，能够在同一条物理链路上同时支持多种网络层协议的运行。\n    5. 多种类型链路，能够在多种类型的链路上运行。\n    6. 差错检测，能够对接收端收到的帧进行检测，并立即丢弃有差错的帧。\n    7. 检测连接状态，能够及时自动检测出链路是否处于正常工作状态。\n    8. 最大传输单元，对每一种类型的点对点链路设置最大传送单元MTU的标准默认值，促进各种实现之间的互操作性。MTU是数据链路层的帧可以载荷的数据部分的最大长度，而不是帧的总长度。\n    9. 网络层地址协商，是通信的两个网络层的实体能够通过协商知道或能够配置彼此的网络层地址。\n    10. 数据压缩协商，提供一种方法来协商使用数据压缩算法。\n    11. PPP协议不支持多点线路（即一个主站轮流和链路上的多个从站进行通信），而只支持点对点的链路通信。此外，PPP协议只支持全双工通信。\n2. PPP协议的组成（三个组成部分）\n    1. 将IP数据报封装到串行链路的方法。\n    2. 建立、配置和测试数据链路连接的链路控制协议LCP。\n    3. 网络控制协议NCP\n3. PPP协议的帧格式\n    1. 各字段的意义\n        1. PPP帧的首部和尾部分别为四个字段和两个字段。首部的第一个字段和尾部的第二个字段都是标志F，规定为0x7E，标志字段表示一个帧的开始或结束。因此标志字段是PPP帧的定界符。连续两帧之间只需要用一个标志字段，如果出现连续两个标志字段，就表示一个空帧，应当丢弃。\n        2. 信息字段的长度是可变的，不超过1500字节。\n        3. 尾部中的第一个字段是使用CRC的帧检验序列FCS。\n    2. 字节填充\n        1. 把信息字段中出现的每一个0x7E字节转变成为2字节序列(0x7D,0x5E)\n        2. 若信息字段中出现一个0X7D的字节。则吧0x7D转变为2字节序列(0x7D,0x5D)\n        3. 若信息字段中出现ASCII码的控制字符，则在该字符前面加入一个0x7D字节，同时将该字符的编码加以改变。\n    3. 零比特填充\n4. PPP协议的工作状态\n### 使用广播信道的数据链路层\n1. 局域网的数据链路层\n    1. 局域网的特点\n        1. 具有广播功能，从一个站点可以很方便地访问全网\n        2. 便于系统的扩展和逐渐演变，各设备的位置可灵活调整和改变\n        3. 提高了系统的可靠性、可用性和生存性\n    2. 共享信道的实现\n        1. 静态划分信道\n        2. 动态媒体接入控制\n            1. 随机接入（以太网采用的是随机接入）\n            2. 受控接入\n    3. 以太网的两个标准\n    4. 适配器的作用\n2. CSMA/CD协议（载波监听多点接入/碰撞检测）\n    1. 多点接入\n    2. 载波监听\n    3. 碰撞检测\n3. 使用集线器的星形拓扑\n    1. 使用集线器的以太网在逻辑仍是一个总线网，各站共享逻辑上的总线，使用的还是CSMA/CD协议。网络中的各站必须竞争对传输媒体的控制，并且在同一时刻至多只允许一个站发送数据。\n    2. 一个集线器有许多接口，很像一个多接口的转发器。\n    3. 集线器工作在物理层，它的每个接口仅仅简单地转发比特。\n    4. 集线器采用了专门的芯片，进行自适应串音回波抵消。","slug":"计算机网络-数据链路层","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv58n006558ugcjp08p7x","content":"<h3 id=\"主要内容\"><a class=\"header-anchor\" href=\"#主要内容\">¶</a>主要内容</h3>\n<ol>\n<li>点对点信道和广播信道的特点，以及两种信道使用的协议（PPP和CSMA/CD）。</li>\n<li>数据链路层的三个基本问题：封装成帧、透明传输和差错检测。</li>\n<li>以太网MAC层的硬件地址。</li>\n<li>适配器、转发器、集线器、网桥、以太网交换机的作用和使用场合。</li>\n</ol>\n<a id=\"more\"></a>\n<h3 id=\"使用点对点信道的数据链路层\"><a class=\"header-anchor\" href=\"#使用点对点信道的数据链路层\">¶</a>使用点对点信道的数据链路层</h3>\n<ol>\n<li>数据链路和帧</li>\n<li>三个基本问题\n<ol>\n<li>封装成帧：在数据前后分别添加首部和尾部，</li>\n<li>透明传输</li>\n<li>差错检测</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"点对点协议ppp\"><a class=\"header-anchor\" href=\"#点对点协议ppp\">¶</a>点对点协议PPP</h3>\n<ol>\n<li>PPP协议的特点\n<ol>\n<li>简单：接收方没收到一个帧，就进行CRC检验，如果CRC检验正确，就收下这个帧，反之，就丢弃这个帧，其他什么都不做。</li>\n<li>封装成帧，规定特殊的字符作为帧定界符，以便接收端从收到的比特流中能准确地找出帧的开始和结束位置。</li>\n<li>透明性，如果数据中碰巧出现了和帧定界符一样的比特组合时，就要采取有效的措施来解决这个问题。</li>\n<li>多种网络层协议，能够在同一条物理链路上同时支持多种网络层协议的运行。</li>\n<li>多种类型链路，能够在多种类型的链路上运行。</li>\n<li>差错检测，能够对接收端收到的帧进行检测，并立即丢弃有差错的帧。</li>\n<li>检测连接状态，能够及时自动检测出链路是否处于正常工作状态。</li>\n<li>最大传输单元，对每一种类型的点对点链路设置最大传送单元MTU的标准默认值，促进各种实现之间的互操作性。MTU是数据链路层的帧可以载荷的数据部分的最大长度，而不是帧的总长度。</li>\n<li>网络层地址协商，是通信的两个网络层的实体能够通过协商知道或能够配置彼此的网络层地址。</li>\n<li>数据压缩协商，提供一种方法来协商使用数据压缩算法。</li>\n<li>PPP协议不支持多点线路（即一个主站轮流和链路上的多个从站进行通信），而只支持点对点的链路通信。此外，PPP协议只支持全双工通信。</li>\n</ol>\n</li>\n<li>PPP协议的组成（三个组成部分）\n<ol>\n<li>将IP数据报封装到串行链路的方法。</li>\n<li>建立、配置和测试数据链路连接的链路控制协议LCP。</li>\n<li>网络控制协议NCP</li>\n</ol>\n</li>\n<li>PPP协议的帧格式\n<ol>\n<li>各字段的意义\n<ol>\n<li>PPP帧的首部和尾部分别为四个字段和两个字段。首部的第一个字段和尾部的第二个字段都是标志F，规定为0x7E，标志字段表示一个帧的开始或结束。因此标志字段是PPP帧的定界符。连续两帧之间只需要用一个标志字段，如果出现连续两个标志字段，就表示一个空帧，应当丢弃。</li>\n<li>信息字段的长度是可变的，不超过1500字节。</li>\n<li>尾部中的第一个字段是使用CRC的帧检验序列FCS。</li>\n</ol>\n</li>\n<li>字节填充\n<ol>\n<li>把信息字段中出现的每一个0x7E字节转变成为2字节序列(0x7D,0x5E)</li>\n<li>若信息字段中出现一个0X7D的字节。则吧0x7D转变为2字节序列(0x7D,0x5D)</li>\n<li>若信息字段中出现ASCII码的控制字符，则在该字符前面加入一个0x7D字节，同时将该字符的编码加以改变。</li>\n</ol>\n</li>\n<li>零比特填充</li>\n</ol>\n</li>\n<li>PPP协议的工作状态</li>\n</ol>\n<h3 id=\"使用广播信道的数据链路层\"><a class=\"header-anchor\" href=\"#使用广播信道的数据链路层\">¶</a>使用广播信道的数据链路层</h3>\n<ol>\n<li>局域网的数据链路层\n<ol>\n<li>局域网的特点\n<ol>\n<li>具有广播功能，从一个站点可以很方便地访问全网</li>\n<li>便于系统的扩展和逐渐演变，各设备的位置可灵活调整和改变</li>\n<li>提高了系统的可靠性、可用性和生存性</li>\n</ol>\n</li>\n<li>共享信道的实现\n<ol>\n<li>静态划分信道</li>\n<li>动态媒体接入控制\n<ol>\n<li>随机接入（以太网采用的是随机接入）</li>\n<li>受控接入</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>以太网的两个标准</li>\n<li>适配器的作用</li>\n</ol>\n</li>\n<li>CSMA/CD协议（载波监听多点接入/碰撞检测）\n<ol>\n<li>多点接入</li>\n<li>载波监听</li>\n<li>碰撞检测</li>\n</ol>\n</li>\n<li>使用集线器的星形拓扑\n<ol>\n<li>使用集线器的以太网在逻辑仍是一个总线网，各站共享逻辑上的总线，使用的还是CSMA/CD协议。网络中的各站必须竞争对传输媒体的控制，并且在同一时刻至多只允许一个站发送数据。</li>\n<li>一个集线器有许多接口，很像一个多接口的转发器。</li>\n<li>集线器工作在物理层，它的每个接口仅仅简单地转发比特。</li>\n<li>集线器采用了专门的芯片，进行自适应串音回波抵消。</li>\n</ol>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h3 id=\"主要内容\"><a class=\"header-anchor\" href=\"#主要内容\">¶</a>主要内容</h3>\n<ol>\n<li>点对点信道和广播信道的特点，以及两种信道使用的协议（PPP和CSMA/CD）。</li>\n<li>数据链路层的三个基本问题：封装成帧、透明传输和差错检测。</li>\n<li>以太网MAC层的硬件地址。</li>\n<li>适配器、转发器、集线器、网桥、以太网交换机的作用和使用场合。</li>\n</ol>","more":"<h3 id=\"使用点对点信道的数据链路层\"><a class=\"header-anchor\" href=\"#使用点对点信道的数据链路层\">¶</a>使用点对点信道的数据链路层</h3>\n<ol>\n<li>数据链路和帧</li>\n<li>三个基本问题\n<ol>\n<li>封装成帧：在数据前后分别添加首部和尾部，</li>\n<li>透明传输</li>\n<li>差错检测</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"点对点协议ppp\"><a class=\"header-anchor\" href=\"#点对点协议ppp\">¶</a>点对点协议PPP</h3>\n<ol>\n<li>PPP协议的特点\n<ol>\n<li>简单：接收方没收到一个帧，就进行CRC检验，如果CRC检验正确，就收下这个帧，反之，就丢弃这个帧，其他什么都不做。</li>\n<li>封装成帧，规定特殊的字符作为帧定界符，以便接收端从收到的比特流中能准确地找出帧的开始和结束位置。</li>\n<li>透明性，如果数据中碰巧出现了和帧定界符一样的比特组合时，就要采取有效的措施来解决这个问题。</li>\n<li>多种网络层协议，能够在同一条物理链路上同时支持多种网络层协议的运行。</li>\n<li>多种类型链路，能够在多种类型的链路上运行。</li>\n<li>差错检测，能够对接收端收到的帧进行检测，并立即丢弃有差错的帧。</li>\n<li>检测连接状态，能够及时自动检测出链路是否处于正常工作状态。</li>\n<li>最大传输单元，对每一种类型的点对点链路设置最大传送单元MTU的标准默认值，促进各种实现之间的互操作性。MTU是数据链路层的帧可以载荷的数据部分的最大长度，而不是帧的总长度。</li>\n<li>网络层地址协商，是通信的两个网络层的实体能够通过协商知道或能够配置彼此的网络层地址。</li>\n<li>数据压缩协商，提供一种方法来协商使用数据压缩算法。</li>\n<li>PPP协议不支持多点线路（即一个主站轮流和链路上的多个从站进行通信），而只支持点对点的链路通信。此外，PPP协议只支持全双工通信。</li>\n</ol>\n</li>\n<li>PPP协议的组成（三个组成部分）\n<ol>\n<li>将IP数据报封装到串行链路的方法。</li>\n<li>建立、配置和测试数据链路连接的链路控制协议LCP。</li>\n<li>网络控制协议NCP</li>\n</ol>\n</li>\n<li>PPP协议的帧格式\n<ol>\n<li>各字段的意义\n<ol>\n<li>PPP帧的首部和尾部分别为四个字段和两个字段。首部的第一个字段和尾部的第二个字段都是标志F，规定为0x7E，标志字段表示一个帧的开始或结束。因此标志字段是PPP帧的定界符。连续两帧之间只需要用一个标志字段，如果出现连续两个标志字段，就表示一个空帧，应当丢弃。</li>\n<li>信息字段的长度是可变的，不超过1500字节。</li>\n<li>尾部中的第一个字段是使用CRC的帧检验序列FCS。</li>\n</ol>\n</li>\n<li>字节填充\n<ol>\n<li>把信息字段中出现的每一个0x7E字节转变成为2字节序列(0x7D,0x5E)</li>\n<li>若信息字段中出现一个0X7D的字节。则吧0x7D转变为2字节序列(0x7D,0x5D)</li>\n<li>若信息字段中出现ASCII码的控制字符，则在该字符前面加入一个0x7D字节，同时将该字符的编码加以改变。</li>\n</ol>\n</li>\n<li>零比特填充</li>\n</ol>\n</li>\n<li>PPP协议的工作状态</li>\n</ol>\n<h3 id=\"使用广播信道的数据链路层\"><a class=\"header-anchor\" href=\"#使用广播信道的数据链路层\">¶</a>使用广播信道的数据链路层</h3>\n<ol>\n<li>局域网的数据链路层\n<ol>\n<li>局域网的特点\n<ol>\n<li>具有广播功能，从一个站点可以很方便地访问全网</li>\n<li>便于系统的扩展和逐渐演变，各设备的位置可灵活调整和改变</li>\n<li>提高了系统的可靠性、可用性和生存性</li>\n</ol>\n</li>\n<li>共享信道的实现\n<ol>\n<li>静态划分信道</li>\n<li>动态媒体接入控制\n<ol>\n<li>随机接入（以太网采用的是随机接入）</li>\n<li>受控接入</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>以太网的两个标准</li>\n<li>适配器的作用</li>\n</ol>\n</li>\n<li>CSMA/CD协议（载波监听多点接入/碰撞检测）\n<ol>\n<li>多点接入</li>\n<li>载波监听</li>\n<li>碰撞检测</li>\n</ol>\n</li>\n<li>使用集线器的星形拓扑\n<ol>\n<li>使用集线器的以太网在逻辑仍是一个总线网，各站共享逻辑上的总线，使用的还是CSMA/CD协议。网络中的各站必须竞争对传输媒体的控制，并且在同一时刻至多只允许一个站发送数据。</li>\n<li>一个集线器有许多接口，很像一个多接口的转发器。</li>\n<li>集线器工作在物理层，它的每个接口仅仅简单地转发比特。</li>\n<li>集线器采用了专门的芯片，进行自适应串音回波抵消。</li>\n</ol>\n</li>\n</ol>"},{"title":"计算机网络概述","date":"2017-06-28T10:22:15.000Z","_content":"\n### 计算机网络在信息时代的作用\n1. 三大网络：电信网络，有线电视网络，计算机网络。\n2. Internet的叫法：因特网，互联网\n3. 互联网的两个基本特点：连通性和共享\n<!-- more -->\n### 互联网概述\n1. 网络的网络。\n2. 计算机网络由结点和链路组成\n3. 互联网基础结构发展的三个阶段\n    1. 第一个阶段的互联网不能够叫做互联网，而应该称之为互连网，因为它是把几个计算机网络给互连起来。（ARPANET使用TCP/IP协议将计算机连接起来）\n    2. 三级计算机网络，分为主干网、地区网和校园网（企业网），覆盖了全美主要的大学和研究所。（NSFNET国家科学基金网）\n    3. 多层次ISP结构的互联网。（ISP 互联网服务提供者(商)），分主干ISP、地区ISP、和本地ISP。\n        - 互联网交换点IXP的作用：允许两个网络直接相连并交换分组，不需要通过第三个网络（更高层ISP）来转发分组。\n4. 互联网的标准化工作\n    1. 标准化制定过早或过晚都是不好的。\n    2. 互联网协会对互联网进行全面管理。\n    3. 互联网正式标准的制定需要经过三个阶段\n        - 互联网草案\n        - 建议标准\n        - 互联网标准\n### 互联网的组成\n1. 边缘部分：主机\n    1. 计算机通信方式\n        - 客户-服务器方式（C/S方式）：客户发起通信，需要知道服务器程序的地址，但是不需要特殊的硬件和复杂的操作系统；服务器需要专门用来提供服务的程序，可以同时处理多个客户端点的请求，需要程序一直运行并被动等待客户端发送过来的通信请求，一般需要强大的硬件和高级的操作系统的支持。\n        - 对等连接方式（P2P方式）：不需要区分哪个是服务请求方，哪个是服务提供方。\n2. 核心部分：路由器\n    1. 转发收到的分组，实现分组交换的关键构建\n    2. 电路交换的缺陷：在通话的全部时间内，通话的两个用户怒适中占用端到端的通信资源。\n    3. 分组交换的优点：\n        - 高效：在分组传输的过程中动态分配传输带宽，对通信链路逐段占用\n        - 灵活：为每一个分组独立地选择最合适的转发路由\n        - 迅速：以分组作为传送单位，可以不先建立连接就能向其他主机发送分组\n        - 可靠：保证可靠性的网络协议，分布式多路由的分组交换网，使网络由很好的生存性。\n### 计算机网络在我国的发展\n1. 1994年4月20日用64kbit/s专线正式接入互联网。同年5月中国科学院高能物理研究所设立我国的第一个万维网服务器。同年9月中国公用计算机CHINANET正式启动。\n    1. 中国电信互联网CHINANET（原来的中国公用计算机互联网）\n    2. 中国联通互联网UNINET\n    3. 中国移动互联网CMNET\n    4. 中国教育和科研计算机网CERNET\n    5. 中国科学技术网CSTNET\n### 计算机网络的类别\n1. 按照作用范围分类：广域网WAN，城域网MAN，局域网LAN，个人区域网PAN。\n2. 按照网络的使用者分类：公用网，专用网\n### 计算机网络的性能\n1. 速率\n2. 带宽\n3. 吞吐量\n4. 时延：发送时延，传播时延，处理时延，排队时延。\n5. 时延带宽积:以比特为单位的链路长度\n6. 往返时间RTT：\n7. 利用率：D = D。/(1-U)，时延等于空闲时延除以1减去利用率的差。\n### 计算机网络的非性能特征\n1. 费用\n2. 质量\n3. 标准化\n4. 可靠性\n5. 课扩展性和可升级性\n6. 易于管理和维护\n### 计算机网络体系结构\n1. 具有五层协议的体系结构\n    1. 开放系统互联基本参考模型（OSI/RM）\n    2. 计算机网络的各层及其协议的集合就是网络的体系结构\n    3. 体系结构是抽象的，而实现是具体的，是真正在运行的计算机硬件和软件\n    4. 应用层：通过应用进程间的交互来完成特定网络应用。应用层协议定义的是应用进程间通信和交互的规则。\n    5. 运输层：负责向两台主机中进程间的通信提供通用的数据传输服务。（传输控制协议TCP,数据传输单位是报文段，用户数据报协议UDP，数据传输单位是用户数据报。）\n    6. 网络层：把运输层产生的报文段或用户数据报封装成分组或包进行传送。又称为网际层和IP层\n    7. 数据链路层：把网络层交下来的IP数据报组装成帧，在两个相邻结点间的链路上传送帧。\n    8. 物理层：传输的数据的单位是比特。\n2. 实体、协议、服务和服务访问点\n    1. 实体：任何可发送或接收信息的硬件或软件过程\n    2. 协议：控制两个对等实体进行通信的规则的集合\n        - 协议和服务的区别：协议是水平的，是控制对等实体之间的通信规则，服务是垂直的，是有下层向上层通过层间接口提供的。\n        - 服务访问点SAP：系统相邻两层的实体进行交互的地方。\n3. TCP/IP的体系结构\n    - ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsolq0bhxsj20dy06qdgv.jpg)\n    - ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsolpxn0m1j206z04bmx8.jpg)","source":"_posts/计算机网络-计算机网络概述.md","raw":"---\ntitle: 计算机网络概述\ntags:\n  - 计算机网络\ncategories:\n  - 计算机网络\ndate: 2017-06-28 18:22:15\n---\n\n### 计算机网络在信息时代的作用\n1. 三大网络：电信网络，有线电视网络，计算机网络。\n2. Internet的叫法：因特网，互联网\n3. 互联网的两个基本特点：连通性和共享\n<!-- more -->\n### 互联网概述\n1. 网络的网络。\n2. 计算机网络由结点和链路组成\n3. 互联网基础结构发展的三个阶段\n    1. 第一个阶段的互联网不能够叫做互联网，而应该称之为互连网，因为它是把几个计算机网络给互连起来。（ARPANET使用TCP/IP协议将计算机连接起来）\n    2. 三级计算机网络，分为主干网、地区网和校园网（企业网），覆盖了全美主要的大学和研究所。（NSFNET国家科学基金网）\n    3. 多层次ISP结构的互联网。（ISP 互联网服务提供者(商)），分主干ISP、地区ISP、和本地ISP。\n        - 互联网交换点IXP的作用：允许两个网络直接相连并交换分组，不需要通过第三个网络（更高层ISP）来转发分组。\n4. 互联网的标准化工作\n    1. 标准化制定过早或过晚都是不好的。\n    2. 互联网协会对互联网进行全面管理。\n    3. 互联网正式标准的制定需要经过三个阶段\n        - 互联网草案\n        - 建议标准\n        - 互联网标准\n### 互联网的组成\n1. 边缘部分：主机\n    1. 计算机通信方式\n        - 客户-服务器方式（C/S方式）：客户发起通信，需要知道服务器程序的地址，但是不需要特殊的硬件和复杂的操作系统；服务器需要专门用来提供服务的程序，可以同时处理多个客户端点的请求，需要程序一直运行并被动等待客户端发送过来的通信请求，一般需要强大的硬件和高级的操作系统的支持。\n        - 对等连接方式（P2P方式）：不需要区分哪个是服务请求方，哪个是服务提供方。\n2. 核心部分：路由器\n    1. 转发收到的分组，实现分组交换的关键构建\n    2. 电路交换的缺陷：在通话的全部时间内，通话的两个用户怒适中占用端到端的通信资源。\n    3. 分组交换的优点：\n        - 高效：在分组传输的过程中动态分配传输带宽，对通信链路逐段占用\n        - 灵活：为每一个分组独立地选择最合适的转发路由\n        - 迅速：以分组作为传送单位，可以不先建立连接就能向其他主机发送分组\n        - 可靠：保证可靠性的网络协议，分布式多路由的分组交换网，使网络由很好的生存性。\n### 计算机网络在我国的发展\n1. 1994年4月20日用64kbit/s专线正式接入互联网。同年5月中国科学院高能物理研究所设立我国的第一个万维网服务器。同年9月中国公用计算机CHINANET正式启动。\n    1. 中国电信互联网CHINANET（原来的中国公用计算机互联网）\n    2. 中国联通互联网UNINET\n    3. 中国移动互联网CMNET\n    4. 中国教育和科研计算机网CERNET\n    5. 中国科学技术网CSTNET\n### 计算机网络的类别\n1. 按照作用范围分类：广域网WAN，城域网MAN，局域网LAN，个人区域网PAN。\n2. 按照网络的使用者分类：公用网，专用网\n### 计算机网络的性能\n1. 速率\n2. 带宽\n3. 吞吐量\n4. 时延：发送时延，传播时延，处理时延，排队时延。\n5. 时延带宽积:以比特为单位的链路长度\n6. 往返时间RTT：\n7. 利用率：D = D。/(1-U)，时延等于空闲时延除以1减去利用率的差。\n### 计算机网络的非性能特征\n1. 费用\n2. 质量\n3. 标准化\n4. 可靠性\n5. 课扩展性和可升级性\n6. 易于管理和维护\n### 计算机网络体系结构\n1. 具有五层协议的体系结构\n    1. 开放系统互联基本参考模型（OSI/RM）\n    2. 计算机网络的各层及其协议的集合就是网络的体系结构\n    3. 体系结构是抽象的，而实现是具体的，是真正在运行的计算机硬件和软件\n    4. 应用层：通过应用进程间的交互来完成特定网络应用。应用层协议定义的是应用进程间通信和交互的规则。\n    5. 运输层：负责向两台主机中进程间的通信提供通用的数据传输服务。（传输控制协议TCP,数据传输单位是报文段，用户数据报协议UDP，数据传输单位是用户数据报。）\n    6. 网络层：把运输层产生的报文段或用户数据报封装成分组或包进行传送。又称为网际层和IP层\n    7. 数据链路层：把网络层交下来的IP数据报组装成帧，在两个相邻结点间的链路上传送帧。\n    8. 物理层：传输的数据的单位是比特。\n2. 实体、协议、服务和服务访问点\n    1. 实体：任何可发送或接收信息的硬件或软件过程\n    2. 协议：控制两个对等实体进行通信的规则的集合\n        - 协议和服务的区别：协议是水平的，是控制对等实体之间的通信规则，服务是垂直的，是有下层向上层通过层间接口提供的。\n        - 服务访问点SAP：系统相邻两层的实体进行交互的地方。\n3. TCP/IP的体系结构\n    - ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsolq0bhxsj20dy06qdgv.jpg)\n    - ![](https://ws1.sinaimg.cn/large/5cc1a78ely1fsolpxn0m1j206z04bmx8.jpg)","slug":"计算机网络-计算机网络概述","published":1,"updated":"2018-06-26T12:13:31.591Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv58o006758ug1qy9su65","content":"<h3 id=\"计算机网络在信息时代的作用\"><a class=\"header-anchor\" href=\"#计算机网络在信息时代的作用\">¶</a>计算机网络在信息时代的作用</h3>\n<ol>\n<li>三大网络：电信网络，有线电视网络，计算机网络。</li>\n<li>Internet的叫法：因特网，互联网</li>\n<li>互联网的两个基本特点：连通性和共享</li>\n</ol>\n<a id=\"more\"></a>\n<h3 id=\"互联网概述\"><a class=\"header-anchor\" href=\"#互联网概述\">¶</a>互联网概述</h3>\n<ol>\n<li>网络的网络。</li>\n<li>计算机网络由结点和链路组成</li>\n<li>互联网基础结构发展的三个阶段\n<ol>\n<li>第一个阶段的互联网不能够叫做互联网，而应该称之为互连网，因为它是把几个计算机网络给互连起来。（ARPANET使用TCP/IP协议将计算机连接起来）</li>\n<li>三级计算机网络，分为主干网、地区网和校园网（企业网），覆盖了全美主要的大学和研究所。（NSFNET国家科学基金网）</li>\n<li>多层次ISP结构的互联网。（ISP 互联网服务提供者(商)），分主干ISP、地区ISP、和本地ISP。\n<ul>\n<li>互联网交换点IXP的作用：允许两个网络直接相连并交换分组，不需要通过第三个网络（更高层ISP）来转发分组。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>互联网的标准化工作\n<ol>\n<li>标准化制定过早或过晚都是不好的。</li>\n<li>互联网协会对互联网进行全面管理。</li>\n<li>互联网正式标准的制定需要经过三个阶段\n<ul>\n<li>互联网草案</li>\n<li>建议标准</li>\n<li>互联网标准</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"互联网的组成\"><a class=\"header-anchor\" href=\"#互联网的组成\">¶</a>互联网的组成</h3>\n<ol>\n<li>边缘部分：主机\n<ol>\n<li>计算机通信方式\n<ul>\n<li>客户-服务器方式（C/S方式）：客户发起通信，需要知道服务器程序的地址，但是不需要特殊的硬件和复杂的操作系统；服务器需要专门用来提供服务的程序，可以同时处理多个客户端点的请求，需要程序一直运行并被动等待客户端发送过来的通信请求，一般需要强大的硬件和高级的操作系统的支持。</li>\n<li>对等连接方式（P2P方式）：不需要区分哪个是服务请求方，哪个是服务提供方。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>核心部分：路由器\n<ol>\n<li>转发收到的分组，实现分组交换的关键构建</li>\n<li>电路交换的缺陷：在通话的全部时间内，通话的两个用户怒适中占用端到端的通信资源。</li>\n<li>分组交换的优点：\n<ul>\n<li>高效：在分组传输的过程中动态分配传输带宽，对通信链路逐段占用</li>\n<li>灵活：为每一个分组独立地选择最合适的转发路由</li>\n<li>迅速：以分组作为传送单位，可以不先建立连接就能向其他主机发送分组</li>\n<li>可靠：保证可靠性的网络协议，分布式多路由的分组交换网，使网络由很好的生存性。</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"计算机网络在我国的发展\"><a class=\"header-anchor\" href=\"#计算机网络在我国的发展\">¶</a>计算机网络在我国的发展</h3>\n<ol>\n<li>1994年4月20日用64kbit/s专线正式接入互联网。同年5月中国科学院高能物理研究所设立我国的第一个万维网服务器。同年9月中国公用计算机CHINANET正式启动。\n<ol>\n<li>中国电信互联网CHINANET（原来的中国公用计算机互联网）</li>\n<li>中国联通互联网UNINET</li>\n<li>中国移动互联网CMNET</li>\n<li>中国教育和科研计算机网CERNET</li>\n<li>中国科学技术网CSTNET</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"计算机网络的类别\"><a class=\"header-anchor\" href=\"#计算机网络的类别\">¶</a>计算机网络的类别</h3>\n<ol>\n<li>按照作用范围分类：广域网WAN，城域网MAN，局域网LAN，个人区域网PAN。</li>\n<li>按照网络的使用者分类：公用网，专用网</li>\n</ol>\n<h3 id=\"计算机网络的性能\"><a class=\"header-anchor\" href=\"#计算机网络的性能\">¶</a>计算机网络的性能</h3>\n<ol>\n<li>速率</li>\n<li>带宽</li>\n<li>吞吐量</li>\n<li>时延：发送时延，传播时延，处理时延，排队时延。</li>\n<li>时延带宽积:以比特为单位的链路长度</li>\n<li>往返时间RTT：</li>\n<li>利用率：D = D。/(1-U)，时延等于空闲时延除以1减去利用率的差。</li>\n</ol>\n<h3 id=\"计算机网络的非性能特征\"><a class=\"header-anchor\" href=\"#计算机网络的非性能特征\">¶</a>计算机网络的非性能特征</h3>\n<ol>\n<li>费用</li>\n<li>质量</li>\n<li>标准化</li>\n<li>可靠性</li>\n<li>课扩展性和可升级性</li>\n<li>易于管理和维护</li>\n</ol>\n<h3 id=\"计算机网络体系结构\"><a class=\"header-anchor\" href=\"#计算机网络体系结构\">¶</a>计算机网络体系结构</h3>\n<ol>\n<li>具有五层协议的体系结构\n<ol>\n<li>开放系统互联基本参考模型（OSI/RM）</li>\n<li>计算机网络的各层及其协议的集合就是网络的体系结构</li>\n<li>体系结构是抽象的，而实现是具体的，是真正在运行的计算机硬件和软件</li>\n<li>应用层：通过应用进程间的交互来完成特定网络应用。应用层协议定义的是应用进程间通信和交互的规则。</li>\n<li>运输层：负责向两台主机中进程间的通信提供通用的数据传输服务。（传输控制协议TCP,数据传输单位是报文段，用户数据报协议UDP，数据传输单位是用户数据报。）</li>\n<li>网络层：把运输层产生的报文段或用户数据报封装成分组或包进行传送。又称为网际层和IP层</li>\n<li>数据链路层：把网络层交下来的IP数据报组装成帧，在两个相邻结点间的链路上传送帧。</li>\n<li>物理层：传输的数据的单位是比特。</li>\n</ol>\n</li>\n<li>实体、协议、服务和服务访问点\n<ol>\n<li>实体：任何可发送或接收信息的硬件或软件过程</li>\n<li>协议：控制两个对等实体进行通信的规则的集合\n<ul>\n<li>协议和服务的区别：协议是水平的，是控制对等实体之间的通信规则，服务是垂直的，是有下层向上层通过层间接口提供的。</li>\n<li>服务访问点SAP：系统相邻两层的实体进行交互的地方。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>TCP/IP的体系结构\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsolq0bhxsj20dy06qdgv.jpg\" alt=\"\"></li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsolpxn0m1j206z04bmx8.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h3 id=\"计算机网络在信息时代的作用\"><a class=\"header-anchor\" href=\"#计算机网络在信息时代的作用\">¶</a>计算机网络在信息时代的作用</h3>\n<ol>\n<li>三大网络：电信网络，有线电视网络，计算机网络。</li>\n<li>Internet的叫法：因特网，互联网</li>\n<li>互联网的两个基本特点：连通性和共享</li>\n</ol>","more":"<h3 id=\"互联网概述\"><a class=\"header-anchor\" href=\"#互联网概述\">¶</a>互联网概述</h3>\n<ol>\n<li>网络的网络。</li>\n<li>计算机网络由结点和链路组成</li>\n<li>互联网基础结构发展的三个阶段\n<ol>\n<li>第一个阶段的互联网不能够叫做互联网，而应该称之为互连网，因为它是把几个计算机网络给互连起来。（ARPANET使用TCP/IP协议将计算机连接起来）</li>\n<li>三级计算机网络，分为主干网、地区网和校园网（企业网），覆盖了全美主要的大学和研究所。（NSFNET国家科学基金网）</li>\n<li>多层次ISP结构的互联网。（ISP 互联网服务提供者(商)），分主干ISP、地区ISP、和本地ISP。\n<ul>\n<li>互联网交换点IXP的作用：允许两个网络直接相连并交换分组，不需要通过第三个网络（更高层ISP）来转发分组。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>互联网的标准化工作\n<ol>\n<li>标准化制定过早或过晚都是不好的。</li>\n<li>互联网协会对互联网进行全面管理。</li>\n<li>互联网正式标准的制定需要经过三个阶段\n<ul>\n<li>互联网草案</li>\n<li>建议标准</li>\n<li>互联网标准</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"互联网的组成\"><a class=\"header-anchor\" href=\"#互联网的组成\">¶</a>互联网的组成</h3>\n<ol>\n<li>边缘部分：主机\n<ol>\n<li>计算机通信方式\n<ul>\n<li>客户-服务器方式（C/S方式）：客户发起通信，需要知道服务器程序的地址，但是不需要特殊的硬件和复杂的操作系统；服务器需要专门用来提供服务的程序，可以同时处理多个客户端点的请求，需要程序一直运行并被动等待客户端发送过来的通信请求，一般需要强大的硬件和高级的操作系统的支持。</li>\n<li>对等连接方式（P2P方式）：不需要区分哪个是服务请求方，哪个是服务提供方。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>核心部分：路由器\n<ol>\n<li>转发收到的分组，实现分组交换的关键构建</li>\n<li>电路交换的缺陷：在通话的全部时间内，通话的两个用户怒适中占用端到端的通信资源。</li>\n<li>分组交换的优点：\n<ul>\n<li>高效：在分组传输的过程中动态分配传输带宽，对通信链路逐段占用</li>\n<li>灵活：为每一个分组独立地选择最合适的转发路由</li>\n<li>迅速：以分组作为传送单位，可以不先建立连接就能向其他主机发送分组</li>\n<li>可靠：保证可靠性的网络协议，分布式多路由的分组交换网，使网络由很好的生存性。</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"计算机网络在我国的发展\"><a class=\"header-anchor\" href=\"#计算机网络在我国的发展\">¶</a>计算机网络在我国的发展</h3>\n<ol>\n<li>1994年4月20日用64kbit/s专线正式接入互联网。同年5月中国科学院高能物理研究所设立我国的第一个万维网服务器。同年9月中国公用计算机CHINANET正式启动。\n<ol>\n<li>中国电信互联网CHINANET（原来的中国公用计算机互联网）</li>\n<li>中国联通互联网UNINET</li>\n<li>中国移动互联网CMNET</li>\n<li>中国教育和科研计算机网CERNET</li>\n<li>中国科学技术网CSTNET</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"计算机网络的类别\"><a class=\"header-anchor\" href=\"#计算机网络的类别\">¶</a>计算机网络的类别</h3>\n<ol>\n<li>按照作用范围分类：广域网WAN，城域网MAN，局域网LAN，个人区域网PAN。</li>\n<li>按照网络的使用者分类：公用网，专用网</li>\n</ol>\n<h3 id=\"计算机网络的性能\"><a class=\"header-anchor\" href=\"#计算机网络的性能\">¶</a>计算机网络的性能</h3>\n<ol>\n<li>速率</li>\n<li>带宽</li>\n<li>吞吐量</li>\n<li>时延：发送时延，传播时延，处理时延，排队时延。</li>\n<li>时延带宽积:以比特为单位的链路长度</li>\n<li>往返时间RTT：</li>\n<li>利用率：D = D。/(1-U)，时延等于空闲时延除以1减去利用率的差。</li>\n</ol>\n<h3 id=\"计算机网络的非性能特征\"><a class=\"header-anchor\" href=\"#计算机网络的非性能特征\">¶</a>计算机网络的非性能特征</h3>\n<ol>\n<li>费用</li>\n<li>质量</li>\n<li>标准化</li>\n<li>可靠性</li>\n<li>课扩展性和可升级性</li>\n<li>易于管理和维护</li>\n</ol>\n<h3 id=\"计算机网络体系结构\"><a class=\"header-anchor\" href=\"#计算机网络体系结构\">¶</a>计算机网络体系结构</h3>\n<ol>\n<li>具有五层协议的体系结构\n<ol>\n<li>开放系统互联基本参考模型（OSI/RM）</li>\n<li>计算机网络的各层及其协议的集合就是网络的体系结构</li>\n<li>体系结构是抽象的，而实现是具体的，是真正在运行的计算机硬件和软件</li>\n<li>应用层：通过应用进程间的交互来完成特定网络应用。应用层协议定义的是应用进程间通信和交互的规则。</li>\n<li>运输层：负责向两台主机中进程间的通信提供通用的数据传输服务。（传输控制协议TCP,数据传输单位是报文段，用户数据报协议UDP，数据传输单位是用户数据报。）</li>\n<li>网络层：把运输层产生的报文段或用户数据报封装成分组或包进行传送。又称为网际层和IP层</li>\n<li>数据链路层：把网络层交下来的IP数据报组装成帧，在两个相邻结点间的链路上传送帧。</li>\n<li>物理层：传输的数据的单位是比特。</li>\n</ol>\n</li>\n<li>实体、协议、服务和服务访问点\n<ol>\n<li>实体：任何可发送或接收信息的硬件或软件过程</li>\n<li>协议：控制两个对等实体进行通信的规则的集合\n<ul>\n<li>协议和服务的区别：协议是水平的，是控制对等实体之间的通信规则，服务是垂直的，是有下层向上层通过层间接口提供的。</li>\n<li>服务访问点SAP：系统相邻两层的实体进行交互的地方。</li>\n</ul>\n</li>\n</ol>\n</li>\n<li>TCP/IP的体系结构\n<ul>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsolq0bhxsj20dy06qdgv.jpg\" alt=\"\"></li>\n<li><img src=\"https://ws1.sinaimg.cn/large/5cc1a78ely1fsolpxn0m1j206z04bmx8.jpg\" alt=\"\"></li>\n</ul>\n</li>\n</ol>"},{"title":"物理层","date":"2017-07-10T02:22:15.000Z","_content":"\n1. 物理层的基本概念\n    1. 考虑的是怎样才能在连接各种计算机的传输媒体 上传输数据比特流，而不是指具体的媒体。\n    2. 确定传输媒体的接口有关的一些特性\n        - 机械特性\n        - 电气特性\n        - 功能特性\n        - 过程特性\n<!-- more -->\n2. 数据通信的基础知识\n    1. 数据通信系统的模型\n        - 源系统：\n            - 原点\n            - 发送器\n        - 传输系统\n        - 目的系统\n            - 接收器\n            - 终点\n        - 模拟信号和数字信号\n    2. 有关信道的几个基本概念\n        - 单向通信（单工通信）\n        - 双向交替通信（半双工通信）\n        - 双向同时通信（全双工通信）\n        - 基带调制（编码）和带通调制\n        - 常用编码方式\n            - 不归零制\n            - 归零制-\n            - 曼彻斯特编码\n            - 差分曼彻斯特编码\n        - 基本的带通调制方法\n            - 调幅\n            - 调频\n            - 调相\n            - 正交振幅调制QAM\n    3. 信道的极限容量\n        - 限制码元在信道上传输速率的因素有两个\n            - 信道能够通过的频率范围\n            - 信噪比\n    4. 物理层下面的传输媒体\n        - 导引型传输媒体\n           - 双绞线\n           - 同轴电缆\n           - 光缆：多模光纤和单模光纤\n        - 非导引型传输媒体\n           - 微波接力通信\n              - 微波波段频率很高，其频段范围也很宽，通信信道的容量很大\n              - 因为工业干扰和天电干扰的主要频谱成分比微波频率低得多，对微波通信的危害比对短波和米波通信小得多，因此微波传输质量较高。\n              - 与相同容量和长度的电缆载波通信比较，微波接力通信建设投资少，见效快，易于跨越山区，江河。\n           - 卫星通信\n    5. 信道复用技术\n        - 频分复用\n        - 时分复用\n        - 统计时分复用\n        - 波分复用：光的频分复用\n        - 码分复用\n    6. 数字传输系统\n    7. 宽带接入技术\n       - ADSL非对称数字用户线：用数字技术对现有的模拟电话用户进行改造。\n       - 光纤同轴混合网：把原有有线电视网中的同轴电缆主干部分换成光纤，然后通过同轴电缆传送到每个家庭。\n       - FTTx技术","source":"_posts/计算机网络-物理层.md","raw":"---\ntitle: 物理层\ntags:\n  - 物理层\n  - 计算机网络\ncategories:\n  - 计算机网络\ndate: 2017-07-10 10:22:15\n---\n\n1. 物理层的基本概念\n    1. 考虑的是怎样才能在连接各种计算机的传输媒体 上传输数据比特流，而不是指具体的媒体。\n    2. 确定传输媒体的接口有关的一些特性\n        - 机械特性\n        - 电气特性\n        - 功能特性\n        - 过程特性\n<!-- more -->\n2. 数据通信的基础知识\n    1. 数据通信系统的模型\n        - 源系统：\n            - 原点\n            - 发送器\n        - 传输系统\n        - 目的系统\n            - 接收器\n            - 终点\n        - 模拟信号和数字信号\n    2. 有关信道的几个基本概念\n        - 单向通信（单工通信）\n        - 双向交替通信（半双工通信）\n        - 双向同时通信（全双工通信）\n        - 基带调制（编码）和带通调制\n        - 常用编码方式\n            - 不归零制\n            - 归零制-\n            - 曼彻斯特编码\n            - 差分曼彻斯特编码\n        - 基本的带通调制方法\n            - 调幅\n            - 调频\n            - 调相\n            - 正交振幅调制QAM\n    3. 信道的极限容量\n        - 限制码元在信道上传输速率的因素有两个\n            - 信道能够通过的频率范围\n            - 信噪比\n    4. 物理层下面的传输媒体\n        - 导引型传输媒体\n           - 双绞线\n           - 同轴电缆\n           - 光缆：多模光纤和单模光纤\n        - 非导引型传输媒体\n           - 微波接力通信\n              - 微波波段频率很高，其频段范围也很宽，通信信道的容量很大\n              - 因为工业干扰和天电干扰的主要频谱成分比微波频率低得多，对微波通信的危害比对短波和米波通信小得多，因此微波传输质量较高。\n              - 与相同容量和长度的电缆载波通信比较，微波接力通信建设投资少，见效快，易于跨越山区，江河。\n           - 卫星通信\n    5. 信道复用技术\n        - 频分复用\n        - 时分复用\n        - 统计时分复用\n        - 波分复用：光的频分复用\n        - 码分复用\n    6. 数字传输系统\n    7. 宽带接入技术\n       - ADSL非对称数字用户线：用数字技术对现有的模拟电话用户进行改造。\n       - 光纤同轴混合网：把原有有线电视网中的同轴电缆主干部分换成光纤，然后通过同轴电缆传送到每个家庭。\n       - FTTx技术","slug":"计算机网络-物理层","published":1,"updated":"2018-06-26T12:13:31.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cjiwxv58r006b58ug5vkq9he3","content":"<ol>\n<li>物理层的基本概念\n<ol>\n<li>考虑的是怎样才能在连接各种计算机的传输媒体 上传输数据比特流，而不是指具体的媒体。</li>\n<li>确定传输媒体的接口有关的一些特性\n<ul>\n<li>机械特性</li>\n<li>电气特性</li>\n<li>功能特性</li>\n<li>过程特性</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n<a id=\"more\"></a>\n<ol start=\"2\">\n<li>数据通信的基础知识\n<ol>\n<li>数据通信系统的模型\n<ul>\n<li>源系统：\n<ul>\n<li>原点</li>\n<li>发送器</li>\n</ul>\n</li>\n<li>传输系统</li>\n<li>目的系统\n<ul>\n<li>接收器</li>\n<li>终点</li>\n</ul>\n</li>\n<li>模拟信号和数字信号</li>\n</ul>\n</li>\n<li>有关信道的几个基本概念\n<ul>\n<li>单向通信（单工通信）</li>\n<li>双向交替通信（半双工通信）</li>\n<li>双向同时通信（全双工通信）</li>\n<li>基带调制（编码）和带通调制</li>\n<li>常用编码方式\n<ul>\n<li>不归零制</li>\n<li>归零制-</li>\n<li>曼彻斯特编码</li>\n<li>差分曼彻斯特编码</li>\n</ul>\n</li>\n<li>基本的带通调制方法\n<ul>\n<li>调幅</li>\n<li>调频</li>\n<li>调相</li>\n<li>正交振幅调制QAM</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>信道的极限容量\n<ul>\n<li>限制码元在信道上传输速率的因素有两个\n<ul>\n<li>信道能够通过的频率范围</li>\n<li>信噪比</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>物理层下面的传输媒体\n<ul>\n<li>导引型传输媒体\n<ul>\n<li>双绞线</li>\n<li>同轴电缆</li>\n<li>光缆：多模光纤和单模光纤</li>\n</ul>\n</li>\n<li>非导引型传输媒体\n<ul>\n<li>微波接力通信\n<ul>\n<li>微波波段频率很高，其频段范围也很宽，通信信道的容量很大</li>\n<li>因为工业干扰和天电干扰的主要频谱成分比微波频率低得多，对微波通信的危害比对短波和米波通信小得多，因此微波传输质量较高。</li>\n<li>与相同容量和长度的电缆载波通信比较，微波接力通信建设投资少，见效快，易于跨越山区，江河。</li>\n</ul>\n</li>\n<li>卫星通信</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>信道复用技术\n<ul>\n<li>频分复用</li>\n<li>时分复用</li>\n<li>统计时分复用</li>\n<li>波分复用：光的频分复用</li>\n<li>码分复用</li>\n</ul>\n</li>\n<li>数字传输系统</li>\n<li>宽带接入技术\n<ul>\n<li>ADSL非对称数字用户线：用数字技术对现有的模拟电话用户进行改造。</li>\n<li>光纤同轴混合网：把原有有线电视网中的同轴电缆主干部分换成光纤，然后通过同轴电缆传送到每个家庭。</li>\n<li>FTTx技术</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<ol>\n<li>物理层的基本概念\n<ol>\n<li>考虑的是怎样才能在连接各种计算机的传输媒体 上传输数据比特流，而不是指具体的媒体。</li>\n<li>确定传输媒体的接口有关的一些特性\n<ul>\n<li>机械特性</li>\n<li>电气特性</li>\n<li>功能特性</li>\n<li>过程特性</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>","more":"<ol start=\"2\">\n<li>数据通信的基础知识\n<ol>\n<li>数据通信系统的模型\n<ul>\n<li>源系统：\n<ul>\n<li>原点</li>\n<li>发送器</li>\n</ul>\n</li>\n<li>传输系统</li>\n<li>目的系统\n<ul>\n<li>接收器</li>\n<li>终点</li>\n</ul>\n</li>\n<li>模拟信号和数字信号</li>\n</ul>\n</li>\n<li>有关信道的几个基本概念\n<ul>\n<li>单向通信（单工通信）</li>\n<li>双向交替通信（半双工通信）</li>\n<li>双向同时通信（全双工通信）</li>\n<li>基带调制（编码）和带通调制</li>\n<li>常用编码方式\n<ul>\n<li>不归零制</li>\n<li>归零制-</li>\n<li>曼彻斯特编码</li>\n<li>差分曼彻斯特编码</li>\n</ul>\n</li>\n<li>基本的带通调制方法\n<ul>\n<li>调幅</li>\n<li>调频</li>\n<li>调相</li>\n<li>正交振幅调制QAM</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>信道的极限容量\n<ul>\n<li>限制码元在信道上传输速率的因素有两个\n<ul>\n<li>信道能够通过的频率范围</li>\n<li>信噪比</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>物理层下面的传输媒体\n<ul>\n<li>导引型传输媒体\n<ul>\n<li>双绞线</li>\n<li>同轴电缆</li>\n<li>光缆：多模光纤和单模光纤</li>\n</ul>\n</li>\n<li>非导引型传输媒体\n<ul>\n<li>微波接力通信\n<ul>\n<li>微波波段频率很高，其频段范围也很宽，通信信道的容量很大</li>\n<li>因为工业干扰和天电干扰的主要频谱成分比微波频率低得多，对微波通信的危害比对短波和米波通信小得多，因此微波传输质量较高。</li>\n<li>与相同容量和长度的电缆载波通信比较，微波接力通信建设投资少，见效快，易于跨越山区，江河。</li>\n</ul>\n</li>\n<li>卫星通信</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>信道复用技术\n<ul>\n<li>频分复用</li>\n<li>时分复用</li>\n<li>统计时分复用</li>\n<li>波分复用：光的频分复用</li>\n<li>码分复用</li>\n</ul>\n</li>\n<li>数字传输系统</li>\n<li>宽带接入技术\n<ul>\n<li>ADSL非对称数字用户线：用数字技术对现有的模拟电话用户进行改造。</li>\n<li>光纤同轴混合网：把原有有线电视网中的同轴电缆主干部分换成光纤，然后通过同轴电缆传送到每个家庭。</li>\n<li>FTTx技术</li>\n</ul>\n</li>\n</ol>\n</li>\n</ol>"}],"PostAsset":[],"PostCategory":[{"post_id":"cjiwxv53j000658ug67owhodm","category_id":"cjiwxv53g000358ugeyszfkqo","_id":"cjiwxv53o000c58ug4ctmhio5"},{"post_id":"cjiwxv53b000158ugp0yu2ly0","category_id":"cjiwxv53g000358ugeyszfkqo","_id":"cjiwxv53r000g58ugeg8l747e"},{"post_id":"cjiwxv53e000258ugyuvl2i5e","category_id":"cjiwxv53k000858ug8gzxxdxo","_id":"cjiwxv53t000l58ugyopi5yyh"},{"post_id":"cjiwxv53n000b58ug2pzcmn8u","category_id":"cjiwxv53k000858ug8gzxxdxo","_id":"cjiwxv53v000o58ugj10ny5je"},{"post_id":"cjiwxv53i000558ug8bmlbvgp","category_id":"cjiwxv53g000358ugeyszfkqo","_id":"cjiwxv53w000q58ugq68aeiej"},{"post_id":"cjiwxv53k000758ug2crixz2j","category_id":"cjiwxv53t000k58ugplo7sohs","_id":"cjiwxv53z000x58ugb6n4a9wf"},{"post_id":"cjiwxv53v000p58ug5ylsr3ou","category_id":"cjiwxv53k000858ug8gzxxdxo","_id":"cjiwxv540001158ugp0pzke9p"},{"post_id":"cjiwxv53l000a58ugdufs09yo","category_id":"cjiwxv53t000k58ugplo7sohs","_id":"cjiwxv541001458ugsi6yk6d5"},{"post_id":"cjiwxv53q000f58ugg7ldclju","category_id":"cjiwxv53y000w58ugb9j9xvx2","_id":"cjiwxv544001b58ug8mx2tzx0"},{"post_id":"cjiwxv53s000i58ugxr5p55r1","category_id":"cjiwxv53y000w58ugb9j9xvx2","_id":"cjiwxv546001i58ugf0nh7k3t"},{"post_id":"cjiwxv53u000n58ugxqa329ak","category_id":"cjiwxv53y000w58ugb9j9xvx2","_id":"cjiwxv548001n58ug2hl8ugo5"},{"post_id":"cjiwxv546001j58ugex1zjmy3","category_id":"cjiwxv53y000w58ugb9j9xvx2","_id":"cjiwxv54a001s58ug7yp1buun"},{"post_id":"cjiwxv547001m58ugieuclzrt","category_id":"cjiwxv546001h58ugp8o80nqv","_id":"cjiwxv54c001v58ug1f7ysikl"},{"post_id":"cjiwxv53w000t58ugtlxvo5ui","category_id":"cjiwxv546001h58ugp8o80nqv","_id":"cjiwxv54e002058uglbogj0hh"},{"post_id":"cjiwxv53x000v58ug61mnzwai","category_id":"cjiwxv546001h58ugp8o80nqv","_id":"cjiwxv54f002358ugagl31msk"},{"post_id":"cjiwxv53z001058ugpxgzdrgm","category_id":"cjiwxv546001h58ugp8o80nqv","_id":"cjiwxv54i002958ugiikai23w"},{"post_id":"cjiwxv540001358ugt2idb3m4","category_id":"cjiwxv546001h58ugp8o80nqv","_id":"cjiwxv54k002g58ug90emsp8o"},{"post_id":"cjiwxv541001658ugvj210tr9","category_id":"cjiwxv546001h58ugp8o80nqv","_id":"cjiwxv54n002l58ugepkld0ai"},{"post_id":"cjiwxv543001958ug8d5vjfs5","category_id":"cjiwxv546001h58ugp8o80nqv","_id":"cjiwxv54o002o58ug94d5jpd5"},{"post_id":"cjiwxv544001d58ugkzr1td8f","category_id":"cjiwxv546001h58ugp8o80nqv","_id":"cjiwxv54p002r58ugqgzwi48k"},{"post_id":"cjiwxv545001f58ug7xsn4ptc","category_id":"cjiwxv546001h58ugp8o80nqv","_id":"cjiwxv54r002v58ugb7sswdje"},{"post_id":"cjiwxv548001o58ug7ivk6e9f","category_id":"cjiwxv54p002q58ug3nt2dv3f","_id":"cjiwxv54s003058ugu8uqhn7n"},{"post_id":"cjiwxv54a001r58ughbd596d0","category_id":"cjiwxv54p002q58ug3nt2dv3f","_id":"cjiwxv54t003358ugqpwn5p4g"},{"post_id":"cjiwxv54b001u58ugu6h53mx7","category_id":"cjiwxv54p002q58ug3nt2dv3f","_id":"cjiwxv54u003858ugqgxrp3ay"},{"post_id":"cjiwxv54d001z58ugbzpy3p75","category_id":"cjiwxv54p002q58ug3nt2dv3f","_id":"cjiwxv54v003c58ugvxo5g3dp"},{"post_id":"cjiwxv54e002158ugu5b6j4q0","category_id":"cjiwxv54p002q58ug3nt2dv3f","_id":"cjiwxv54w003f58uglwoa0lyn"},{"post_id":"cjiwxv54g002558ug7ym35ob9","category_id":"cjiwxv54p002q58ug3nt2dv3f","_id":"cjiwxv54x003j58ugp4b9wyxs"},{"post_id":"cjiwxv54h002758ug2mf7acbq","category_id":"cjiwxv54w003e58ugecnhijzz","_id":"cjiwxv54y003o58ug5np8ncg2"},{"post_id":"cjiwxv54j002c58ugvzkwtjn8","category_id":"cjiwxv54p002q58ug3nt2dv3f","_id":"cjiwxv54z003t58ugh3jii9oy"},{"post_id":"cjiwxv54k002e58ugdfgr1vm7","category_id":"cjiwxv54p002q58ug3nt2dv3f","_id":"cjiwxv550003w58uguplr2avg"},{"post_id":"cjiwxv54l002h58ugo191fz9s","category_id":"cjiwxv54w003e58ugecnhijzz","_id":"cjiwxv551003z58ug7iwqud2n"},{"post_id":"cjiwxv54m002j58uguv4a7iud","category_id":"cjiwxv54w003e58ugecnhijzz","_id":"cjiwxv551004158ug3pyna7p7"},{"post_id":"cjiwxv58j006058ugquuycp36","category_id":"cjiwxv54w003e58ugecnhijzz","_id":"cjiwxv58p006858ug7sc5s912"},{"post_id":"cjiwxv58l006258ugylv00odp","category_id":"cjiwxv54w003e58ugecnhijzz","_id":"cjiwxv58t006c58ugu7a0kocg"},{"post_id":"cjiwxv58n006558ugcjp08p7x","category_id":"cjiwxv58q006958ugkc06fyqd","_id":"cjiwxv58v006g58ug92a40vtl"},{"post_id":"cjiwxv58o006758ug1qy9su65","category_id":"cjiwxv58q006958ugkc06fyqd","_id":"cjiwxv58x006j58ugej8mpp2f"},{"post_id":"cjiwxv58r006b58ug5vkq9he3","category_id":"cjiwxv58q006958ugkc06fyqd","_id":"cjiwxv58x006n58ugbvugd6h3"}],"PostTag":[{"post_id":"cjiwxv53b000158ugp0yu2ly0","tag_id":"cjiwxv53h000458ugxqebu5fm","_id":"cjiwxv53s000h58ug2qji9ejl"},{"post_id":"cjiwxv53b000158ugp0yu2ly0","tag_id":"cjiwxv53l000958ug3tlcv1yt","_id":"cjiwxv53t000j58ug51vanwic"},{"post_id":"cjiwxv53e000258ugyuvl2i5e","tag_id":"cjiwxv53o000e58ugycisyg7q","_id":"cjiwxv53x000u58ugltikr3xl"},{"post_id":"cjiwxv53e000258ugyuvl2i5e","tag_id":"cjiwxv53t000m58ugnzh1pqwz","_id":"cjiwxv53z000y58ugc1umnxfb"},{"post_id":"cjiwxv53v000p58ug5ylsr3ou","tag_id":"cjiwxv53t000m58ugnzh1pqwz","_id":"cjiwxv540001258ughu29w1c4"},{"post_id":"cjiwxv53i000558ug8bmlbvgp","tag_id":"cjiwxv53h000458ugxqebu5fm","_id":"cjiwxv542001858ugsbadml5i"},{"post_id":"cjiwxv53i000558ug8bmlbvgp","tag_id":"cjiwxv53z000z58uggltjrmvc","_id":"cjiwxv544001c58ughjgoabjj"},{"post_id":"cjiwxv53j000658ug67owhodm","tag_id":"cjiwxv53h000458ugxqebu5fm","_id":"cjiwxv546001g58ugfrxeui0v"},{"post_id":"cjiwxv53j000658ug67owhodm","tag_id":"cjiwxv542001758ugwrf80mt2","_id":"cjiwxv547001k58ugho6jfy6r"},{"post_id":"cjiwxv53k000758ug2crixz2j","tag_id":"cjiwxv545001e58ugwnzkm50f","_id":"cjiwxv54b001t58ughqq7y0r4"},{"post_id":"cjiwxv53k000758ug2crixz2j","tag_id":"cjiwxv547001l58ug1akdhiip","_id":"cjiwxv54d001x58ugr12gp1gc"},{"post_id":"cjiwxv53l000a58ugdufs09yo","tag_id":"cjiwxv545001e58ugwnzkm50f","_id":"cjiwxv54h002658ug54suuj07"},{"post_id":"cjiwxv53l000a58ugdufs09yo","tag_id":"cjiwxv547001l58ug1akdhiip","_id":"cjiwxv54i002a58ug5xt94spx"},{"post_id":"cjiwxv53n000b58ug2pzcmn8u","tag_id":"cjiwxv53o000e58ugycisyg7q","_id":"cjiwxv54j002d58ugw35gjyey"},{"post_id":"cjiwxv53q000f58ugg7ldclju","tag_id":"cjiwxv54i002b58ug4prcxdss","_id":"cjiwxv54p002s58ug9dfod55m"},{"post_id":"cjiwxv53q000f58ugg7ldclju","tag_id":"cjiwxv54m002i58ugpfjxv92c","_id":"cjiwxv54q002t58uga0slygll"},{"post_id":"cjiwxv53q000f58ugg7ldclju","tag_id":"cjiwxv54o002m58ug2821kxjv","_id":"cjiwxv54r002x58ug2jyaik48"},{"post_id":"cjiwxv53s000i58ugxr5p55r1","tag_id":"cjiwxv54i002b58ug4prcxdss","_id":"cjiwxv54t003458ugllm9xbtm"},{"post_id":"cjiwxv53s000i58ugxr5p55r1","tag_id":"cjiwxv54m002i58ugpfjxv92c","_id":"cjiwxv54t003558ugt7q654z2"},{"post_id":"cjiwxv53s000i58ugxr5p55r1","tag_id":"cjiwxv54o002m58ug2821kxjv","_id":"cjiwxv54u003958ugsfk5gozj"},{"post_id":"cjiwxv53u000n58ugxqa329ak","tag_id":"cjiwxv54i002b58ug4prcxdss","_id":"cjiwxv54w003g58ugaic4vztw"},{"post_id":"cjiwxv53u000n58ugxqa329ak","tag_id":"cjiwxv54u003658ugvagqu4dm","_id":"cjiwxv54w003h58ugu06jnzkj"},{"post_id":"cjiwxv53u000n58ugxqa329ak","tag_id":"cjiwxv54o002m58ug2821kxjv","_id":"cjiwxv54x003l58ugerpgp4vn"},{"post_id":"cjiwxv53w000t58ugtlxvo5ui","tag_id":"cjiwxv54w003d58ugx3pd879c","_id":"cjiwxv54y003p58ugddzjp57b"},{"post_id":"cjiwxv53w000t58ugtlxvo5ui","tag_id":"cjiwxv54x003i58ugsyfupobd","_id":"cjiwxv54z003q58ugzggf2232"},{"post_id":"cjiwxv53x000v58ug61mnzwai","tag_id":"cjiwxv54i002b58ug4prcxdss","_id":"cjiwxv551003x58ugzojhcog3"},{"post_id":"cjiwxv53x000v58ug61mnzwai","tag_id":"cjiwxv54x003i58ugsyfupobd","_id":"cjiwxv551003y58ugaz06axoc"},{"post_id":"cjiwxv53z001058ugpxgzdrgm","tag_id":"cjiwxv550003u58ugsw0o844q","_id":"cjiwxv552004358ugdf3sva1w"},{"post_id":"cjiwxv53z001058ugpxgzdrgm","tag_id":"cjiwxv54x003i58ugsyfupobd","_id":"cjiwxv552004458ug2dh5ep4a"},{"post_id":"cjiwxv540001358ugt2idb3m4","tag_id":"cjiwxv54x003i58ugsyfupobd","_id":"cjiwxv553004658ug6erryinx"},{"post_id":"cjiwxv541001658ugvj210tr9","tag_id":"cjiwxv552004558ugxttlqlvi","_id":"cjiwxv554004958ugwunyii9b"},{"post_id":"cjiwxv541001658ugvj210tr9","tag_id":"cjiwxv54x003i58ugsyfupobd","_id":"cjiwxv554004a58ugnoxe8keg"},{"post_id":"cjiwxv543001958ug8d5vjfs5","tag_id":"cjiwxv554004858ug3y7zmx6d","_id":"cjiwxv555004e58ugk1im1xb3"},{"post_id":"cjiwxv543001958ug8d5vjfs5","tag_id":"cjiwxv554004b58ugoa08pu6d","_id":"cjiwxv555004f58ugux4ew21v"},{"post_id":"cjiwxv543001958ug8d5vjfs5","tag_id":"cjiwxv54x003i58ugsyfupobd","_id":"cjiwxv556004h58ug31jek56h"},{"post_id":"cjiwxv544001d58ugkzr1td8f","tag_id":"cjiwxv550003u58ugsw0o844q","_id":"cjiwxv556004j58ug6i1wavvz"},{"post_id":"cjiwxv544001d58ugkzr1td8f","tag_id":"cjiwxv54x003i58ugsyfupobd","_id":"cjiwxv557004k58ug0k6iu4hk"},{"post_id":"cjiwxv545001f58ug7xsn4ptc","tag_id":"cjiwxv556004i58ugn0i8pu58","_id":"cjiwxv557004n58uggr9el81n"},{"post_id":"cjiwxv545001f58ug7xsn4ptc","tag_id":"cjiwxv54x003i58ugsyfupobd","_id":"cjiwxv558004o58ug3l4976pn"},{"post_id":"cjiwxv546001j58ugex1zjmy3","tag_id":"cjiwxv54i002b58ug4prcxdss","_id":"cjiwxv559004s58ugnve9ynkp"},{"post_id":"cjiwxv546001j58ugex1zjmy3","tag_id":"cjiwxv558004p58ugrwc2pwzc","_id":"cjiwxv559004t58ugirbro30m"},{"post_id":"cjiwxv546001j58ugex1zjmy3","tag_id":"cjiwxv54o002m58ug2821kxjv","_id":"cjiwxv559004v58ugoxbg1c6h"},{"post_id":"cjiwxv547001m58ugieuclzrt","tag_id":"cjiwxv558004r58ug5istibs5","_id":"cjiwxv55a004x58ugecm84flj"},{"post_id":"cjiwxv547001m58ugieuclzrt","tag_id":"cjiwxv54x003i58ugsyfupobd","_id":"cjiwxv55a004y58ug6zq2v2bt"},{"post_id":"cjiwxv548001o58ug7ivk6e9f","tag_id":"cjiwxv55a004w58ug0uaxho4u","_id":"cjiwxv55c005158ugpdlpov0g"},{"post_id":"cjiwxv548001o58ug7ivk6e9f","tag_id":"cjiwxv55a004z58ugfn41e9g9","_id":"cjiwxv55c005258ugydn3fuea"},{"post_id":"cjiwxv54a001r58ughbd596d0","tag_id":"cjiwxv55a004w58ug0uaxho4u","_id":"cjiwxv55d005558ugcken2l9f"},{"post_id":"cjiwxv54a001r58ughbd596d0","tag_id":"cjiwxv55c005358ugmh1xr6qp","_id":"cjiwxv55d005658ugs552j9yc"},{"post_id":"cjiwxv54b001u58ugu6h53mx7","tag_id":"cjiwxv55a004w58ug0uaxho4u","_id":"cjiwxv55e005958ugrxtodiwy"},{"post_id":"cjiwxv54b001u58ugu6h53mx7","tag_id":"cjiwxv55d005758ug5vbvw8ax","_id":"cjiwxv55e005a58ugsgk26ast"},{"post_id":"cjiwxv54d001z58ugbzpy3p75","tag_id":"cjiwxv55a004w58ug0uaxho4u","_id":"cjiwxv55f005d58ug7j2d746r"},{"post_id":"cjiwxv54d001z58ugbzpy3p75","tag_id":"cjiwxv55e005b58ugltwi5oj4","_id":"cjiwxv55f005e58ug5jcovpjh"},{"post_id":"cjiwxv54e002158ugu5b6j4q0","tag_id":"cjiwxv55a004w58ug0uaxho4u","_id":"cjiwxv55g005i58ugo1xko8hr"},{"post_id":"cjiwxv54e002158ugu5b6j4q0","tag_id":"cjiwxv55e005b58ugltwi5oj4","_id":"cjiwxv55g005j58ugsnzh94vs"},{"post_id":"cjiwxv54e002158ugu5b6j4q0","tag_id":"cjiwxv55f005g58ugoaojwbug","_id":"cjiwxv55h005l58ugo035f63f"},{"post_id":"cjiwxv54g002558ug7ym35ob9","tag_id":"cjiwxv55a004w58ug0uaxho4u","_id":"cjiwxv55h005m58ugim390gsg"},{"post_id":"cjiwxv54h002758ug2mf7acbq","tag_id":"cjiwxv55h005k58ugxvrneqav","_id":"cjiwxv55h005o58ug8ye3kcum"},{"post_id":"cjiwxv54j002c58ugvzkwtjn8","tag_id":"cjiwxv55a004w58ug0uaxho4u","_id":"cjiwxv55i005r58ug27a1djt4"},{"post_id":"cjiwxv54j002c58ugvzkwtjn8","tag_id":"cjiwxv55i005p58ugk1oou5cw","_id":"cjiwxv55i005s58ug2uajqkdi"},{"post_id":"cjiwxv54k002e58ugdfgr1vm7","tag_id":"cjiwxv55i005q58uggnujuo53","_id":"cjiwxv55j005v58ugrrxboesh"},{"post_id":"cjiwxv54k002e58ugdfgr1vm7","tag_id":"cjiwxv55a004w58ug0uaxho4u","_id":"cjiwxv55j005w58ugh3h7iio8"},{"post_id":"cjiwxv54l002h58ugo191fz9s","tag_id":"cjiwxv55j005u58ugpwss3yax","_id":"cjiwxv55k005y58ugfkmn61ao"},{"post_id":"cjiwxv54m002j58uguv4a7iud","tag_id":"cjiwxv55j005u58ugpwss3yax","_id":"cjiwxv55k005z58ugy0zgjgte"},{"post_id":"cjiwxv58j006058ugquuycp36","tag_id":"cjiwxv55j005u58ugpwss3yax","_id":"cjiwxv58n006458ug0qhu5j6w"},{"post_id":"cjiwxv58l006258ugylv00odp","tag_id":"cjiwxv55j005u58ugpwss3yax","_id":"cjiwxv58o006658ugc22223lh"},{"post_id":"cjiwxv58n006558ugcjp08p7x","tag_id":"cjiwxv58q006a58ug0gakd4y1","_id":"cjiwxv58w006i58ugnjaxvn4h"},{"post_id":"cjiwxv58n006558ugcjp08p7x","tag_id":"cjiwxv58u006e58ugskjfnv4m","_id":"cjiwxv58x006k58uger9lwcef"},{"post_id":"cjiwxv58o006758ug1qy9su65","tag_id":"cjiwxv58u006e58ugskjfnv4m","_id":"cjiwxv58x006m58ug2el6ijr6"},{"post_id":"cjiwxv58r006b58ug5vkq9he3","tag_id":"cjiwxv58x006l58ugimmtsj36","_id":"cjiwxv58y006p58ugh5hr4cgp"},{"post_id":"cjiwxv58r006b58ug5vkq9he3","tag_id":"cjiwxv58u006e58ugskjfnv4m","_id":"cjiwxv58z006q58ug6cffc3nf"}],"Tag":[{"name":"Android studio","_id":"cjiwxv53h000458ugxqebu5fm"},{"name":"jCenter","_id":"cjiwxv53l000958ug3tlcv1yt"},{"name":"Markdown","_id":"cjiwxv53o000e58ugycisyg7q"},{"name":"Hexo","_id":"cjiwxv53t000m58ugnzh1pqwz"},{"name":"JitPack","_id":"cjiwxv53z000z58uggltjrmvc"},{"name":"gradle","_id":"cjiwxv542001758ugwrf80mt2"},{"name":"Java","_id":"cjiwxv545001e58ugwnzkm50f"},{"name":"Java虚拟机","_id":"cjiwxv547001l58ug1akdhiip"},{"name":"python","_id":"cjiwxv54i002b58ug4prcxdss"},{"name":"pyspider","_id":"cjiwxv54m002i58ugpfjxv92c"},{"name":"爬虫","_id":"cjiwxv54o002m58ug2821kxjv"},{"name":"scrapy","_id":"cjiwxv54u003658ugvagqu4dm"},{"name":"串","_id":"cjiwxv54w003d58ugx3pd879c"},{"name":"数据结构","_id":"cjiwxv54x003i58ugsyfupobd"},{"name":"排序","_id":"cjiwxv550003u58ugsw0o844q"},{"name":"查找","_id":"cjiwxv552004558ugxttlqlvi"},{"name":"栈","_id":"cjiwxv554004858ug3y7zmx6d"},{"name":"队列","_id":"cjiwxv554004b58ugoa08pu6d"},{"name":"树","_id":"cjiwxv556004i58ugn0i8pu58"},{"name":"json","_id":"cjiwxv558004p58ugrwc2pwzc"},{"name":"线性表","_id":"cjiwxv558004r58ug5istibs5"},{"name":"自定义控件","_id":"cjiwxv55a004w58ug0uaxho4u"},{"name":"TextVideoView","_id":"cjiwxv55a004z58ugfn41e9g9"},{"name":"属性动画","_id":"cjiwxv55c005358ugmh1xr6qp"},{"name":"PathMeasure","_id":"cjiwxv55d005758ug5vbvw8ax"},{"name":"Canvas","_id":"cjiwxv55e005b58ugltwi5oj4"},{"name":"Paint","_id":"cjiwxv55f005g58ugoaojwbug"},{"name":"处理机调度","_id":"cjiwxv55h005k58ugxvrneqav"},{"name":"自定义绘制","_id":"cjiwxv55i005p58ugk1oou5cw"},{"name":"Android","_id":"cjiwxv55i005q58uggnujuo53"},{"name":"进程","_id":"cjiwxv55j005u58ugpwss3yax"},{"name":"数据链路层","_id":"cjiwxv58q006a58ug0gakd4y1"},{"name":"计算机网络","_id":"cjiwxv58u006e58ugskjfnv4m"},{"name":"物理层","_id":"cjiwxv58x006l58ugimmtsj36"}]}}